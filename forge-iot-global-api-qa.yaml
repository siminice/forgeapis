openapi: 3.0.0
info:
  version: v1
  title: Forge IoT Global WebAPIs
  description: >-
    <p>Check out our <a
    href="https://confluence.honeywell.com/display/HCEDMW/IoT">Documentation</a><p>
paths:
  /api/auth/applications/self/activities/{activityId}/systemtypes:
    get:
      tags:
        - ApplicationAuth
      summary: Retrieve Associated System Types
      description: "Retrieves associated system types for an application.<br><b>Example:</b> If a caller passes the activityId as \"RegisterSystem\", the API returns all system types on which the caller has \"RegisterSystem\" permissions. The application or user, trying to fetch this information, must have the required permissions on that system type.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ListMyPermissions</p>\r\n<p><b>Action:</b>RetrieveSystemTypesAssociatedToApplicationOnSystemTypeActivity</p>\r\n<p><b>Intended to be used by:</b>Application</p>\r\n<p><b>Is Standard for:</b>Application</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/self/activities/AlarmAcknowledge/systemtypes\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"SystemTypes\": [\r\n    \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n  ]\r\n}\n```\n</details>"
      operationId: >-
        ApplicationAuth_RetrieveSystemTypesAssociatedToApplicationOnSystemTypeActivity
      parameters:
        - name: activityId
          in: path
          description: System type activity for which the application requires permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved systemtypes.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
        '204':
          description: >-
            No Content: Application does not have the given system type activity
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiRetrieveSystemTypesResponse'
        '403':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not Found: System type activity is not found.'
        '500':
          description: 'InternalServerError: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/models/{modelId}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Model Permissions for a User
      description: "Only an authorized application or user can use this API to retrieve model permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetUserModelPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\",\r\n    \"ReadServiceUrls\",\r\n    \"AlarmConfiguration\",\r\n    \"ReadAlarmConfig\",\r\n    \"CreateAlarmConfig\",\r\n    \"ModifyAlarmConfig\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"SetModelToBeDefaultModel\",\r\n    \"DeleteModel\",\r\n    \"ReadEvents\",\r\n    \"CheckModelPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetUserModelPermissions
      parameters:
        - name: userId
          in: path
          description: User ID for which model permissions are retrieved.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Model ID for which the user's model permissions are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Model Permissions for a User
      description: "Only an authorized application or user can use this API to add model permissions for a user on a specified model.\r\n<p><b>Authorization:</b>ModelTypeOrGlobalActivity-ConfigureModelPermission</p>\r\n<p><b>Action:</b>AddModelPermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\",\r\n    \"ReadServiceUrls\",\r\n    \"AlarmConfiguration\",\r\n    \"ReadAlarmConfig\",\r\n    \"CreateAlarmConfig\",\r\n    \"ModifyAlarmConfig\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"SetModelToBeDefaultModel\",\r\n    \"DeleteModel\",\r\n    \"ReadEvents\",\r\n    \"CheckModelPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddModelPermissionsToUser
      parameters:
        - name: userId
          in: path
          description: User ID for which model permissions are added.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Type of model for which the user's permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (model permissions) to be assigned to the user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Model Permissions for a User
      description: "Only an authorized application or user can use this API to remove the user’s access to a list of model permissions.\r\n<p><b>Authorization:</b>ModelTypeOrGlobalActivity-ConfigureModelPermission</p>\r\n<p><b>Action:</b>RemoveModelPermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\",\r\n    \"ReadServiceUrls\",\r\n    \"AlarmConfiguration\",\r\n    \"ReadAlarmConfig\",\r\n    \"CreateAlarmConfig\",\r\n    \"ModifyAlarmConfig\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"SetModelToBeDefaultModel\",\r\n    \"DeleteModel\",\r\n    \"ReadEvents\",\r\n    \"CheckModelPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveModelPermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: User ID for which the model permissions are removed.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Model ID for which the user's model permissions are removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (model permissions) to be removed from a user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'InternalServerError: Unexpected failure during operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/models/{modelId}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Model Permissions for an Application
      description: "Only an authorized user or application can use this API to get model permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetApplicationModelPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\",\r\n    \"ReadServiceUrls\",\r\n    \"AlarmConfiguration\",\r\n    \"ReadAlarmConfig\",\r\n    \"CreateAlarmConfig\",\r\n    \"ModifyAlarmConfig\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"SetModelToBeDefaultModel\",\r\n    \"DeleteModel\",\r\n    \"ReadEvents\",\r\n    \"CheckModelPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetApplicationModelPermissions
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which model permissions are retrieved.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: >-
            Model ID for which the model permissions of an application are
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Model Permissions for an Application
      description: "Only an authorized application or user can use this API to add model permissions for an application on a specified model.\r\n<p><b>Authorization:</b>ModelTypeOrGlobalActivity-ConfigureModelPermission</p>\r\n<p><b>Action:</b>AddModelPermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Application</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\",\r\n    \"ReadServiceUrls\",\r\n    \"AlarmConfiguration\",\r\n    \"ReadAlarmConfig\",\r\n    \"CreateAlarmConfig\",\r\n    \"ModifyAlarmConfig\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"SetModelToBeDefaultModel\",\r\n    \"DeleteModel\",\r\n    \"ReadEvents\",\r\n    \"CheckModelPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddModelPermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which model permissions are added.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Model ID for which the application's model permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: >-
          List of model activities (permissions) to be added for the
          application.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Model Permissions for an Application
      description: "Only an authorized application or user can use this API to remove the application’s access to a list of model permissions.\r\n<p><b>Authorization:</b>ModelTypeOrGlobalActivity-ConfigureModelPermission</p>\r\n<p><b>Action:</b>RemoveModelPermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Application</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\",\r\n    \"ReadServiceUrls\",\r\n    \"AlarmConfiguration\",\r\n    \"ReadAlarmConfig\",\r\n    \"CreateAlarmConfig\",\r\n    \"ModifyAlarmConfig\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"SetModelToBeDefaultModel\",\r\n    \"DeleteModel\",\r\n    \"ReadEvents\",\r\n    \"CheckModelPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveModelPermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which the model permissions are removed.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Model ID for which the application's model permissions are removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of model activities.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'InternalServerError: Unexpected failure during operation.'
      deprecated: false
  /api/auth/model/activities:
    get:
      tags:
        - ApplicationAuth
      summary: Get Model Activities
      description: "Only an authorized application or user can use this API to retrieve all model activities.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetModelActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/model/activities\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ReadModel\",\r\n    \"DisplayName\": \"Read Model\"\r\n  },\r\n  {\r\n    \"Activity\": \"ModifyModel\",\r\n    \"DisplayName\": \"Modify Model\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadServiceUrls\",\r\n    \"DisplayName\": \"Read Service Urls\"\r\n  },\r\n  {\r\n    \"Activity\": \"AlarmConfiguration\",\r\n    \"DisplayName\": \"Alarm Configuration - Obsolete\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadAlarmConfig\",\r\n    \"DisplayName\": \"Read Alarm Configuration\"\r\n  },\r\n  {\r\n    \"Activity\": \"CreateAlarmConfig\",\r\n    \"DisplayName\": \"Create Alarm Configuration\"\r\n  },\r\n  {\r\n    \"Activity\": \"ModifyAlarmConfig\",\r\n    \"DisplayName\": \"Modify Alarm Configuration\"\r\n  },\r\n  {\r\n    \"Activity\": \"SubscribeToAnnotationStream\",\r\n    \"DisplayName\": \"Subscribe To Annotation Stream\"\r\n  },\r\n  {\r\n    \"Activity\": \"SetModelToBeDefaultModel\",\r\n    \"DisplayName\": \"Set Model To Be Default Model\"\r\n  },\r\n  {\r\n    \"Activity\": \"DeleteModel\",\r\n    \"DisplayName\": \"Delete Model\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadEvents\",\r\n    \"DisplayName\": \"Permission To Read Events\"\r\n  },\r\n  {\r\n    \"Activity\": \"CheckModelPermissions\",\r\n    \"DisplayName\": \"CheckModelPermissions - Obsolete\"\r\n  },\r\n  {\r\n    \"Activity\": \"CheckAssetPermissions\",\r\n    \"DisplayName\": \"Check Permissions on Asset in a Model\"\r\n  }\r\n]\n```\n</details>"
      operationId: ApplicationAuth_GetModelActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved model activities.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/modeltype/activities:
    get:
      tags:
        - ApplicationAuth
      summary: Get Model Type Activities
      description: "Only an authorized application or user can use this API to retrieve all model type activities.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetModelTypeActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/modeltype/activities\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ReadModel\",\r\n    \"DisplayName\": \"Read Model\"\r\n  },\r\n  {\r\n    \"Activity\": \"ModifyModel\",\r\n    \"DisplayName\": \"Modify Model\"\r\n  }\r\n]\n```\n</details>"
      operationId: ApplicationAuth_GetModelTypeActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved model type activities.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/systems/{systemGuid}:
    get:
      tags:
        - ApplicationAuth
      summary: >-
        OBSOLETE: Gets system permissions for an application.This will be
        deprecated by Oct 31, 2016, use GetSystemPermissionsOfApplication
        instead
      description: "<div>Given applicationGuid and systemGuid, this API returns the system activities </div>\r\n<div>This will be deprecated by Oct 31, 2016, use GetSystemPermissionsOfApplication instead </div>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetApplicationSystemPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: ApplicationAuth_GetApplicationSystemPermissions
      parameters:
        - name: applicationGuid
          in: path
          description: Application Guid
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: SystemGuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
      deprecated: true
    post:
      tags:
        - ApplicationAuth
      summary: Add System Permissions to an Application
      description: "Only an authorized application or user can use this API to add system permissions for an application on a specified system.\r\n<p><b>Authorization:</b>SystemTypeActivityBySystem-ConfigureSystemPermissionForSystemType</p>\r\n<p><b>Action:</b>AddSystemPermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Application</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddSystemPermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which system permissions are added.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: >-
            System GUID for which the application's system permissions are
            added.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiPermissionsRequest2'
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove System Permissions for an Application
      description: "Only an authorized application or user can use this API to remove the application’s access to a list of system permissions.\r\n<p><b>Authorization:</b>SystemTypeActivityBySystem-ConfigureSystemPermissionForSystemType</p>\r\n<p><b>Action:</b>RemoveSystemPermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Application</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxx-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveSystemPermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which system permissions are removed.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: >-
            SystemGuid of the system for which the application’s system
            permissions are removed.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiPermissionsRequest2'
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'InternalServerError: Unexpected failure during internal operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/systemtypes/{systemType}:
    get:
      tags:
        - ApplicationAuth
      summary: Get System Permissions for an Application
      description: "Only an authorized application or user can use this API to fetch system permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>GetApplicationSystemTypePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"registersystemtype\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetApplicationSystemTypePermissions
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which system permissions are retrieved.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: >-
            SystemGuid for which the application's system permissions are
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '400':
          description: Bad Requset:Invalid Application ID.
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Adds system type permissions to an application.
      description: "Only an authorized application or user can use this API to add system type permissions for an application on a specific systemType.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>AddSystemTypePermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ManageFixtureSystemTypes\",\r\n    \"ManageFixtureSystemTypesMapping\",\r\n    \"RegisterSystemType\",\r\n    \"FirmwareAdmin\",\r\n    \"ConfigureSystemPermissionForSystemType\",\r\n    \"DeProvisionSystem\",\r\n    \"DeRegisterSystem\",\r\n    \"AddRedundantPublicKey\",\r\n    \"SearchSystemRegistryBySystemTypeAndId\",\r\n    \"PublishSystemAnnotationEvent\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"RegisterSystem\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"EnableDisableSystem\",\r\n    \"SearchSystemRegistry\",\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddSystemTypePermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which system type permissions are added.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: >-
            SystemType for which the application's system type permissions are
            added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of system type activities.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '201':
          description: 'Created: Successfully granted permissions.'
        '400':
          description: 'Bad Request: Invalid Application ID/requests.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/globalpermissions/{globalTenantName}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Global Permissions for an Application
      description: "Only an authorized application or user can use this API to retrieve global permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetApplicationGlobalPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/globalpermissions/xxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"CustomApplications\",\r\n    \"ImsConfigureApplication\",\r\n    \"ImsManageUsers\",\r\n    \"ImsUpdateUser\",\r\n    \"ImsDeleteUser\",\r\n    \"ImsReadUser\",\r\n    \"RegisterSystem\",\r\n    \"CreateFixture\",\r\n    \"ManageSystemType\",\r\n    \"ConfigureSystemPermission\",\r\n    \"CreateSystemPermissions\",\r\n    \"CheckSystemPermission\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"ManageFixture\",\r\n    \"CreateUser\",\r\n    \"ManageSystemService\",\r\n    \"ManageDeviceType\",\r\n    \"ConfigureDeviceTypePermission\",\r\n    \"ReadDeviceType\",\r\n    \"CreateCustomApplication\",\r\n    \"RegisterModel\",\r\n    \"ConfigureSystemServicePermission\",\r\n    \"ReadServiceUrls\",\r\n    \"ListMyPermissions\",\r\n    \"DeleteTenantDetails\",\r\n    \"ManageCertificates\",\r\n    \"ManageProjectPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetApplicationGlobalPermissions
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which global permissions are retrieved.
          required: true
          schema:
            type: string
        - name: globalTenantName
          in: path
          description: >-
            Name of global tenant for which the application’s global permissions
            are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Global Permissions for an Application
      description: "Only an authorized application or user can use this API to add global permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>AddGlobalPermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/globalpermissions/xxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"RegisterModel\",\r\n    \"RegisterModelType\",\r\n    \"RegisterSystem\",\r\n    \"DeProvisionSystem\",\r\n    \"ReadServiceUrls\",\r\n    \"ConfigureSystemPermission\",\r\n    \"CreateSystemPermissions\",\r\n    \"GetSubscription\",\r\n    \"ManageSubscriptions\",\r\n    \"CreateDeleteAnnotationStream\",\r\n    \"ManageAnnotationStream\",\r\n    \"CreateDeleteMessageStream\",\r\n    \"ManageMessageStream\",\r\n    \"ConfigureModelChangeSubscription\",\r\n    \"ManageSystemType\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"ConfigureModelTypePermission\",\r\n    \"ConfigureAlertSubscription\",\r\n    \"ReadConnectionDetails\",\r\n    \"ReadTenantDetails\",\r\n    \"ReadSystemGuidToModelDirectory\",\r\n    \"ListModels\",\r\n    \"ListModelTypes\",\r\n    \"CreateFixture\",\r\n    \"ManageFixture\",\r\n    \"SearchSystemRegistryBySystemGuid\",\r\n    \"CheckSelfPermissions\",\r\n    \"ManageSubsystems\",\r\n    \"CheckPermissions\",\r\n    \"DeleteTenantDetails\",\r\n    \"ConfigureSystemServicePermission\",\r\n    \"RegisterSystemType\",\r\n    \"ConfigureModelPermission\",\r\n    \"ManageCertificates\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddGlobalPermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which global permissions are added.
          required: true
          schema:
            type: string
        - name: globalTenantName
          in: path
          description: >-
            Name of global tenant for which the application's global permissions
            are added.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiPermissionsRequest'
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Global Permissions for an Application
      description: "Only an authorized application or user can use this API to remove the application’s access to a list of global permissions.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>RemoveGlobalPermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/globalpermissions/xxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"RegisterSystem\",\r\n    \"CreateFixture\",\r\n    \"ManageSystemType\",\r\n    \"CreateSystemPermissions\",\r\n    \"CheckSystemPermission\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"ManageFixture\",\r\n    \"CreateUser\",\r\n    \"ManageSystemService\",\r\n    \"ManageDeviceType\",\r\n    \"ConfigureDeviceTypePermission\",\r\n    \"ReadDeviceType\",\r\n    \"CreateCustomApplication\",\r\n    \"RegisterModel\",\r\n    \"ConfigureSystemServicePermission\",\r\n    \"ReadServiceUrls\",\r\n    \"ListMyPermissions\",\r\n    \"DeleteTenantDetails\",\r\n    \"ManageCertificates\",\r\n    \"ManageProjectPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveGlobalPermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which global permissions are removed.
          required: true
          schema:
            type: string
        - name: globalTenantName
          in: path
          description: >-
            Name of the global tenant for which application’s global permissions
            are removed.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiPermissionsRequest'
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/users/{userId}/globalpermissions/{globalTenantName}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Global Permissions for a User
      description: "Only an authorized application or user can use this API to retrieve global permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetUserGlobalPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/globalpermissions/xxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ImsReadUser\",\r\n    \"ListMyPermissions\",\r\n    \"CustomApplications\",\r\n    \"RegisterSystem\",\r\n    \"GetSubscription\",\r\n    \"ManageSubscriptions\",\r\n    \"CreateCustomApplication\",\r\n    \"ReadConnectionDetails\",\r\n    \"ConfigureSystemPermission\",\r\n    \"CreateSystemPermissions\",\r\n    \"CheckSystemPermission\",\r\n    \"ReadTenantDetails\",\r\n    \"RegisterModel\",\r\n    \"RegisterModelType\",\r\n    \"ReadSystemGuidToModelDirectory\",\r\n    \"ConfigureModelTypePermission\",\r\n    \"ListModelTypes\",\r\n    \"ConfigureAlertSubscription\",\r\n    \"ListModels\",\r\n    \"ReadServiceUrls\",\r\n    \"WriteServiceUrls\",\r\n    \"ConfigureModelChangeSubscription\",\r\n    \"ManageAnnotationStream\",\r\n    \"ManageMessageStream\",\r\n    \"ManageSystemType\",\r\n    \"CreateDeleteAnnotationStream\",\r\n    \"CreateDeleteMessageStream\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"ConfigureDeviceTypePermission\",\r\n    \"ConfigureSystemServicePermission\",\r\n    \"CreateFixture\",\r\n    \"ManageFixture\",\r\n    \"CreateUser\",\r\n    \"ManageDeviceType\",\r\n    \"ReadDeviceType\",\r\n    \"SearchSystemRegistryBySystemGuid\",\r\n    \"ManageSystemService\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"RemoveSystemPermissions\",\r\n    \"DeProvisionSystem\",\r\n    \"FirmwareAdmin\",\r\n    \"CheckSelfPermissions\",\r\n    \"CheckPermissions\",\r\n    \"ManageSubsystems\",\r\n    \"SearchSubsystems\",\r\n    \"DeleteTenantDetails\",\r\n    \"ManageCertificates\",\r\n    \"ManageProjects\",\r\n    \"ManageProjectTags\",\r\n    \"ManageProjectActivities\",\r\n    \"ManageProjectPermissions\",\r\n    \"CheckProjectPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetUserGlobalPermissions
      parameters:
        - name: userId
          in: path
          description: User ID for which global permissions are retrieved.
          required: true
          schema:
            type: string
        - name: globalTenantName
          in: path
          description: >-
            Name of the global tenant for which the user's global permissions
            are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Global Permissions for a User
      description: "Only an authorized application or user can use this API to add global permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>AddGlobalPermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/globalpermissions/xxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ConfigureDeviceTypePermission\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddGlobalPermissionsToUser
      parameters:
        - name: userId
          in: path
          description: User ID for which global permissions are added.
          required: true
          schema:
            type: string
        - name: globalTenantName
          in: path
          description: >-
            Name of global tenant for which the user's global permissions are
            added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (global permissions) to be assigned to the user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Global Permissions for a User
      description: "Only an authorized application or user can use this API to remove the user’s access from a list of global permissions.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>RemoveGlobalPermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/globalpermissions/xxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ListMyPermissions\",\r\n    \"CustomApplications\",\r\n    \"RegisterSystem\",\r\n    \"GetSubscription\",\r\n    \"ManageSubscriptions\",\r\n    \"CreateCustomApplication\",\r\n    \"ReadConnectionDetails\",\r\n    \"ConfigureSystemPermission\",\r\n    \"CreateSystemPermissions\",\r\n    \"CheckSystemPermission\",\r\n    \"ReadTenantDetails\",\r\n    \"RegisterModel\",\r\n    \"RegisterModelType\",\r\n    \"ReadSystemGuidToModelDirectory\",\r\n    \"ConfigureModelTypePermission\",\r\n    \"ListModelTypes\",\r\n    \"ConfigureAlertSubscription\",\r\n    \"ListModels\",\r\n    \"ReadServiceUrls\",\r\n    \"WriteServiceUrls\",\r\n    \"ConfigureModelChangeSubscription\",\r\n    \"ManageAnnotationStream\",\r\n    \"ManageMessageStream\",\r\n    \"ManageSystemType\",\r\n    \"CreateDeleteAnnotationStream\",\r\n    \"CreateDeleteMessageStream\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"ConfigureDeviceTypePermission\",\r\n    \"ConfigureSystemServicePermission\",\r\n    \"CreateFixture\",\r\n    \"ManageFixture\",\r\n    \"CreateUser\",\r\n    \"ManageDeviceType\",\r\n    \"ReadDeviceType\",\r\n    \"SearchSystemRegistryBySystemGuid\",\r\n    \"ManageSystemService\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"RemoveSystemPermissions\",\r\n    \"DeProvisionSystem\",\r\n    \"FirmwareAdmin\",\r\n    \"CheckSelfPermissions\",\r\n    \"CheckPermissions\",\r\n    \"ManageSubsystems\",\r\n    \"SearchSubsystems\",\r\n    \"DeleteTenantDetails\",\r\n    \"ManageCertificates\",\r\n    \"ManageProjects\",\r\n    \"ManageProjectTags\",\r\n    \"ManageProjectActivities\",\r\n    \"ManageProjectPermissions\",\r\n    \"CheckProjectPermissions\",\r\n    \"CheckAssetPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveGlobalPermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: User ID for which global permissions are removed.
          required: true
          schema:
            type: string
        - name: globalTenantName
          in: path
          description: >-
            Name of the global tenant for which the user’s global permissions
            are removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (global permissions) to be removed from a user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/services/system:
    get:
      tags:
        - ApplicationAuth
      summary: Get System Activities
      description: "Gets all activities applicable to a system.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetSystemServiceActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/services/system\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ReadPointHistory\",\r\n    \"DisplayName\": \"Read Point history\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadPointValues\",\r\n    \"DisplayName\": \"Read Point(s)\"\r\n  },\r\n  {\r\n    \"Activity\": \"WritePointValues\",\r\n    \"DisplayName\": \"Write Point(s)\"\r\n  },\r\n  {\r\n    \"Activity\": \"AlarmAcknowledge\",\r\n    \"DisplayName\": \"Alarm Acknowledge\"\r\n  },\r\n  {\r\n    \"Activity\": \"SubscribeToAlarms\",\r\n    \"DisplayName\": \"Subscribe Alarms\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageConnections\",\r\n    \"DisplayName\": \"Connection Monitor\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageServices\",\r\n    \"DisplayName\": \"Manage Services\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadServiceUrls\",\r\n    \"DisplayName\": \"Read Service Urls\"\r\n  },\r\n  {\r\n    \"Activity\": \"SubscribeToAnnotationStream\",\r\n    \"DisplayName\": \"Subscribe To Annotation Stream\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManagePointHistory\",\r\n    \"DisplayName\": \"Manage Point History\"\r\n  },\r\n  {\r\n    \"Activity\": \"SendSystemCommand\",\r\n    \"DisplayName\": \"Send Command To System\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageSystemToModelLinkage\",\r\n    \"DisplayName\": \"Manage System To Model Linkage\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadEvents\",\r\n    \"DisplayName\": \"Permission To Read Events\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageEvents\",\r\n    \"DisplayName\": \"Permission To Manage Events\"\r\n  },\r\n  {\r\n    \"Activity\": \"UploadFile\",\r\n    \"DisplayName\": \"Permission to upload file\"\r\n  }\r\n]\n```\n</details>"
      operationId: ApplicationAuth_GetSystemServiceActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/services/systemtype:
    get:
      tags:
        - ApplicationAuth
      summary: Get System Type Activities
      description: "Gets all activities applicable to system types.<br>Only an authorized application or user can this API to retrieve all system type activities.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>GetSystemTypeServiceActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/services/systemtype\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ManageFixtureSystemTypes\",\r\n    \"DisplayName\": \"Manage Fixture SystemTypes\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageFixtureSystemTypesMapping\",\r\n    \"DisplayName\": \"Manage Fixture and SystemType mapping\"\r\n  },\r\n  {\r\n    \"Activity\": \"RegisterSystemType\",\r\n    \"DisplayName\": \"Register system with specified SystemType\"\r\n  },\r\n  {\r\n    \"Activity\": \"FirmwareAdmin\",\r\n    \"DisplayName\": \"Firmware Admin\"\r\n  },\r\n  {\r\n    \"Activity\": \"ConfigureSystemPermissionForSystemType\",\r\n    \"DisplayName\": \"Configure System Permission For SystemType\"\r\n  },\r\n  {\r\n    \"Activity\": \"DeProvisionSystem\",\r\n    \"DisplayName\": \"Deprovision System\"\r\n  },\r\n  {\r\n    \"Activity\": \"DeRegisterSystem\",\r\n    \"DisplayName\": \"Deregister System\"\r\n  },\r\n  {\r\n    \"Activity\": \"AddRedundantPublicKey\",\r\n    \"DisplayName\": \"Add Redundant Public Key\"\r\n  },\r\n  {\r\n    \"Activity\": \"SearchSystemRegistryBySystemTypeAndId\",\r\n    \"DisplayName\": \"Search system registry by SystemType and SystemId\"\r\n  },\r\n  {\r\n    \"Activity\": \"PublishSystemAnnotationEvent\",\r\n    \"DisplayName\": \"Publish a system annotation event\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadSystemProvisioningStatus\",\r\n    \"DisplayName\": \"Read system provisioning status\"\r\n  },\r\n  {\r\n    \"Activity\": \"RegisterSystem\",\r\n    \"DisplayName\": \"Register System\"\r\n  },\r\n  {\r\n    \"Activity\": \"ConfigureSystemTypePermission\",\r\n    \"DisplayName\": \"Configure system type permission\"\r\n  },\r\n  {\r\n    \"Activity\": \"EnableDisableSystem\",\r\n    \"DisplayName\": \"Enable or Disable a system\"\r\n  },\r\n  {\r\n    \"Activity\": \"SearchSystemRegistry\",\r\n    \"DisplayName\": \"Search System Registry\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadPointHistory\",\r\n    \"DisplayName\": \"Read Point history\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadPointValues\",\r\n    \"DisplayName\": \"Read Point(s)\"\r\n  },\r\n  {\r\n    \"Activity\": \"WritePointValues\",\r\n    \"DisplayName\": \"Write Point(s)\"\r\n  },\r\n  {\r\n    \"Activity\": \"AlarmAcknowledge\",\r\n    \"DisplayName\": \"Alarm Acknowledge\"\r\n  },\r\n  {\r\n    \"Activity\": \"SubscribeToAlarms\",\r\n    \"DisplayName\": \"Subscribe Alarms\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageConnections\",\r\n    \"DisplayName\": \"Connection Monitor\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageServices\",\r\n    \"DisplayName\": \"Manage Services\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadServiceUrls\",\r\n    \"DisplayName\": \"Read Service Urls\"\r\n  },\r\n  {\r\n    \"Activity\": \"SubscribeToAnnotationStream\",\r\n    \"DisplayName\": \"Subscribe To Annotation Stream\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManagePointHistory\",\r\n    \"DisplayName\": \"Manage Point History\"\r\n  },\r\n  {\r\n    \"Activity\": \"SendSystemCommand\",\r\n    \"DisplayName\": \"Send Command To System\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageSystemToModelLinkage\",\r\n    \"DisplayName\": \"Manage System To Model Linkage\"\r\n  },\r\n  {\r\n    \"Activity\": \"ReadEvents\",\r\n    \"DisplayName\": \"Permission To Read Events\"\r\n  },\r\n  {\r\n    \"Activity\": \"ManageEvents\",\r\n    \"DisplayName\": \"Permission To Manage Events\"\r\n  },\r\n  {\r\n    \"Activity\": \"UploadFile\",\r\n    \"DisplayName\": \"Permission to upload file\"\r\n  }\r\n]\n```\n</details>"
      operationId: ApplicationAuth_GetSystemTypeServiceActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '403':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/services/global:
    get:
      tags:
        - ApplicationAuth
      summary: Get Global Activities
      description: "Gets all activities applicable to global services. <br>Only an authorized application or user can use this API to retrieve the list of all global activities.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetGlobalServiceActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/services/global\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"RegisterSystem\",\r\n    \"DisplayName\": \"Register System\"\r\n  },\r\n  {\r\n    \"Activity\": \"RegisterModel\",\r\n    \"DisplayName\": \"Register Model\"\r\n  }\r\n]\n```\n</details>"
      operationId: ApplicationAuth_GetGlobalServiceActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/services/tenant:
    get:
      tags:
        - ApplicationAuth
      summary: Get Tenant Activities
      description: "Gets list of activities applicable to tenant services.<br>Only an authorized application or user can use this API to retrieve all tenant activities.</br><br><b>Note</b>: This API is intended for internal use only.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetTenantServiceActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/services/tenant\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ReadDeviceDetails\",\r\n    \"DisplayName\": \"Read Device Details\"\r\n  },\r\n  {\r\n    \"Activity\": \"SubscribeToAnnotationStream\",\r\n    \"DisplayName\": \"Subscribe To Annotation Stream\"\r\n  }\r\n]\n```\n</details>"
      operationId: ApplicationAuth_GetTenantServiceActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/systems/{systemGuid}/permissions:
    post:
      tags:
        - ApplicationAuth
      summary: Create Permissions for a System
      description: "This API creates standard permissions for a system. Only an authorized application or user uses this API to create standard permissions for a system.<br><b>Note:</b> This API is invoked internally as a part of device provisioning. It is not intended to be used externally.</br>\r\n<p><b>Authorization:</b>GlobalActivity-CreateSystemPermissions</p>\r\n<p><b>Action:</b>CreatePermissionsForSystem</p>\r\n<p><b>Intended to be used by:</b>Internal</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/permissions\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ManageServices\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_CreatePermissionsForSystem
      parameters:
        - name: systemGuid
          in: path
          description: GUID of the system for which standard permissions are created.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities to be added to the Active Directory group.
        required: true
      responses:
        '200':
          description: 'OK: Successfully created permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Permissions for a System.
      description: "Removes standard permissions for a system. Only an authorized application or user can use this API to delete standard permissions for a system. .\r\n            <br><b>Note:</b> This API is intended for internal use only.</br>\r\n<p><b>Authorization:</b>GlobalActivity-RemoveSystemPermissions</p>\r\n<p><b>Action:</b>RemovePermissionsForSystem</p>\r\n<p><b>Intended to be used by:</b>Internal</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/permissions\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ManageServices\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemovePermissionsForSystem
      parameters:
        - name: systemGuid
          in: path
          description: SystemGuid for which standard permissions are deleted.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities to be removed from the Active Directory group.
        required: true
      responses:
        '200':
          description: 'Ok: Successfully deleted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/models/{modelId}/permissions/create:
    post:
      tags:
        - ApplicationAuth
      summary: Create Permissions for a Model
      description: "This API Creates standard permissions for a model.Only an authorized application or user an use this API to create standard permissions for a model.<br><b>Note:</b> This API is invoked internally as a part of model creation workflow. It is not intended to be used externally.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>CreatePermissionsForModel</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/permissions/create\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_CreatePermissionsForModel
      parameters:
        - name: modelId
          in: path
          description: ID of the model for which standard permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities to add to the Active Directory group.
        required: true
      responses:
        '200':
          description: 'OK: Successfully created permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/systems/{systemGuid}:
    get:
      tags:
        - ApplicationAuth
      summary: >-
        OBSOLETE: Gets system permissions for the user.This will be deprecated
        by Oct 31, 2016, use GetSystemPermissionsOfUser instead
      description: "<div>Given userId and systemGuid, this api returns the system activities </div>\r\n<div>This will be deprecated by Oct 31, 2016, use GetSystemPermissionsOfUser instead </div>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetUserSystemPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: ApplicationAuth_GetUserSystemPermissions
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: SystemGuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
      deprecated: true
    post:
      tags:
        - ApplicationAuth
      summary: Add System Permissions for a User
      description: "Only an authorized application or user can use this API to add system permissions for a user on a specified system.\r\n<p><b>Authorization:</b>SystemTypeActivityBySystem-ConfigureSystemPermissionForSystemType</p>\r\n<p><b>Action:</b>AddSystemPermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddSystemPermissionsToUser
      parameters:
        - name: userId
          in: path
          description: User ID for which system permissions are added.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: GUID of the system for which the user's permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (system permissions) to be assigned to the user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove System Permissions for a User
      description: "Only an authorized application or user can use this API to remove the user’s access from a list of system permissions.\r\n<p><b>Authorization:</b>SystemTypeActivityBySystem-ConfigureSystemPermissionForSystemType</p>\r\n<p><b>Action:</b>RemoveSystemPermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveSystemPermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: User ID for which system permissions are removed.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: SystemGuid for which the user's system permissions are removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (system permissions) to be removed for a user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/v2/applications/{applicationGuid}/systems/{systemGuid}:
    get:
      tags:
        - ApplicationAuth
      summary: Get System Permissions for an Application
      description: "Only an authorized application or user can use this API to fetch system permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-CheckSystemPermission</p>\r\n<p><b>Action:</b>GetSystemPermissionsOfApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxx.dsentience.net/api/auth/v2/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetSystemPermissionsOfApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which system permissions are retrieved.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: >-
            SystemGuid for which the application's system permissions are
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/users/{userId}/systemtypes/{systemType}:
    get:
      tags:
        - ApplicationAuth
      summary: Get System Type Permissions for a User
      description: "Only an authorized application can use this API to fetch system type permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>GetUserSystemTypePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"uploadfile\",\r\n    \"manageevents\",\r\n    \"readevents\",\r\n    \"managesystemtomodellinkage\",\r\n    \"sendsystemcommand\",\r\n    \"managepointhistory\",\r\n    \"subscribetoannotationstream\",\r\n    \"readserviceurls\",\r\n    \"manageservices\",\r\n    \"manageconnections\",\r\n    \"subscribetoalarms\",\r\n    \"alarmacknowledge\",\r\n    \"writepointvalues\",\r\n    \"readpointvalues\",\r\n    \"readpointhistory\",\r\n    \"searchsystemregistry\",\r\n    \"enabledisablesystem\",\r\n    \"configuresystemtypepermission\",\r\n    \"registersystem\",\r\n    \"readsystemprovisioningstatus\",\r\n    \"publishsystemannotationevent\",\r\n    \"addredundantpublickey\",\r\n    \"configuresystempermissionforsystemtype\",\r\n    \"registersystemtype\",\r\n    \"managefixturesystemtypesmapping\",\r\n    \"deregistersystem\",\r\n    \"managefixturesystemtypes\",\r\n    \"searchsystemregistrybysystemtypeandid\",\r\n    \"deprovisionsystem\",\r\n    \"firmwareadmin\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetUserSystemTypePermissions
      parameters:
        - name: userId
          in: path
          description: User ID for which system type permissions are retrieved.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: >-
            SystemType for which the user's system type permissions are
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '400':
          description: Bad Request:Invalid User ID.
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add System Type Permissions for a User
      description: "Only an authorized application or user can use this API to add system type permissions for a user.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>AddSystemTypePermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ManageFixtureSystemTypes\",\r\n    \"ManageFixtureSystemTypesMapping\",\r\n    \"RegisterSystemType\",\r\n    \"FirmwareAdmin\",\r\n    \"ConfigureSystemPermissionForSystemType\",\r\n    \"DeProvisionSystem\",\r\n    \"DeRegisterSystem\",\r\n    \"AddRedundantPublicKey\",\r\n    \"SearchSystemRegistryBySystemTypeAndId\",\r\n    \"PublishSystemAnnotationEvent\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"RegisterSystem\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"EnableDisableSystem\",\r\n    \"SearchSystemRegistry\",\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddSystemTypePermissionsToUser
      parameters:
        - name: userId
          in: path
          description: User ID for which system type permissions are added.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: Type of system for which the user's permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: >-
          List of activities (system type permissions) to be assigned to the
          user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '201':
          description: 'Created: Successfully granted permissions.'
        '400':
          description: "Bad Request:\r\n            <ul><li>UserId is not a GUID or SID.</li><li>UserId is an empty GUID.</li><li>The activities array in the request body is null or empty.</li></ul>"
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove System Type Permissions for a User
      description: "Only an authorized application or user can use this API to remove the user’s access from a list of system type permissions.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>RemoveSystemTypePermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ManageFixtureSystemTypes\",\r\n    \"ManageFixtureSystemTypesMapping\",\r\n    \"RegisterSystemType\",\r\n    \"FirmwareAdmin\",\r\n    \"ConfigureSystemPermissionForSystemType\",\r\n    \"DeProvisionSystem\",\r\n    \"DeRegisterSystem\",\r\n    \"AddRedundantPublicKey\",\r\n    \"SearchSystemRegistryBySystemTypeAndId\",\r\n    \"PublishSystemAnnotationEvent\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"RegisterSystem\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"EnableDisableSystem\",\r\n    \"SearchSystemRegistry\",\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveSystemTypePermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: User ID for which the system type permissions are removed.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: SystemType for which the user’s system type permissions are removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (system type permissions) to be removed for a user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '400':
          description: Bad Request:Invalid UserId/Activities.
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/v2/users/{userId}/systems/{systemGuid}:
    get:
      tags:
        - ApplicationAuth
      summary: Get System Permissions for a User
      description: "Only an authorized user or application can use this API to retrieve system permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-CheckSystemPermission</p>\r\n<p><b>Action:</b>GetSystemPermissionsOfUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/v2/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ReadPointHistory\",\r\n    \"ManageServices\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetSystemPermissionsOfUser
      parameters:
        - name: userId
          in: path
          description: User ID for which system permissions are retrieved.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: SystemGuid for which the user's system permissions are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/systems/{systemGuid}/groups:
    post:
      tags:
        - ApplicationAuth
      summary: >-
        OBSOLETE: CreateGroupsForSystem will be deprecated by Jan 18, 2017, use
        CreatePermissionsForSystem instead
      description: "<div>CreateGroupsForSystem will be deprecated by Jan 18, 2017, use CreatePermissionsForSystem instead</div>\r\n<p><b>Authorization:</b>GlobalActivity-CreateSystemPermissions</p>\r\n<p><b>Action:</b>CreateGroupsForSystem</p>\r\n<p><b>Intended to be used by:</b>Internal</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: ApplicationAuth_CreateGroupsForSystem
      parameters:
        - name: systemGuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        required: true
      responses:
        '200':
          description: Ok
      deprecated: true
  /api/auth/applications/{applicationGuid}/tenantpermissions/{tenantName}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Tenant Permissions for an Application
      description: "Only an authorized application or user can use this API to retrieve tenant permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetApplicationTenantPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tenantpermissions/xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ReadDeviceDetails\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"PublishTenantAnnotationEvent\",\r\n    \"ReadEvents\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetApplicationTenantPermissions
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which tenant permissions are retrieved.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: >-
            Name of the tenant for which tenant permissions of the application
            are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Tenant Permissions for an Application
      description: "Only an authorized application or user can use this API to add tenant permissions for an application.<br><b>Note:</b> This API is invoked internally and not externally.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>AddTenantPermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tenantpermissions/xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadDeviceDetails\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"PublishTenantAnnotationEvent\",\r\n    \"ReadEvents\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddTenantPermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: Application GUID for which tenant permissions are added.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: >-
            Name of tenant for which the application's tenant permissions are
            added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: >-
          List of activities (tenant permissions) to be assigned to the
          application.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Tenant Permissions for an Application
      description: "Only an authorized application or user can use this API to remove the application’s access to a list of tenant permissions.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>RemoveTenantPermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tenantpermissions/xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadDeviceDetails\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"PublishTenantAnnotationEvent\",\r\n    \"ReadEvents\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveTenantPermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which tenant permissions are removed.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: >-
            Name of the tenant for which the application’s tenant permissions
            are removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: >-
          List of activities (tenant permissions) to be removed for an
          application.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/users/{userId}/tenantpermissions/{tenantName}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Tenant Permissions for a User
      description: "Only an authorized application or user can use this API to retrieve tenant permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>GetUserTenantPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tenantpermissions/xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"ReadDeviceDetails\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"PublishTenantAnnotationEvent\",\r\n    \"ReadEvents\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetUserTenantPermissions
      parameters:
        - name: userId
          in: path
          description: User ID for which tenant permissions are retrieved.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: >-
            Name of tenant for which the user's tenant permissions are
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemModelLevelActivityResponse'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Tenant Permissions for a User
      description: "Only an authorized application or user uses this API to add tenant permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>AddTenantPermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tenantpermissions/xxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadDeviceDetails\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"PublishTenantAnnotationEvent\",\r\n    \"ReadEvents\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddTenantPermissionsToUser
      parameters:
        - name: userId
          in: path
          description: User ID for which tenant permissions are added.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: Name of tenant for which the user's permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (tenant permissions) to be assigned to the user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Tenant Permissions for a User
      description: "Only an authorized application or user can use this API to remove the user’s access from a list of tenant permissions.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemPermission</p>\r\n<p><b>Action:</b>RemoveTenantPermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tenantpermissions/xxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ReadDeviceDetails\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"PublishTenantAnnotationEvent\",\r\n    \"ReadEvents\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveTenantPermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: User ID for which tenant permissions are removed.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: >-
            Name of the tenant for which the user’s tenant permissions are
            removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: List of activities (tenant permissions) to be removed from a user.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/applications/{applicataionGuid}/systemtypes/{systemType}:
    delete:
      tags:
        - ApplicationAuth
      summary: Remove System Type Permissions for an Application
      description: "Only an authorized application or user can use this API to remove the application’s access to a list of system type permissions.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-ConfigureSystemTypePermission</p>\r\n<p><b>Action:</b>RemoveSystemTypePermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"ManageFixtureSystemTypes\",\r\n    \"ManageFixtureSystemTypesMapping\",\r\n    \"RegisterSystemType\",\r\n    \"FirmwareAdmin\",\r\n    \"ConfigureSystemPermissionForSystemType\",\r\n    \"DeProvisionSystem\",\r\n    \"DeRegisterSystem\",\r\n    \"AddRedundantPublicKey\",\r\n    \"SearchSystemRegistryBySystemTypeAndId\",\r\n    \"PublishSystemAnnotationEvent\",\r\n    \"ReadSystemProvisioningStatus\",\r\n    \"RegisterSystem\",\r\n    \"ConfigureSystemTypePermission\",\r\n    \"EnableDisableSystem\",\r\n    \"SearchSystemRegistry\",\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"WritePointValues\",\r\n    \"AlarmAcknowledge\",\r\n    \"SubscribeToAlarms\",\r\n    \"ManageConnections\",\r\n    \"ManageServices\",\r\n    \"ReadServiceUrls\",\r\n    \"SubscribeToAnnotationStream\",\r\n    \"ManagePointHistory\",\r\n    \"SendSystemCommand\",\r\n    \"ManageSystemToModelLinkage\",\r\n    \"ReadEvents\",\r\n    \"ManageEvents\",\r\n    \"UploadFile\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveSystemTypePermissionsFromApplication
      parameters:
        - name: applicataionGuid
          in: path
          description: >-
            GUID of the application for which system type permissions are
            removed.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: >-
            System type for which the application’s system type permissions are
            removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiPermissionsRequest'
        description: The activities (permissions) to be removed for the application.
        required: true
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '400':
          description: Bad Request:Invalid Application ID/activities.
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/users:
    post:
      tags:
        - ApplicationAuth
      summary: Create a User in Honeywell Sentience Platform
      description: "A user can be created in different databases, depending on the value specified in the header (IdentityTarget).  A user is created either in Azure Active Directory (AAD) or ForgeRock. The default database used to create a user is AAD.\r\n<p><b>Authorization:</b>GlobalActivity-CreateUser</p>\r\n<p><b>Action:</b>CreateUser</p>\r\n<p><b>Intended to be used by:</b>User</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxx.dsentience.net/api/auth/users\n{\r\n  \"FirstName\": \"FirstNamexxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"LastName\": \"LastNamexxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Email\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@example.com\",\r\n  \"Phone\": \"+1xxxxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"UserObjectId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"UserPrincipleName\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@example.com\",\r\n  \"Password\": \"xxxxx\"\r\n}\n```\n</details>"
      operationId: ApplicationAuth_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiNewUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiNewUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiNewUserRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiNewUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiNewUserRequest'
        description: Details of the new user.
        required: true
      responses:
        '201':
          description: Successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
        '400':
          description: Invalid Parameters.
        '409':
          description: Conflict,if user exists.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/v2:
    post:
      tags:
        - ApplicationAuth
      summary: Create Login Credentials
      description: "Creates a user with Login name in Honeywell Sentience platform. <br>Depending on the value specified in the header(IdentityTarget), a user is created in either Azure Active Directory(AAD) or ForgeRock.The default database used to create a user is AAD.</br>\r\n<p><b>Authorization:</b>GlobalActivity-CreateUser</p>\r\n<p><b>Action:</b>CreateUserWithLoginName</p>\r\n<p><b>Intended to be used by:</b>User</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/v2\n{\r\n  \"FirstName\": \"xxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"LastName\": \"xxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Email\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxexxxx@example.com\",\r\n  \"Phone\": \"+xxxxxxxxxxxxxx\",\r\n  \"LoginName\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx_loginname@example.com\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"UserObjectId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"UserPrincipleName\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx_loginname@example.com\",\r\n  \"Password\": \"xxxxx\"\r\n}\n```\n</details>"
      operationId: ApplicationAuth_CreateUserWithLoginName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiNewUserWithLoginNameRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiNewUserWithLoginNameRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiNewUserWithLoginNameRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiNewUserWithLoginNameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiNewUserWithLoginNameRequest'
        required: true
      responses:
        '201':
          description: Successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiNewUserResponse'
        '400':
          description: "Bad Request:\r\n            <ul><li>Any of the fields is null or empty.</li><li>LoginName is not a valid email ID.</li><li>The domain name in the email is not a verified domain name in the AAD.</li></ul>"
        '409':
          description: Conflict, if user exists.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/modeltypes/{modelTypeId}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Model Type Permissions for an Application
      description: "Only an authorized application or user can use this API to retrieve model type permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureModelTypePermission</p>\r\n<p><b>Action:</b>GetApplicationModelTypePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/modeltypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"registermodelformodeltype\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetApplicationModelTypePermissions
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of the application for which model type permissions are
            retrieved.
          required: true
          schema:
            type: string
        - name: modelTypeId
          in: path
          description: >-
            ModelType for which model type permissions of the application are
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Model Type Permissions for an Application
      description: "Only an authorized application or user can use this API to add model type permissions for an application.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureModelTypePermission</p>\r\n<p><b>Action:</b>AddModelTypePermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/modeltypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"RegisterModelForModelType\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddModelTypePermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which model type permissions are added.
          required: true
          schema:
            type: string
        - name: modelTypeId
          in: path
          description: Model Type for which the application is given permissions.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
        description: >-
          List of activities (model type permissions) to be added for an
          application.
        required: true
      responses:
        '200':
          description: 'OK: Added permissions successfully.'
        '400':
          description: 'Bad Request: Invalid Parameters.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Model Type Permissions for an Application
      description: "Only an authorized application or user can use this API to remove the application’s access to a list of model type permissions.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureModelTypePermission</p>\r\n<p><b>Action:</b>RemoveModelTypePermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/modeltypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"RegisterModelForModelType\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveModelTypePermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of the application for which model type permissions are
            removed.
          required: true
          schema:
            type: string
        - name: modelTypeId
          in: path
          description: >-
            Model type for which the application’s model type permissions are
            removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
        description: List of model type activities to be removed for the application.
        required: true
      responses:
        '204':
          description: 'NoContent: Removed application permissions successfully.'
        '400':
          description: 'Bad Request: Invalid Parameters.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/users/{userId}/modeltypes/{modelTypeId}:
    get:
      tags:
        - ApplicationAuth
      summary: Get Model Type Permissions for a User
      description: "Only an authorized application or user can use this API to retrieve model type permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureModelTypePermission</p>\r\n<p><b>Action:</b>GetUserModelTypePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/modeltypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"registermodelformodeltype\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_GetUserModelTypePermissions
      parameters:
        - name: userId
          in: path
          description: User ID for which model type permissions are retrieved.
          required: true
          schema:
            type: string
        - name: modelTypeId
          in: path
          description: ModelType for which the user's model type permissions are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeActivitiesResponse'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    post:
      tags:
        - ApplicationAuth
      summary: Add Model Type Permissions for a User
      description: "Only an authorized application or user can use this API to add model type permissions for a user.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureModelTypePermission</p>\r\n<p><b>Action:</b>AddModelTypePermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx/modeltypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"RegisterModelForModelType\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_AddModelTypePermissionsToUser
      parameters:
        - name: userId
          in: path
          description: User ID for which model type permissions are added.
          required: true
          schema:
            type: string
        - name: modelTypeId
          in: path
          description: Type of model for which the user's permissions are added.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
        description: >-
          List of activities (model type permissions) to be assigned to the
          user.
        required: true
      responses:
        '200':
          description: 'OK: Added user permissions successfully.'
        '400':
          description: 'Bad Request: Invalid Parameters.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
    delete:
      tags:
        - ApplicationAuth
      summary: Remove Model Type Permissions for a User
      description: "Only an authorized application or user can use this API to remove the user’s access from a list of model type permissions.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureModelTypePermission</p>\r\n<p><b>Action:</b>RemoveModelTypePermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/modeltypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"RegisterModelForModelType\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ApplicationAuth_RemoveModelTypePermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: User ID for which model type permissions are removed.
          required: true
          schema:
            type: string
        - name: modelTypeId
          in: path
          description: >-
            Model type ID for which the user’s model type permissions are
            removed.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiModelTypePermissionsRequest'
        description: List of activities (model type permissions) to be removed for a user.
        required: true
      responses:
        '204':
          description: 'NoContent: Removed user permissions successfully.'
        '400':
          description: 'Bad Request: Invalid Parameters.'
        '401':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '404':
          description: 'Not found: Route parameters are not valid.'
        '500':
          description: 'Internal Server Error: Unexpected failure during operation.'
      deprecated: false
  /api/auth/users/{userId}/models/{modelId}/assets/{base64EncodedAssetId}/activities/{activity}/allowed:
    get:
      tags:
        - AssetAuth
      summary: Is User Authorized for Assets
      description: "Checks if a user has permissions to access a model.\r\n            Use this API to check if a user has permission on the given model asset for an activity.\r\n            <br>The caller must have a Model level permission or higher at the Model Type level which the Model belongs to.</br>\r\n<p><b>Authorization:</b>ModelPermissionByModelType-CheckAssetPermissions</p>\r\n<p><b>Action:</b>IsUserAuthorizedForAsset</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=/activities/ReadModel/allowed\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"false\"\n```\n</details>"
      operationId: AssetAuth_IsUserAuthorizedForAsset
      parameters:
        - name: userId
          in: path
          description: Unique ID of the user.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Unique ID of the model.
          required: true
          schema:
            type: string
        - name: base64EncodedAssetId
          in: path
          description: Base64-encoded ID of the asset in the model.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        '400':
          description: >-
            Bad Request: When: <ul><li>userId is not a ForgeRock
            identity.</li><li>Asset or activity is not valid.</li></ul>
        '401':
          description: >-
            Unauthorized: When: <ul><li>Lack of required
            permissions.</li><li>Model is not valid.</li></ul>
        '403':
          description: 'Forbidden: Caller is not authorized to invoke the API.'
        '500':
          description: 'Internal Server Error: Unknown error when checking permission.'
        '501':
          description: 'Not Implemented: API is not implemented.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/models/{modelId}/assets/{base64EncodedAssetId}/activities/{activity}/allowed:
    get:
      tags:
        - AssetAuth
      summary: Is Application Authorized for Asset
      description: "Checks if an application has permissions to access a model.\r\n            Use this API to check if an application has permission on the given model asset for an activity.\r\n            <br>The caller must have a Model level permission or higher at the Model Type level which the Model belongs to.</br>\r\n<p><b>Authorization:</b>ModelPermissionByModelType-CheckAssetPermissions</p>\r\n<p><b>Action:</b>IsApplicationAuthorizedForAsset</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/activities/ReadModel/allowed\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"false\"\n```\n</details>"
      operationId: AssetAuth_IsApplicationAuthorizedForAsset
      parameters:
        - name: applicationGuid
          in: path
          description: Unique ID of the application.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: Unique ID of the model.
          required: true
          schema:
            type: string
        - name: base64EncodedAssetId
          in: path
          description: Base64-encoded ID of the asset in the model.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        '400':
          description: >-
            Bad Request: When: <ul><li>applicationGuid is not a ForgeRock
            identity.</li><li>Asset or activity is not valid.</li></ul>
        '401':
          description: >-
            Unauthorized: When: <ul><li>Lack of required
            permissions.</li><li>Model is not valid.</li></ul>
        '403':
          description: 'Forbidden: Caller is not authorized to invoke the API.'
        '500':
          description: 'Internal Server Error: Unknown error when checking permission.'
        '501':
          description: 'Not Implemented: API is not implemented.'
      deprecated: false
  /api/authentication/certificate/systemtypes/{systemType}:
    get:
      tags:
        - CertificateAuthentication
      summary: Verify Client Certificate
      description: "Generates JWT based on client certificate.\r\n            <br>This API is used in certificate-based device authentication workflow where it authenticates the valid certificate, presented by a device, by returning a JWT token.  \r\n            The token can be used by the device to call <a href=\"/api/public#operation/SystemRegistrationApi_Register\" target=\"_blank\">Register a System API</a> to retrieve the connection string to send messages to Honeywell Sentience IoT platform.</br><br><b>Authorization:</b> NA</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>NotApplicable</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.dsentience.net/api/authentication/certificate/systemtypes/xxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"IdentityJwt\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx...._\"\r\n}\n```\n</details>"
      operationId: CertificateAuthentication_VerifyClientCertificate
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
            text/json:
              schema:
                $ref: '#/components/schemas/Identity'
            application/xml:
              schema:
                $ref: '#/components/schemas/Identity'
            text/xml:
              schema:
                $ref: '#/components/schemas/Identity'
        '401':
          description: "Unauthorized: When:\r\n            <ul><li>Certificate is invalid or expired.</li><li>Certificate is not bound to any system.</li><li>Certificate is not valid for given system type.</li></ul>"
        '403':
          description: 'Forbidden: Certificate was not supplied in the request.'
        '404':
          description: "Not Found: When:\r\n            <ul><li>System type is invalid.</li><li>Service is disabled.</li></ul>"
        '500':
          description: Internal Server Error
      deprecated: false
  /api/pki/certificates:
    get:
      tags:
        - CertificateManagement
      summary: View all the Certificates
      description: "Retrieves all certificates.\r\n            Use this API to retrieve all the root and intermediate certificates registered in the platform.\r\n<p><b>Authorization:</b>GlobalActivity-ManageCertificates</p>\r\n<p><b>Action:</b>GetAll</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/pki/certificates\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Thumbprint\": \"string\",\r\n    \"DistinguishedName\": \"string\",\r\n    \"ExpirationInUtc\": \"2019-02-25T10:54:31.307Z\"\r\n  }\r\n]\n```\n</details>"
      operationId: CertificateManagement_GetAll
      responses:
        '200':
          description: 'OK: All registered certificates are returned.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCertificate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCertificate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCertificate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCertificate'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    post:
      tags:
        - CertificateManagement
      summary: Upload a Certificate
      description: "Uploads intermediate or root certificates to the platform.\r\n            Only a single certificate can be uploaded each time. The file extensions supported for a certificate include, *.CRT and *.CER format. The certificate can be encoded as Base64 PEM or binary DER.\r\n<p><b>Authorization:</b>GlobalActivity-ManageCertificates</p>\r\n<p><b>Action:</b>UploadCertificate</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/pki/certificates--xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Thumbprint\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"DistinguishedName\": \"CN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"ExpirationInUtc\": \"2021-03-09T13:10:12Z\"\r\n}\n```\n</details>"
      operationId: CertificateManagement_UploadCertificate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                webApiCertificateUpload:
                  description: >-
                    Certificate in *.CER or *.CRT format. The certificate may be
                    encoded as Base64 PEM or binary DER.
                  type: string
                  format: binary
              required:
                - webApiCertificateUpload
        required: true
      responses:
        '201':
          description: 'Created: Certificate was successfully registered in the platform.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiCertificate'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiCertificate'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiCertificate'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiCertificate'
        '400':
          description: 'Bad Request: Certificate has incorrect format or is not valid.'
        '409':
          description: 'Conflict: Certificate is already registered in the platform.'
        '415':
          description: >-
            Unsupported Media Type: Content type is not supported. The only
            supported content type is 'multipart/form-data'.
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/auth/custom/permissions/applications/{customApplicationId}/entitytypes/{entityType}/entityinstances/{entityInstance}/activities/{activity}:
    post:
      tags:
        - CustomAuth
      summary: Create Custom Permission
      description: "Creates custom permission for an application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>CreateCustomPermission</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://gdatdevregui.dsentience.net/api/auth/custom/permissions/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx/activities/can_read_buildingdata\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": \"string\"\r\n}\n```\n</details>"
      operationId: CustomAuth_CreateCustomPermission
      parameters:
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Instance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
    delete:
      tags:
        - CustomAuth
      summary: Delete Custom Permission for Target Application
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>DeleteCustomPermission</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/permissions/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx/activities/can_read_buildingdata\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": \"string\"\r\n}\n```\n</details>"
      operationId: CustomAuth_DeleteCustomPermission
      parameters:
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: IInstance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/users/{userObjectId}/applications/{customApplicationId}/entitytypes/{entityType}/entityinstances/{entityInstance}/activities/{activity}:
    post:
      tags:
        - CustomAuth
      summary: Add Custom Permission for a User
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>AddCustomPermissionToUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx/activities/can_read_buildingdata\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": null\r\n}\n```\n</details>"
      operationId: CustomAuth_AddCustomPermissionToUser
      parameters:
        - name: userObjectId
          in: path
          description: Object ID of a user to be assigned with a custom permission.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Instance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '400':
          description: 'Bad Request: GroupName invalid.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
    delete:
      tags:
        - CustomAuth
      summary: Delete Custom Permission for a User
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>RemoveCustomPermissionFromUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx/activities/can_read_buildingdata\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": \"string\"\r\n}\n```\n</details>"
      operationId: CustomAuth_RemoveCustomPermissionFromUser
      parameters:
        - name: userObjectId
          in: path
          description: Object ID of a user for which custom permission is removed.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Instance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '400':
          description: 'Bad Request: GroupName invalid.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/users/{userObjectId}/applications/{customApplicationId}/entitytypes/{entityType}/entityinstances/{entityInstance}:
    get:
      tags:
        - CustomAuth
      summary: Get Custom Permissions for a User
      description: "Retrieves custom permissions granted to a user by using entity type and entity instance.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetUserCustomPermissions</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"CustomPermissions\": [\r\n    {\r\n      \"Instance\": \"building-xxxxx\",\r\n      \"Activity\": \"can_read_buildingdata\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: CustomAuth_GetUserCustomPermissions
      parameters:
        - name: userObjectId
          in: path
          description: Object ID of a user for which custom permissions are retrieved.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create custom permissions.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create custom permissions.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Entity Instance used to create custom permissions.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
        '404':
          description: 'Not Found: User not found.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/users/{userObjectId}/applications/{customApplicationId}/entitytypes/{entityType}:
    get:
      tags:
        - CustomAuth
      summary: Get Custom Permissions for a User using Entity Type
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetUserCustomPermissionsByEntityType</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"CustomPermissions\": [\r\n    {\r\n      \"Instance\": \"building-xxxxx\",\r\n      \"Activity\": \"can_read_buildingdata\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: CustomAuth_GetUserCustomPermissionsByEntityType
      parameters:
        - name: userObjectId
          in: path
          description: Object ID of a user for which custom permissions are retrieved.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create custom permissions.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create custom permissions.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
        '404':
          description: 'Not Found: User not found.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/applications/{targetCustomApplicationId}/applications/{customApplicationId}/entitytypes/{entityType}/entityinstances/{entityInstance}/activities/{activity}:
    post:
      tags:
        - CustomAuth
      summary: Add Custom Permission for an Application
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>AddCustomPermissionToTargetApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx/activities/can_read_buildingdata\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": null\r\n}\n```\n</details>"
      operationId: CustomAuth_AddCustomPermissionToTargetApplication
      parameters:
        - name: targetCustomApplicationId
          in: path
          description: Custom application that is added to custom permission.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Instance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '400':
          description: 'Bad Request: GroupName invalid.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
    delete:
      tags:
        - CustomAuth
      summary: Delete Custom Permission for an Application
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>RemoveCustomPermissionFromTargetApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx/activities/can_read_buildingdata\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": \"string\"\r\n}\n```\n</details>"
      operationId: CustomAuth_RemoveCustomPermissionFromTargetApplication
      parameters:
        - name: targetCustomApplicationId
          in: path
          description: Custom application from which the custom permission will be removed.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Instance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
        '400':
          description: Bad Request
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/applications/{targetCustomApplicationId}/applications/{customApplicationId}/entitytypes/{entityType}/entityinstances/{entityInstance}:
    get:
      tags:
        - CustomAuth
      summary: Get Custom Permissions for Application
      description: "Retrieves custom permissions granted to an application using entity type and entity instance.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetTargetApplicationCustomPermissions</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building/entityinstances/building_id_xxxx-xxxx-xxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"CustomPermissions\": [\r\n    {\r\n      \"Instance\": \"building-xxxxx\",\r\n      \"Activity\": \"can_read_buildingdata\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: CustomAuth_GetTargetApplicationCustomPermissions
      parameters:
        - name: targetCustomApplicationId
          in: path
          description: Custom application assigned with custom permissions.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create custom permissions.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create custom permissions.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Entity Instance used to create custom permissions.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
        '404':
          description: 'Not Found: Application not found.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/applications/{targetCustomApplicationId}/applications/{customApplicationId}/entitytypes/{entityType}:
    get:
      tags:
        - CustomAuth
      summary: Get Custom Permissions for an Application using Entity Type
      description: "\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetTargetApplicationCustomPermissionsByEntityType</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/entitytypes/building\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"CustomPermissions\": [\r\n    {\r\n      \"Instance\": \"building-xxxxx\",\r\n      \"Activity\": \"can_read_buildingdata\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: CustomAuth_GetTargetApplicationCustomPermissionsByEntityType
      parameters:
        - name: targetCustomApplicationId
          in: path
          description: Custom application assigned with custom permissions.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create/fetch custom permissions.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create custom permissions.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
        '404':
          description: 'Not Found: Application not found.'
        '500':
          description: 'Internal Server Error: For any other reason.'
      deprecated: false
  /api/auth/custom/permissions/applications/{customApplicationId}/entitytypes/{entityType}/entityinstances/{entityInstance}/activities/{activity}/check:
    post:
      tags:
        - CustomAuthCheck
      summary: Is Application Authorized to Custom Permission
      description: "Checks if an application has custom permissions on a given entity.\r\n<p><b>Authorization:</b>CustomManageActivity-CheckCustomPermission</p>\r\n<p><b>Action:</b>IsAuthorizedToCustomPermission</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Application</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxx.dsentience.net/api/auth/custom/permissions/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxxx/entitytypes/building/entityinstances/xxxx-xxxxx/activities/can_read_building_data/check\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"false\"\n```\n</details>"
      operationId: CustomAuthCheck_IsAuthorizedToCustomPermission
      parameters:
        - name: customApplicationId
          in: path
          description: Custom Application ID used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          description: Entity Type used to create a custom permission.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: Custom activity used to create a custom permission.
          required: true
          schema:
            type: string
        - name: entityInstance
          in: path
          description: Instance of entity type used to create a custom permission.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
      deprecated: false
  /api/auth/custom/permissions/applications/{customApplicationId}/activities:
    get:
      tags:
        - CustomAuthManage
      summary: Get Custom Manage Level Permissions
      description: "Retrieves all the available custom manage level permissions.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetCustomManageActivities</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/permissions/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"CheckCustomPermission\",\r\n    \"DisplayName\": \"Check Custom Permission\"\r\n  }\r\n]\n```\n</details>"
      operationId: CustomAuthManage_GetCustomManageActivities
      parameters:
        - name: customApplicationId
          in: path
          description: Unique ID of custom application used only for authorization purpose.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
      deprecated: false
  /api/auth/custom/applications/{customApplicationId}/activities:
    get:
      tags:
        - CustomAuthManage
      summary: Get Custom Manage Permissions for an Application
      description: "Retrieves custom manage permissions for a custom application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetApplicationCustomManagePermissions</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"CustomPermissions\": [\r\n    {\r\n      \"Instance\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n      \"Activity\": \"CheckCustomPermission\"\r\n    },\r\n    {\r\n      \"Instance\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n      \"Activity\": \"ConfigureCustomPermission\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: CustomAuthManage_GetApplicationCustomManagePermissions
      parameters:
        - name: customApplicationId
          in: path
          description: Unique ID of custom application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
      deprecated: false
  /api/auth/custom/users/{userObjectId}/applications/{customApplicationId}/activities:
    get:
      tags:
        - CustomAuthManage
      summary: Get Custom Manage Permissions for User
      description: "Retrieves custom manage permissions assigned to a user for a custom application.\r\n            The caller should have <b>ConfigureCustomPermission</b> on the custom application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>GetUserCustomManagePermissions</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"CustomPermissions\": [\r\n    {\r\n      \"Instance\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n      \"Activity\": \"CheckCustomPermission\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: CustomAuthManage_GetUserCustomManagePermissions
      parameters:
        - name: userObjectId
          in: path
          description: Object ID of the user for which the permissions are to be retrieved.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Unique ID of custom application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomPermissionsResponse'
      deprecated: false
  /api/auth/custom/applications/{customApplicationId}/activities/{activity}:
    post:
      tags:
        - CustomAuthManage
      summary: Add Custom Manage Permissions for an Application
      description: "Adds custom manage permission for an application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>AddCustomManagePermissionToApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities/CheckCustomPermission\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": null\r\n}\n```\n</details>"
      operationId: CustomAuthManage_AddCustomManagePermissionToApplication
      parameters:
        - name: customApplicationId
          in: path
          description: Unique ID of custom application.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: >-
            Custom manage permission to be given to the target application.
            Example, <b>CheckCustomPermission</b> and
            <b>ConfigureCustomPermission</b>.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: >-
          Application ID of the target application for which permission is to be
          added.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
      deprecated: false
    delete:
      tags:
        - CustomAuthManage
      summary: Remove Custom Manage Permissions for an Application
      description: "Removes custom manage permissions for a target application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>RemoveCustomManagePermissionFromApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities/CheckCustomPermission\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": null\r\n}\n```\n</details>"
      operationId: CustomAuthManage_RemoveCustomManagePermissionFromApplication
      parameters:
        - name: customApplicationId
          in: path
          description: Unique ID of custom application.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: >-
            Custom manage permission to be removed from the target application.
            Example, <b>CheckCustomPermission</b> and
            <b>ConfigureCustomPermission</b>.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: >-
          Application ID of the target application for which the permission is
          to be removed.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
      deprecated: false
  /api/auth/custom/users/{userObjectId}/applications/{customApplicationId}/activities/{activity}:
    post:
      tags:
        - CustomAuthManage
      summary: Add Custom Manage Permissions for a User
      description: "Adds custom manage permissions for a user on a custom application.\r\n            The caller should have <b>ConfigureCustomPermission</b> on the custom application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>AddCustomManagePermissionToUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities/CheckCustomPermission\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": null\r\n}\n```\n</details>"
      operationId: CustomAuthManage_AddCustomManagePermissionToUser
      parameters:
        - name: userObjectId
          in: path
          description: Object ID of the user for which the permission is to be added.
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Unique ID of custom application.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: >-
            Custom manage permission to be given to the user. Example,
            <b>CheckCustomPermission</b> and <b>ConfigureCustomPermission</b>.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
      deprecated: false
    delete:
      tags:
        - CustomAuthManage
      summary: Remove Custom Manage Permissions for a User
      description: "Removes custom manage permissions for a user on a custom application.\r\n            The caller should have <b>ConfigureCustomPermission</b> on the custom application.\r\n<p><b>Authorization:</b>CustomManageActivity-ConfigureCustomPermission</p>\r\n<p><b>Action:</b>RemoveCustomManagePermissionFromUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxxx.dsentience.net/api/auth/custom/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities/CheckCustomPermission\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Succeeded\": true,\r\n  \"ErrorMessage\": null\r\n}\n```\n</details>"
      operationId: CustomAuthManage_RemoveCustomManagePermissionFromUser
      parameters:
        - name: userObjectId
          in: path
          required: true
          schema:
            type: string
        - name: customApplicationId
          in: path
          description: Unique ID of custom application.
          required: true
          schema:
            type: string
        - name: activity
          in: path
          description: >-
            Custom manage permission to be removed from the user. Example,
            <b>CheckCustomPermission</b> and <b>ConfigureCustomPermission</b>.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthWebApiResponse'
      deprecated: false
  /api/updates/deviceTypes:
    get:
      tags:
        - DeviceTypeAdmin
      summary: Get Device Type
      description: "Gets all the device types.\r\n            Only an authorized user or application, with access to manage device types, can use this API to get all the device types.\r\n<p><b>Authorization:</b>GlobalActivity-ReadDeviceType</p>\r\n<p><b>Action:</b>GetDeviceTypes</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Name\": \"AdeviceDelete5\",\r\n    \"Description\": \"AdeviceDelete5\",\r\n    \"IsSystemType\": false,\r\n    \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"CreatedBy\": \"live.com#koilraj.nepto.honeywell@outlook.com\",\r\n    \"CreatedOn\": \"2017-05-22T14:08:00.3348849Z\",\r\n    \"ModifiedById\": null,\r\n    \"ModifiedBy\": null,\r\n    \"ModifiedOn\": null\r\n  },\r\n  {\r\n    \"Name\": \"AutoRAE2Controller\",\r\n    \"Description\": \"Sotera Devicetype\",\r\n    \"IsSystemType\": false,\r\n    \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"CreatedBy\": \"usptest@cbpdatdev.onmicrosoft.com\",\r\n    \"CreatedOn\": \"2017-12-22T06:36:40.4361934Z\",\r\n    \"ModifiedById\": null,\r\n    \"ModifiedBy\": null,\r\n    \"ModifiedOn\": null\r\n  },\r\n  {\r\n    \"Name\": \"JigDevType001\",\r\n    \"Description\": \"JigDevType001\",\r\n    \"IsSystemType\": false,\r\n    \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"CreatedBy\": \"live.com#jigar.acharya.honeywell@outlook.com\",\r\n    \"CreatedOn\": \"2017-05-08T20:42:59.2213216Z\",\r\n    \"ModifiedById\": null,\r\n    \"ModifiedBy\": null,\r\n    \"ModifiedOn\": null\r\n  },\r\n  {\r\n    \"Name\": \"JigDevType002\",\r\n    \"Description\": \"JigDevType002\",\r\n    \"IsSystemType\": false,\r\n    \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"CreatedBy\": \"live.com#jigar.acharya.honeywell@outlook.com\",\r\n    \"CreatedOn\": \"2017-05-09T13:31:39.2628132Z\",\r\n    \"ModifiedById\": null,\r\n    \"ModifiedBy\": null,\r\n    \"ModifiedOn\": null\r\n  }\r\n]\n```\n</details>"
      operationId: DeviceTypeAdmin_GetDeviceTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceType'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceType'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      deprecated: false
    post:
      tags:
        - DeviceTypeAdmin
      summary: Add Device Type
      description: "Adds a device type.\r\n            Only an authorized user or application, with access to manage the device types, can use this API to add a device type with the specified device type name and description.\r\n<p><b>Authorization:</b>GlobalActivity-ManageDeviceType</p>\r\n<p><b>Action:</b>AddDeviceTypeAsync</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes\n{\r\n  \"Name\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"Description\": \"Test description for DT1\",\r\n  \"IsSystemType\": false\r\n}\n```\n</details>"
      operationId: DeviceTypeAdmin_AddDeviceTypeAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiDeviceTypeAddRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiDeviceTypeAddRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiDeviceTypeAddRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiDeviceTypeAddRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiDeviceTypeAddRequest'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: 'Bad Request: If Name or Description is not valid.'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}:
    get:
      tags:
        - DeviceTypeAdmin
      summary: Get Device Type Details
      description: "Gets the details of a device type.\r\n            Only an authorized user or application, with access to manage device types, can use this API to get a specific device type.\r\n<p><b>Authorization:</b>GlobalActivity-ReadDeviceType</p>\r\n<p><b>Action:</b>GetDeviceType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Name\": \"aatDeviceTypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"Description\": \"Test description for DT1\",\r\n  \"IsSystemType\": false,\r\n  \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"CreatedBy\": \"NotAvailable\",\r\n  \"CreatedOn\": \"2019-03-09T13:13:13.0777917Z\",\r\n  \"ModifiedById\": null,\r\n  \"ModifiedBy\": null,\r\n  \"ModifiedOn\": null\r\n}\n```\n</details>"
      operationId: DeviceTypeAdmin_GetDeviceType
      parameters:
        - name: deviceType
          in: path
          description: The type of device whose details are to be retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiDeviceType'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiDeviceType'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiDeviceType'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiDeviceType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - DeviceTypeAdmin
      summary: Delete Device Type
      description: "Deletes a device type.\r\n            Only an authorized user or application, with access to manage device types, can use this API to delete a device type.\r\n<p><b>Authorization:</b>GlobalActivity-ManageDeviceType</p>\r\n<p><b>Action:</b>DeleteDeviceType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: DeviceTypeAdmin_DeleteDeviceType
      parameters:
        - name: deviceType
          in: path
          description: The type of device to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/applications/{applicationGuid}/deviceTypes/{deviceType}:
    get:
      tags:
        - DeviceTypeApplicationAuth
      summary: Get Device Type Permissions for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>GetApplicationDeviceTypePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"firmwarestatusread\",\r\n    \"firmwareadmin\"\r\n  ]\r\n}\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_GetApplicationDeviceTypePermissions
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of the application for which device type permissions are
            retrieved.
          required: true
          schema:
            type: string
        - name: deviceType
          in: path
          description: >-
            The type of device whose related permissions are retrieved for an
            application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
    post:
      tags:
        - DeviceTypeApplicationAuth
      summary: Add Device Type Permissions for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>AddDeviceTypePermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://gdatdevregui.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"FirmwareAdmin\",\r\n    \"FirmwareStatusRead\"\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"FirmwareAdmin\",\r\n    \"FirmwareStatusRead\"\r\n  ]\r\n}\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_AddDeviceTypePermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which device type permissions are added.
          required: true
          schema:
            type: string
        - name: deviceType
          in: path
          description: >-
            The type of device whose related permissions are added to an
            application.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiDeviceTypePermissionsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/users/{userId}/devicetypes/{deviceType}:
    get:
      tags:
        - DeviceTypeApplicationAuth
      summary: Get Device Type Permissions for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>GetUserDeviceTypePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"FimrwareAdmin\"\r\n  ]\r\n}\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_GetUserDeviceTypePermissions
      parameters:
        - name: userId
          in: path
          description: >-
            Unique ID of the user for which device type permissions are
            retrieved.
          required: true
          schema:
            type: string
        - name: deviceType
          in: path
          description: >-
            The type of device whose related permissions are retrieved for a
            user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiDeviceTypeActivitiesResponse'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - DeviceTypeApplicationAuth
      summary: Remove Device Type Permissions for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>RemoveDeviceTypePermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"FirmwareAdmin\"\r\n  ]\r\n}\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_RemoveDeviceTypePermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: Unique ID of the user for which device type permissions are removed.
          required: true
          schema:
            type: string
        - name: deviceType
          in: path
          description: The type of device whose related permissions are removed for a user.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiDeviceTypePermissionsRequest'
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/users/{userId}/deviceTypes/{deviceType}:
    post:
      tags:
        - DeviceTypeApplicationAuth
      summary: Add Device Type Permissions for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>AddDeviceTypePermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"FirmwareAdmin\"\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"FirmwareAdmin\"\r\n  ]\r\n}\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_AddDeviceTypePermissionsToUser
      parameters:
        - name: userId
          in: path
          description: Unique ID of the user for which device type permissions are added.
          required: true
          schema:
            type: string
        - name: deviceType
          in: path
          description: The type of device whose related permissions are added for a user.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiDeviceTypePermissionsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/applications/{applicationGuid}/devicetypes/{deviceType}:
    delete:
      tags:
        - DeviceTypeApplicationAuth
      summary: Remove Device Type Permissions for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>RemoveDeviceTypePermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/devicetypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"FirmwareAdmin\"\r\n  ]\r\n}\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_RemoveDeviceTypePermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of the application for which device type permissions are
            removed.
          required: true
          schema:
            type: string
        - name: deviceType
          in: path
          description: >-
            The type of device whose related permissions are removed for an
            application.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiDeviceTypePermissionsRequest'
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/services/devicetype:
    get:
      tags:
        - DeviceTypeApplicationAuth
      summary: Get Device Type Service Activities
      description: "Retrieves all activities related to a device type.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureDeviceTypePermission</p>\r\n<p><b>Action:</b>GetDeviceTypeServiceActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/services/devicetype\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"firmwareadmin\",\r\n    \"DisplayName\": \"Firmware Admin\"\r\n  }\r\n]\n```\n</details>"
      operationId: DeviceTypeApplicationAuth_GetDeviceTypeServiceActivities
      responses:
        '200':
          description: 'OK: Successfully retrieved permissions.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '204':
          description: 'Not Content: No activites found.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '403':
          description: 'Unauthorized: Caller does not have the required permissions.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/configuration:
    get:
      tags:
        - DeviceTypeConfigurationAdmin
      summary: Get Device Type Configurations
      description: "Retrieves all configurations for a device type.\r\n            Only an authorized user, with access to manage device type configurations, can use this API to get a list of all the available device type configurations for a specific device type.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetDeviceTypeConfigurations</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/configuration\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Key\": \"VersionSelectionMode\",\r\n    \"Value\": \"Lowest\"\r\n  }\r\n]\n```\n</details>"
      operationId: DeviceTypeConfigurationAdmin_GetDeviceTypeConfigurations
      parameters:
        - name: deviceType
          in: path
          description: The type of device whose configuration details are retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceTypeConfiguration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceTypeConfiguration'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceTypeConfiguration'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiDeviceTypeConfiguration'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/configuration/{key}:
    get:
      tags:
        - DeviceTypeConfigurationAdmin
      summary: Get Specific Device Type Configuration
      description: "Retrieves device type configuration specific to a given device type and a key.\r\n            Only an authorized user, with access to manage device type configuration, can use this API to get a specific device type configuration value by specifying its device type and key.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetSpecificDeviceTypeConfiguration</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/configuration/VersionSelectionMode\n\"Highest\"\n```\n</details>"
      operationId: DeviceTypeConfigurationAdmin_GetSpecificDeviceTypeConfiguration
      parameters:
        - name: deviceType
          in: path
          description: Type of device whose configuration details are retrieved.
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: Key of the property.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    put:
      tags:
        - DeviceTypeConfigurationAdmin
      summary: Add or Modify Device Type Configuration
      description: "Adds/Modifies a device type configuration according to a given device type, a key, and its value.\r\n             Only an authorized user, with access to manage device type configuration, can use this API to add a device type configuration.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>AddOrUpdateDeviceTypeConfiguration</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/configuration/VersionSelectionMode\n\"Highest\"\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"Highest\"\n```\n</details>"
      operationId: DeviceTypeConfigurationAdmin_AddOrUpdateDeviceTypeConfiguration
      parameters:
        - name: deviceType
          in: path
          description: Type of device whose configuration needs to be added or updated.
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: Key of the property.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: Value of device type configuration.
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - DeviceTypeConfigurationAdmin
      summary: Delete Device Type Configuration
      description: "Deletes an existing device type configuration.\r\n            Only an authorized user, with access to manage device type configuration, can use this API to delete a system type configuration.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>DeleteDeviceTypeConfiguration</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/configuration/VersionSelectionMode\n\n```\n</details>"
      operationId: DeviceTypeConfigurationAdmin_DeleteDeviceTypeConfiguration
      parameters:
        - name: deviceType
          in: path
          description: Type of device whose configuration needs to be deleted.
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: Key of the property.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systems/systemtypes/{systemType}/batchimportsubsystems:
    post:
      tags:
        - FactoryRegistration
      summary: Register Subsystem Batch
      description: "Registers subsystems using a factory fixture. \r\n            <br>The subsystems must have the same SystemType and a unique user identity.</br>\r\n<p><b>Authorization:</b>SystemTypeActivityOrFixture-RegisterSystem</p>\r\n<p><b>Action:</b>RegisterSubsystemBatch</p>\r\n<p><b>Intended to be used by:</b>FactoryFixture</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/systemtypes/xxxxxx/batchimportsubsystems\n[\r\n  {\r\n    \"SystemId\": \"xxxxxxxxxxxx\"\r\n  }\r\n]\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"IsBatchImportSuccess\": true,\r\n  \"SubsystemRegistrationResults\": [\r\n    {\r\n      \"SystemId\": \"xxxxxxxxxxxx\",\r\n      \"IsImportSuccessful\": true\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: FactoryRegistration_RegisterSubsystemBatch
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemDetails'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemDetails'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemDetails'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemDetails'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemDetails'
        description: Contains subsystem details for registration.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebApiFactorySubsystemBatchRegistrationResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/WebApiFactorySubsystemBatchRegistrationResponse
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/WebApiFactorySubsystemBatchRegistrationResponse
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/WebApiFactorySubsystemBatchRegistrationResponse
        '400':
          description: 'Bad Request: Invalid parameters or duplicate items.'
        '401':
          description: Unauthorized
      deprecated: false
  /api/systems:
    post:
      tags:
        - FactoryRegistration
      summary: Register System
      description: "Registers a new system from factory fixture.\r\n            <br>This API adds a new system to the system registry. To add a new system, you will need an Identity token. \r\n            Use the Fixture RPK Challenge APIs: <a href=\"/api/public#operation/FixtureRpkChallenge_RequestChallenge\" target=\"_blank\">Request Challenge</a> and <a href=\"/api/public#operation/FixtureRpkChallenge_VerifyChallengeResponse\" target=\"_blank\">Verify Challenge Response</a> to get the authentication tokens.</br><br>The default provisioning status of the system is NotProvisioned. Use <a href=\"/api/public#tag/SystemRegistrationAdmin\" target=\"_blank\">System Registration Admin APIs</a> to modify the provisioning status. Once the system is imported, the result and the ownership code for the system are returned in the response.</br>\r\n<p><b>Intended to be used by:</b>FactoryFixture</p>\r\n<p><b>Is Standard for:</b>NotApplicable</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems\n{\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx\",\r\n  \"User\": \"xxxx\",\r\n  \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemPublicKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemMetaData\": {}\r\n}\n```\n</details>"
      operationId: FactoryRegistration_RegisterSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemDetail'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemDetail'
        description: Contains system details for registration.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistrationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistrationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistrationResponse'
        '403':
          description: Forbidden
        '409':
          description: 'Conflict: Certificate is already being used.'
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systems/systemtypes/{systemType}/batchimport:
    post:
      tags:
        - FactoryRegistration
      summary: Register Batch of Systems
      description: "Registers a new batch of systems.\r\n            <br>The systems must have:</br><ul><li>A unique User Identity.</li><li>Same SystemType.</li></ul>\r\n            The default provisioning status of the system is NotProvisioned. Use the <a href=\"/api/public#tag/SystemRegistrationAdmin\" target=\"_blank\">System Registration Admin APIs</a> to modify the provisioning status.\r\n<p><b>Authorization:</b>SystemTypeActivity-RegisterSystemType</p>\r\n<p><b>Action:</b>RegisterBatch</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>User</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/systemtypes/xxxxxx/batchimport\n[\r\n  {\r\n    \"SystemOwnershipCode\": \"xxxxxxxxxxxx\",\r\n    \"SystemId\": \"xxxxxxxxxxxx\",\r\n    \"SystemPublicKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxx\",\r\n    \"SystemMetaData\": {}\r\n  }\r\n]\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"FactorySystemRegistrationResults\": [\r\n    {\r\n      \"SystemId\": \"xx:xx:xx:xx:xx:xx\",\r\n      \"IsImportSuccessful\": true\r\n    }\r\n  ],\r\n  \"IsBatchImportSuccess\": true\r\n}\n```\n</details>"
      operationId: FactoryRegistration_RegisterBatch
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiFactorySystemDetails'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiFactorySystemDetails'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiFactorySystemDetails'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiFactorySystemDetails'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiFactorySystemDetails'
        description: Contains system details for registration.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactorySystemRegistrationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/FactorySystemRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FactorySystemRegistrationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/FactorySystemRegistrationResponse'
        '400':
          description: >-
            Bad Request: When:<ul><li>Input parameters are not
            valid.</li><li>Missing or invalid system authentication
            details.</li></ul>
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systems/systemtypes/{systemType}/systems/{base64EncodedSystemId}/publickey:
    post:
      tags:
        - FactoryRegistration
      summary: Append Secondary Public Key
      description: "Adds public key to system registration.\r\n            <br>Use this API to add public key information to an existing system.The system must have a unique SystemId and SystemType.</br>\r\n<p><b>Authorization:</b>SystemTypeActivity-AddRedundantPublicKey</p>\r\n<p><b>Action:</b>AppendSecondaryPublicKey</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>User</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/systemtypes/xxxx/systems/xxxxxx/publickey\n{\r\n  \"PublicKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: FactoryRegistration_AppendSecondaryPublicKey
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          required: true
          schema:
            type: string
        - name: base64EncodedSystemId
          in: path
          description: >-
            Base64-encoded unique ID for a system. Used in conjunction with the
            System Type to uniquely identify a system in Honeywell Sentience.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemPublicKey'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemPublicKey'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemPublicKey'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemPublicKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemPublicKey'
        description: Holds data about the public key being uploaded.
        required: true
      responses:
        '204':
          description: 'No Content: The API request was successful.'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: 'Internal Server Error: When any internal operation fails.'
      deprecated: false
  /api/systems/systemtypes/{systemType}/v2/systems/{systemId}:
    delete:
      tags:
        - FactoryRegistration
      summary: De-Register System from Registry
      description: "This API removes a system from the registry. The system must be in NotProvisioned state for it to be deregistered. Use <a href=\"/api/public#tag/SystemRegistrationAdmin\" target=\"_blank\">System Registration Admin APIs</a> to modify the provisioning status.\r\n<p><b>Authorization:</b>SystemTypeActivity-DeRegisterSystem</p>\r\n<p><b>Action:</b>DeRegisterSystemV2</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/systems/systemtypes/xxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/v2/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: FactoryRegistration_DeRegisterSystemV2
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          required: true
          schema:
            type: string
        - name: systemId
          in: path
          description: >-
            Base64-encoded unique ID of a system; used in conjunction with the
            System Type to uniquely identify a system in Honeywell Sentience.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The API request was successful.'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: Unauthorized
        '404':
          description: 'Not Found: System provisioning status unknown.'
        '409':
          description: >-
            Conflict: Invalid provisioning status for de-registration. System
            should be in Not-Provisioned Status.
        '500':
          description: 'Internal Server Error: When any internal operation fails.'
      deprecated: false
  /api/systems/systemtypes/{systemType}/systems/{base64EncodedSystemId}/certificate:
    post:
      tags:
        - FactoryRegistration
      summary: Append Certificate
      description: "Assigns a new certificate to a system by using certificate authentication.\r\n            <br>The system must have a unique System Type and System ID. You can also use this API to assign a renewed certificate to a system.</br>\r\n<p><b>Authorization:</b>SystemTypeActivity-RegisterSystem</p>\r\n<p><b>Action:</b>AppendCertificate</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>User</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/systemtypes/xxxx/systems/xxxxxx/certificate\n{\r\n  \"Thumbprint\": \"XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX\",\r\n  \"DistinguishedName\": \"xxxxxxx\",\r\n  \"Issuer\": \"xxxxxxx\",\r\n  \"ExpirationInUtc\": \"2019-01-02T07:07:24.346Z\"\r\n}\n```\n</details>"
      operationId: FactoryRegistration_AppendCertificate
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          required: true
          schema:
            type: string
        - name: base64EncodedSystemId
          in: path
          description: >-
            Base64-encoded unique ID for a system. Used in conjunction with the
            System Type to uniquely identify a system in Honeywell Sentience.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
        description: Specific data describing an associated Certificate.
        required: true
      responses:
        '204':
          description: >-
            No Content: Certificate has been successfully assigned to the
            system.
        '400':
          description: >-
            Bad Request: Invalid parameters or the system is not using
            certificate authentication.
        '404':
          description: 'Not Found: System was not found.'
        '409':
          description: 'Conflict: Certificate is already being used.'
        '500':
          description: 'Internal Server Error: When any internal operation fails.'
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/versions:
    get:
      tags:
        - FirmwareUpdateAdmin
      summary: Get Versionable Assets by Device Type
      description: "Gets a collection of versionable assets according to a given device type. \r\n            <br>Only an authorized user, with access to manage versionable assets, can use this API to get a list of all the available versionable assets for a specific device type.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetVersionableAssetsByDeviceType</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/versions\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Version\": \"1.0.0\",\r\n    \"CompatibleVersions\": null,\r\n    \"AssetType\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"ReleaseState\": \"Draft\",\r\n    \"VerificationCode\": null,\r\n    \"Priority\": \"Normal\",\r\n    \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"CreatedBy\": \"NotAvailable\",\r\n    \"CreatedOn\": \"2019-03-09T13:23:38.2617281Z\",\r\n    \"ModifiedById\": null,\r\n    \"ModifiedBy\": null,\r\n    \"ModifiedOn\": null\r\n  }\r\n]\n```\n</details>"
      operationId: FirmwareUpdateAdmin_GetVersionableAssetsByDeviceType
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device whose associated versionable assets are to be
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/assets/{assetType}/versions:
    get:
      tags:
        - FirmwareUpdateAdmin
      summary: Get Versionable Assets by Asset Type
      description: "Use this API to fetch a collection of versionable assets according to a given device type and asset type. Only an authorized user, with access to manage versionable assets, can use this API to get a list of all the available versionable assets for the specified device and asset type.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetVersionableAssetsByAssetType</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/versions\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Version\": \"1.0.0\",\r\n    \"CompatibleVersions\": null,\r\n    \"AssetType\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"ReleaseState\": \"Draft\",\r\n    \"VerificationCode\": null,\r\n    \"Priority\": \"Normal\",\r\n    \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"CreatedBy\": \"NotAvailable\",\r\n    \"CreatedOn\": \"2019-03-09T13:22:19.4572811Z\",\r\n    \"ModifiedById\": null,\r\n    \"ModifiedBy\": null,\r\n    \"ModifiedOn\": null\r\n  }\r\n]\n```\n</details>"
      operationId: FirmwareUpdateAdmin_GetVersionableAssetsByAssetType
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device whose associated versionable assets are to be
            retrieved.
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          description: >-
            The type of asset whose associated versionable assets are to be
            retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiVersionableAssetVersion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    post:
      tags:
        - FirmwareUpdateAdmin
      summary: >-
        OBSOLETE: Uploads a versionable asset according to a given device type
        and asset type
      description: "An authorized user who has access to manage versionable assets can use this API to upload binaries for a versionable \r\n            asset for the specified device type and asset type\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>UploadVersionableAsset</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: FirmwareUpdateAdmin_UploadVersionableAsset
      parameters:
        - name: deviceType
          in: path
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiVersionableAssetUploadRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiVersionableAssetUploadRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiVersionableAssetUploadRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiVersionableAssetUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiVersionableAssetUploadRequest'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: BadRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NotFound
        '409':
          description: Conflict
        '500':
          description: InternalServerError
      deprecated: true
  /api/updates/deviceTypes/{deviceType}/assets/{assetType}/versions/{version}:
    get:
      tags:
        - FirmwareUpdateAdmin
      summary: Get Specific Asset Version
      description: "Use this API to get asset version according to a given device type, asset type, and version. Only an authorized user, with access to manage versionable assets, can use this API to get asset versions by specifying its device type, asset type, and version.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetSpecificAssetVersion</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/versions/1.0.0\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Version\": \"1.0.0\",\r\n  \"CompatibleVersions\": [\r\n    \"2.0.0\",\r\n    \"3.0.0\"\r\n  ],\r\n  \"AssetType\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ReleaseState\": \"Draft\",\r\n  \"VerificationCode\": null,\r\n  \"Priority\": \"Normal\",\r\n  \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"CreatedBy\": \"NotAvailable\",\r\n  \"CreatedOn\": \"2019-03-09T13:19:53.8596217Z\",\r\n  \"ModifiedById\": null,\r\n  \"ModifiedBy\": null,\r\n  \"ModifiedOn\": null\r\n}\n```\n</details>"
      operationId: FirmwareUpdateAdmin_GetSpecificAssetVersion
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device whose associated asset versions are to be
            retrieved.
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          description: The type of asset.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: The asset version.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiVersionableAssetVersion'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiVersionableAssetVersion'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - FirmwareUpdateAdmin
      summary: Delete Versionable Asset
      description: "Use this API to delete an uploaded asset. Only an authorized user, with access to manage assets, can use this API to delete an asset by specifying its device type, asset type, and version.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>DeleteVersionableAsset</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: FirmwareUpdateAdmin_DeleteVersionableAsset
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device whose associated versionable assets are to be
            deleted.
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          description: Type of asset.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: The asset version.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The asset is successfully deleted.'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/assets/{assetType}/versions/stream:
    post:
      tags:
        - FirmwareUpdateAdmin
      summary: Upload Versionable Asset Stream
      description: "Only an authorized user, with access to manage versionable assets, can use this API to upload the file for a versionable asset for a specific device and asset type.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>UploadVersionableAssetStream</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/versions/stream\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Version\": \"4.0.0\",\r\n  \"CompatibleVersions\": [\r\n    \"2.0.0\",\r\n    \"3.0.0\"\r\n  ],\r\n  \"AssetType\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ReleaseState\": \"Draft\",\r\n  \"VerificationCode\": null,\r\n  \"Priority\": \"Normal\",\r\n  \"CreatedById\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"CreatedBy\": \"NotAvailable\",\r\n  \"CreatedOn\": \"2019-03-09T13:19:21.9200677Z\",\r\n  \"ModifiedById\": null,\r\n  \"ModifiedBy\": null,\r\n  \"ModifiedOn\": null\r\n}\n```\n</details>"
      operationId: FirmwareUpdateAdmin_UploadVersionableAssetStream
      parameters:
        - name: deviceType
          in: path
          description: The type of device whose associated versionable asset are updated.
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          description: Type of asset.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                webApiVersionableAssetFileStream:
                  type: string
                  format: binary
              required:
                - webApiVersionableAssetFileStream
        required: true
      responses:
        '201':
          description: 'Created: Uploaded and created a new asset.'
        '400':
          description: >-
            Bad Request: When: <ul><li>Invalid request.</li><li>Unable to parse
            asset upload request and/or asset stream.</li></ul>
        '401':
          description: >-
            Unauthorized: Authorization failure when trying to upload. Please
            check permissions.
        '403':
          description: 'Forbidden: Not allowed to upload Asset.'
        '404':
          description: 'Not Found: Unable to find the device type.'
        '409':
          description: >-
            Conflict: A version of the asset with the same version number
            already exists for the device type.
        '415':
          description: >-
            Unsupported Media Type: Request is not multipart. The request should
            be multipart content with Asset. Upload request information and
            asset file.
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/assets/{assetType}/versions/{version}/releaseState:
    put:
      tags:
        - FirmwareUpdateAdmin
      summary: Release Versionable Asset
      description: "Updates the release state of an existing version.\r\n            <br>Only an authorized user, with access to manage versionable assets, can use this API to update the release state of an existing version.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>ReleaseVersionableAsset</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/versions/1.0.0/releaseState\n\"Released\"\n```\n</details>"
      operationId: FirmwareUpdateAdmin_ReleaseVersionableAsset
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device whose associated version's release state has to
            be updated.
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          description: The type of asset.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Version whose release state is to be updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: A release state could either be <b>Draft</b> or <b>Released</b>.
        required: true
      responses:
        '204':
          description: 'No Content:  The API request is successful.'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/assets/{assetType}/versions/{version}/compatibleversions:
    put:
      tags:
        - FirmwareUpdateAdmin
      summary: Update Compatible Versions of an Asset
      description: "Only an authorized user, with access to manage versionable assets, can use this API to update the compatible versions of an existing asset.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>UpdateCompatibleVersionsOfAsset</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/sampledevicetypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/versions/1.5.0/compatibleversions\n[\r\n  \"1.2.0\",\r\n  \"1.3.1\"\r\n]\n```\n</details>"
      operationId: FirmwareUpdateAdmin_UpdateCompatibleVersionsOfAsset
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device whose associated compatible versions are to be
            updated.
          required: true
          schema:
            type: string
        - name: assetType
          in: path
          description: The type of asset.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: >-
            The version of the asset to which the assets in the compatible
            versions can upgrade to.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/xml:
            schema:
              type: array
              items:
                type: string
          text/xml:
            schema:
              type: array
              items:
                type: string
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                type: string
        description: >-
          The version of the assets which can upgrade to the version in the path
          parameter. For example, when a version in the path parameter is 1.5.0
          and the versions in <b>compatibleversions</b> and body parameter are
          1.2.0 and 1.3.0, then the assets with versions 1.2.0 and 1.3.0 can be
          upgraded to 1.5.0.
        required: true
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/systemIds/{base64EncodedSystemId}:
    get:
      tags:
        - FirmwareUpdateAdmin
      summary: Get Device Firmware Details
      description: "Gets current firmware details of a device.\r\n            <br>This API can be used by applications to determine the current firmware version and verification code for all the assets in a device by specifying deviceType and systemId.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareStatusRead</p>\r\n<p><b>Action:</b>GetDeviceFirmwareDetail</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/systemIds/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Version\": \"1.0.0\",\r\n  \"VerificationCode\": \"verificationCode1\",\r\n  \"AssetName\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: FirmwareUpdateAdmin_GetDeviceFirmwareDetail
      parameters:
        - name: deviceType
          in: path
          description: >-
            The type of device for which the current firmware details are to be
            retrieved.
          required: true
          schema:
            type: string
        - name: base64EncodedSystemId
          in: path
          description: Base64-encoded system ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched the response.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiGetDeviceFirmwareDetailResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiGetDeviceFirmwareDetailResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiGetDeviceFirmwareDetailResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiGetDeviceFirmwareDetailResponse'
        '400':
          description: >-
            Bad Request: When SystemId is null, white space, or greater than 50
            characters.
        '401':
          description: >-
            Unauthorized: The caller is not authorized against the activity
            FirmwareStatusRead.
        '404':
          description: 'Not Found: No entry found for the given deviceType and systemId.'
        '500':
          description: 'Internal Server Error: Unexpected error.'
      deprecated: false
  /api/authentication/fixture/rpkchallenge:
    post:
      tags:
        - FixtureRpkChallenge
      summary: Request Challenge for Fixture Authentication
      description: "Generates a challenge for factory fixture authentication via RPK.\r\n            <br>The API generates a cryptographically random number to challenge the caller. \r\n            The caller is expected to sign the challenge with its own private key and submit the response to <a href=\"/api/public#operation/FixtureRpkChallenge_VerifyChallengeResponse\" target=\"_blank\">Verify Challenge Response API</a> to authenticate itself.</br><br><b>Authorization:</b> Fixture Jwt Token</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxxxxxxxxxxxxxxxx.dsentience.net/api/authentication/fixture/rpkchallenge\n{\r\n  \"FixtureId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ChallengeString\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"ChallengeResponseApiUrl\": \"api/authentication/fixture/rpkchallengeresponse\"\r\n}\n```\n</details>"
      operationId: FixtureRpkChallenge_RequestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiFixtureDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiFixtureDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiFixtureDetails'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiFixtureDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiFixtureDetails'
        description: Contains detail of the fixture which is registering devices.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
            text/json:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
            application/xml:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
            text/xml:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>FixtureDetails is null.</li><li>FixtureDetail.FixtureId is null.</li></ul>"
        '401':
          description: 'Unauthorized: Fixture has expired.'
        '404':
          description: 'Not Found: Fixture has not been registered earlier.'
        '500':
          description: Internal Server Error
      deprecated: false
  /api/authentication/fixture/rpkchallengeresponse:
    post:
      tags:
        - FixtureRpkChallenge
      summary: Verify Challenge Response for Fixture Authentication
      description: "Validates the challenge response for factory fixture authentication via RPK.\r\n            <br>On successful validation, this API returns a time limited JWT token that can be used to call <a href=\"/api/public#operation/FactoryRegistration_RegisterSystem\" target=\"_blank\">Register System API</a> to register system from the fixture.</br><br><b>Authorization:</b> Fixture Jwt Token</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxxxxxxxxxxxxxxxx.dsentience.net/api/authentication/fixture/rpkchallengeresponse\n{\r\n  \"FixtureId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ClientRandom\": \"xxxxxxxxxx\",\r\n  \"ClientRandomSignature\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"IdentityJwt\": \"xxxxxx......\"\r\n}\n```\n</details>"
      operationId: FixtureRpkChallenge_VerifyChallengeResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixtureRpkChallengeResponse'
          text/json:
            schema:
              $ref: '#/components/schemas/FixtureRpkChallengeResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/FixtureRpkChallengeResponse'
          text/xml:
            schema:
              $ref: '#/components/schemas/FixtureRpkChallengeResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FixtureRpkChallengeResponse'
        description: Contains response details for the RPK challenge obtained for fixture.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
            text/json:
              schema:
                $ref: '#/components/schemas/Identity'
            application/xml:
              schema:
                $ref: '#/components/schemas/Identity'
            text/xml:
              schema:
                $ref: '#/components/schemas/Identity'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>challengeResponse is null.</li><li>challengeResponse.FixtureId is null.</li><li>challengeResponse.ClientRandom is null.</li><li>challengeResponse.ClientRandomSignature is null.</li></ul>"
        '401':
          description: "Unauthorized: When:\r\n            <ul><li>Challenge is expired.</li><li>Cannot validate challenge signature.</li></ul>"
        '404':
          description: >-
            Fixture is not registered (RPK challenge has not been generated for
            this fixture).
        '500':
          description: Internal Server Error
      deprecated: false
  /api/fixtures:
    get:
      tags:
        - Fixtures
      summary: Get Fixtures
      description: "An authorized user who has access to manage the fixtures can use this API to get the list of all registered factory fixtures.\r\n            <br><b>Note:</b> This API is not implemented yet.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageFixture</p>\r\n<p><b>Action:</b>GetFixtures</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/fixtures\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"FixtureExpiryDateTime\": \"2019-03-07T06:32:15.950Z\",\r\n    \"UniqueId\": \"string\",\r\n    \"PublicKey\": \"string\"\r\n  }\r\n]\n```\n</details>"
      operationId: Fixtures_GetFixtures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiFixtureDetailsResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiFixtureDetailsResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiFixtureDetailsResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiFixtureDetailsResponse'
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to retrieve
            registered factory fixtures.
        '500':
          description: >-
            Error occurred while trying to retrieve factory fixtures. Request
            can be retried.
      deprecated: false
    post:
      tags:
        - Fixtures
      summary: Create Fixture
      description: "Registers a new factory fixture.\r\n            <br />A fixture could be a computer or a software system from which systems (IoT device) can be registered to Honeywell Sentience.\r\n            <br />Fixture registration is valid only for 6 months. After 6 months, the fixture has to be re-registered with Honeywell Sentience.\r\n            <br><b>Note:</b> Honeywell Sentience rejects a request of a system registration if it is not coming from a registered fixture.</br>\r\n<p><b>Authorization:</b>GlobalActivity-CreateFixture</p>\r\n<p><b>Action:</b>CreateFixture</p>\r\n<p><b>Intended to be used by:</b>User</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/fixtures\n{\r\n  \"PublicKey\": \"xxxxx.../xxxxx.../xxxxx...==\",\r\n  \"FixtureName\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"FixtureExpiryDateTime\": \"2019-09-09T13:13:43.1327405+00:00\",\r\n  \"FixtureId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: Fixtures_CreateFixture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiFixtureRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiFixtureRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiFixtureRegistrationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiFixtureRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiFixtureRegistrationRequest'
        description: Contains fixture details for registration.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiFixtureRegistrationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiFixtureRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiFixtureRegistrationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiFixtureRegistrationResponse'
        '400':
          description: 'Bad Request: If PublicKey is null or empty.'
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to register
            factory fixtures.
        '409':
          description: 'Conflict: If the passed public key is already registered.'
        '500':
          description: >-
            Error occurred while trying to save factory fixture details to
            factory fixture registry. Request can be retried.
      deprecated: false
  /api/fixtures/{fixtureId}:
    put:
      tags:
        - Fixtures
      summary: Revoke Fixture
      description: "Revokes a registered factory fixture.\r\n            <br>Once the fixture is revoked, it cannot register more systems (IoT devices). This is generally done as a security measure to prevent fraudulent systems getting registered with Honeywell Sentience.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageFixture</p>\r\n<p><b>Action:</b>RevokeFixture</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/fixtures/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details>"
      operationId: Fixtures_RevokeFixture
      parameters:
        - name: fixtureId
          in: path
          description: Unique ID of the registered fixture that needs to be revoked.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to revoke the
            registered factory fixture.
        '404':
          description: 'Not Found: If the given fixture is not registered.'
        '500':
          description: >-
            Error occurred while trying to revoke the factory fixture. Request
            can be retried.
      deprecated: false
    delete:
      tags:
        - Fixtures
      summary: Deletes Fixture
      description: "An authorized user who has access to manage the fixtures can use this API to delete a registered factory fixture.\r\n            <br><b>Note:</b> This API is not implemented yet.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageFixture</p>\r\n<p><b>Action:</b>DeleteFixture</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/fixtures/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details>"
      operationId: Fixtures_DeleteFixture
      parameters:
        - name: fixtureId
          in: path
          description: Unique ID of the fixture to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to delete the
            registered factory fixture.
        '404':
          description: 'Not Found: If the given fixture is not registered.'
        '500':
          description: >-
            Error occurred while trying to delete the factory fixture. Request
            can be retried.
      deprecated: false
  /api/fixtures/{fixtureId}/systemtypes/{systemType}:
    post:
      tags:
        - Fixtures
      summary: Add System Type To Fixture
      description: "Adds a system type to a registered factory fixture. Only an authorized user having the access to add a system type can use this API.\r\n<p><b>Authorization:</b>SystemTypeActivity-ManageFixtureSystemTypesMapping</p>\r\n<p><b>Action:</b>AddSystemTypeToFixture</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/fixtures/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: Fixtures_AddSystemTypeToFixture
      parameters:
        - name: fixtureId
          in: path
          description: Unique ID of the registered fixture.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: System type to be added to the registered factory fixture.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad Request: Bad parameter.'
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to add a system
            type to the registered factory fixture.
        '500':
          description: >-
            Error occurred while trying to add a system type to the factory
            fixture. Request can be retried.
      deprecated: false
  /api/fixtures/{fixtureId}/systemtypes:
    get:
      tags:
        - Fixtures
      summary: Get System Type Mappings of Registered Fixtures
      description: "An authorized user who has access to manage the fixtures can use this API to get list of associated system types on a registered factory fixture.\r\n            <br><b>Note:</b> This API is not implemented yet.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageFixture</p>\r\n<p><b>Action:</b>GetFixtureSystemTypeMappings</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/fixtures/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemtypes\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  \"string\"\r\n]\n```\n</details>"
      operationId: Fixtures_GetFixtureSystemTypeMappings
      parameters:
        - name: fixtureId
          in: path
          description: >-
            Unique ID of the registered factory fixture whose system types are
            required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            application/xml:
              schema:
                type: array
                items:
                  type: string
            text/xml:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to retrieve the
            associated system types on the registered factory fixture.
        '500':
          description: >-
            Error occurred while trying to retrieve the associated system types
            on the fixture. Request can be retried.
      deprecated: false
  /api/fixtures/{fixtureId}/systemTypes/{systemType}:
    delete:
      tags:
        - Fixtures
      summary: Remove System Type from Fixture
      description: "An authorized user who has access to associate system type to a fixture can use this API to remove a system type from registered fixture.\r\n            <br><b>Note:</b> This API is not implemented yet.</br>\r\n<p><b>Authorization:</b>SystemTypeActivity-ManageFixtureSystemTypes</p>\r\n<p><b>Action:</b>RemoveSystemTypeFromFixture</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/fixtures/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: Fixtures_RemoveSystemTypeFromFixture
      parameters:
        - name: fixtureId
          in: path
          description: >-
            Unique ID of the registered fixture whose system type needs to be
            removed.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: Unique ID of the system type that needs to be removed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          description: >-
            Unauthorized: Caller does not have the permission to remove a system
            type from the registered factory fixture.
        '404':
          description: 'Not Found: If the given system type is not found on the fixture.'
        '500':
          description: >-
            Error occurred while trying to remove system type from fixture.
            Request can be retried.
      deprecated: false
  /api/resourceregistry/resourcesTypes/{resourceType}/resources:
    post:
      tags:
        - ForgeAccessResourceRegistry
      summary: Add Forge Access Global Resource
      description: "Adds a new global resource to Honeywell Sentience platform.\r\n            <br><b>For example</b> : If a caller passes the resource id as \"testresource\", the API creates the resource by combining global name and resource type as global. So, the resource will be created with name as \"globalname/global/testresource\". </br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageSystemType</p>\r\n<p><b>Action:</b>AddGlobalResource</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/globalresource\n{\r\n  \"ResourceId\": \"xxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"Props\": {\r\n    \"xxx\": \"xxxx\"\r\n  }\r\n}\n```\n</details>"
      operationId: ForgeAccessResourceRegistry_AddGlobalResource
      parameters:
        - name: resourceType
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ForgeAccessResourceRegistryRequest'
      responses:
        '201':
          description: 'Created: Successfully added global resource.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
        '400':
          description: >-
            Bad Request: ResourceId in the body and project id in the header is
            mandatory to add global resource.
        '401':
          description: >-
            Unauthorized: Lack of required permissions. Required activity:
            ManageSystemType
        '403':
          description: 'Forbidden: Not allowed to add a global resource'
        '404':
          description: 'Not Found: No such path exists'
        '409':
          description: 'Conflict: Project already contains a resource with same name.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation'
      deprecated: false
  /api/resourceregistry/system:
    post:
      tags:
        - ForgeAccessResourceRegistry
      summary: Add Forge Access resource for a given System.
      description: "Adds a new resource to Honeywell Sentience platform for a given System. This API requires the System's Provisioning State to be Provisioned.\r\n             <br><b>For example</b> : If a caller passes the resource Id as \"testresource\", the API creates the resource by combining global name and resource type as System. So, the resource will be created with name as \"globalname/system/testresource\". </br>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>"
      operationId: ForgeAccessResourceRegistry_AddResource
      requestBody:
        $ref: '#/components/requestBodies/ForgeAccessResourceRegistryRequest'
      responses:
        '201':
          description: 'Created: Successfully added resource.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisteredResourceDetails'
        '400':
          description: >-
            Bad Request: Resource Id in the body and project id in the header is
            mandatory to add resource.
        '401':
          description: >-
            Unauthorized: Lack of required permissions. Required activity:
            RegisterSystemType
        '403':
          description: 'Forbidden: Not allowed to add the resource'
        '404':
          description: 'Not Found: No such path exists'
        '409':
          description: 'Conflict: Project already contains a resource with same Id.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation'
      deprecated: false
  /api/modeltypes:
    get:
      tags:
        - ModelTypeAdmin
      summary: Get List of Model Types
      description: "Retrieves list of all the model types.\r\n<p><b>Authorization:</b>GlobalActivity-ListModelTypes</p>\r\n<p><b>Action:</b>GetModelTypes</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/modeltypes\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"ModelTypeId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-context-discovery\",\r\n    \"Description\": \"Default ModelType created for xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"ModelTypeId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-lcbls-model\",\r\n    \"Description\": \"Default ModelType created for xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n  }\r\n]\n```\n</details>"
      operationId: ModelTypeAdmin_GetModelTypes
      responses:
        '200':
          description: 'OK: The result is the collection of model types.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiModelTypeResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiModelTypeResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiModelTypeResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiModelTypeResponse'
        '401':
          description: >-
            Unauthorized: Lack of required permissions. Required activity:
            ListModelTypes.
        '403':
          description: 'Forbidden: Not allowed to get model types.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    post:
      tags:
        - ModelTypeAdmin
      summary: Register Model Type
      description: "Adds a new model type.\r\n<p><b>Authorization:</b>GlobalActivity-RegisterModelType</p>\r\n<p><b>Action:</b>RegisterModelType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxx.dsentience.net/api/modeltypes\n{\r\n  \"ModelTypeId\": \"context-discoveryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ModelTypeId\": \"context-discoveryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"Description\": null\r\n}\n```\n</details>"
      operationId: ModelTypeAdmin_RegisterModelType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypeRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiModelTypeRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypeRegistrationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiModelTypeRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiModelTypeRegistrationRequest'
        description: Includes detail of model type that needs to be registered.
        required: true
      responses:
        '201':
          description: 'Created: Registered a new model type.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
        '401':
          description: >-
            Unauthorized: Lack of required permissions. Required activity:
            RegisterModel.
        '403':
          description: 'Forbidden: Not allowed to add a model type.'
        '409':
          description: >-
            Conflict: A model type with the same modelTypeId already exists, and
            its corresponding permissions have already been created.
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/modeltypes/{modelTypeId}:
    get:
      tags:
        - ModelTypeAdmin
      summary: Get a Model Type
      description: "Retrieves model type details.\r\n            A specific model type is fetched by using its unique ID.\r\n<p><b>Authorization:</b>GlobalActivity-ListModelTypes</p>\r\n<p><b>Action:</b>GetModelType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/modeltypes/context-discoveryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ModelTypeId\": \"context-discoveryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"Description\": \"Test description 1\"\r\n}\n```\n</details>"
      operationId: ModelTypeAdmin_GetModelType
      parameters:
        - name: modelTypeId
          in: path
          description: Unique ID of the model type required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: The result is the requested model type.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiModelTypeResponse'
        '401':
          description: >-
            Unauthorized: Lack of required permissions. Required activity:
            ListModelTypes.
        '403':
          description: 'Forbidden: Not allowed to get a model type.'
        '404':
          description: 'Not Found: Model type with specified modelTypeId does not exists.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/auth/applications/v2:
    post:
      tags:
        - NewApplication
      summary: Register Application V2
      description: "Creates a new application identity in Honeywell Sentience Active Directory.\r\n            <br>The API registers an Azure AD application that can be used to make requests against Honeywell Sentience Platform. By default, the following permissions are added to the newly created application. </br><ul><li>Global permission (CustomApplications)</li><li>Custom permission (ConfigureCustomPermission and CheckCustomPermission)</li></ul>\r\n            These permissions allow newly created applications to consume Honeywell Sentience Services and manage permissions for its downstream consumers.\r\n<p><b>Authorization:</b>GlobalActivity-CreateCustomApplication</p>\r\n<p><b>Action:</b>RegisterApplicationV2</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/v2\n{\r\n  \"ApplicationName\": \"xxxxxxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ApplicationId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ApplicationKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"ApplicationAppIdUri\": \"https://xxxxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxcustomapplication.connectedbuildings.com\"\r\n}\n```\n</details>"
      operationId: NewApplication_RegisterApplicationV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/NewApplicationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewApplicationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/NewApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewApplicationRequest'
        description: >-
          The request data which holds the parameters required to create the
          application identity.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiApplicationRegistrationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiApplicationRegistrationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiApplicationRegistrationResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiApplicationRegistrationResult'
        '400':
          description: 'Bad Request: Request is not on behalf of the user.'
        '500':
          description: 'Internal Server Error: When any internal operations fail.'
      deprecated: false
  /api/auth/applications/v3:
    post:
      tags:
        - NewApplication
      summary: Register Application V3
      description: "Creates an application identity in Honeywell Sentience IAM.\r\n            Only an authorized application or user can use this API.\r\n            <br><b>Note</b>: The application identity is created in ForgeRock. For creating application identity in Azure AD, use the v2 version of this API.</br>\r\n<p><b>Authorization:</b>GlobalActivity-CreateCustomApplication</p>\r\n<p><b>Action:</b>RegisterApplicationV3</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://gdatdevregui.dsentience.net/api/auth/applications/v3\n{\r\n  \"ApplicationName\": \"xxxxxxxx\",\r\n  \"ApplicationLoginUrl\": \"http://login.xxxxxxxx.com\",\r\n  \"RedirectionUrl\": \"https://index.xxxxxxxx.com\",\r\n  \"SupportEmail\": \"supportemail@testapp.com\",\r\n  \"SupportPhone\": \"xxxxxx\",\r\n  \"SupportWebsite\": \"http://support.xxxxxxxx.com\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ApplicationName\": \"xxxxxxxx\",\r\n  \"ApplicationGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"BaseUrl\": \"https://imsdat.sentienceanalytics.com/openam/XUI/#login//xxxxxxxxxx\",\r\n  \"SupportEmail\": \"supportemail@testapp.com\",\r\n  \"SupportPhone\": \"xxxxxx\",\r\n  \"SupportWebsite\": \"http://support.xxxxxxxx.com\",\r\n  \"ClientId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ClientSecret\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"Realm\": \"/xxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: NewApplication_RegisterApplicationV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateApplicationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateApplicationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiCreateApplicationRequest'
        description: >-
          The request data which holds the parameters required to create the
          application identity.
        required: true
      responses:
        '200':
          description: 'Ok: Successfully created application identity.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiCreateApplicationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiCreateApplicationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiCreateApplicationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiCreateApplicationResponse'
        '400':
          description: "Bad Request: In following cases:\r\n            <ul><li>ApplicationName is null or empty.</li><li>RedirectionUrl is null or empty.</li><li>RedirectionUrl is not https.</li><li>SupportEmail is provided but not in proper email format. SupportEmail is an optional field.</li><li>Request body is null.</li></ul>"
        '401':
          description: 'Unauthorized: The caller is not authorized to perform this action.'
        '403':
          description: 'Forbidden: The caller is forbidden from performing this action.'
        '409':
          description: >-
            Conflict: The application identity with the same name already
            exists.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/permissions/self:
    post:
      tags:
        - PermissionChecker
      summary: Check Self Permissions
      description: "Checks the permissions for current caller.\r\n<p><b>Authorization:</b>GlobalActivity-CheckSelfPermissions</p>\r\n<p><b>Action:</b>CheckSelfPermissions</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxx.dsentience.net/api/auth/permissions/self\n{\r\n  \"EntityType\": \"System\",\r\n  \"EntityId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ActivityIds\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"ReadModel\"\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ReadPointHistory\",\r\n    \"IsAuthorized\": false\r\n  },\r\n  {\r\n    \"Activity\": \"ReadPointValues\",\r\n    \"IsAuthorized\": false\r\n  },\r\n  {\r\n    \"Activity\": \"ReadModel\",\r\n    \"IsAuthorized\": false\r\n  }\r\n]\n```\n</details>"
      operationId: PermissionChecker_CheckSelfPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCheckSelfPermissionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiCheckSelfPermissionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiCheckSelfPermissionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiCheckSelfPermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiCheckSelfPermissionRequest'
        description: Request object to check permissions for the current caller.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
        '400':
          description: >-
            Bad Request: When:<ul><li>EntityId, EntityType or ActivityIds is
            null or empty.</li><li>Supplied invalid EntityType or
            ActivityIds.</li></ul>
        '403':
          description: 'Unauthorized: Caller is not authorized to invoke the API.'
        '500':
          description: 'Internal Server Error: Unknown error while checking permission.'
      deprecated: false
  /api/auth/permissions:
    post:
      tags:
        - PermissionChecker
      summary: Check Permissions
      description: "Checks the permissions for the supplied application/user.\r\n<p><b>Authorization:</b>GlobalActivity-CheckPermissions</p>\r\n<p><b>Action:</b>CheckPermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxx.dsentience.net/api/auth/permissions\n{\r\n  \"EntityType\": \"System\",\r\n  \"EntityId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ActivityIds\": [\r\n    \"ReadPointHistory\",\r\n    \"ReadPointValues\",\r\n    \"ReadModel\"\r\n  ],\r\n  \"WebApiClaims\": [\r\n    {\r\n      \"Type\": \"string\",\r\n      \"Value\": \"string\"\r\n    }\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"ReadPointHistory\",\r\n    \"IsAuthorized\": true\r\n  },\r\n  {\r\n    \"Activity\": \"ReadPointValues\",\r\n    \"IsAuthorized\": true\r\n  },\r\n  {\r\n    \"Activity\": \"ReadModel\",\r\n    \"IsAuthorized\": false\r\n  }\r\n]\n```\n</details>"
      operationId: PermissionChecker_CheckPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCheckPermissionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiCheckPermissionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiCheckPermissionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiCheckPermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiCheckPermissionRequest'
        description: Request object to check permissions for the supplied application/user.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiCheckPermissionResponse'
        '400':
          description: >-
            Bad Request: When:<ul><li>EntityId, EntityType or ActivityIds is
            null or empty.</li><li>Supplied invalid EntityType or
            ActivityIds.</li></ul>
        '403':
          description: 'Unauthorized: Caller is not authorized to invoke the API.'
        '500':
          description: 'Internal Server Error: Unknown error while checking permission.'
      deprecated: false
  /api/auth/projects/{base64EncodedParentProjectName}/subprojects:
    get:
      tags:
        - Project
      summary: Get List of Sub-Projects
      description: "Gets the list of sub-projects under a project.\r\n            <br>This API can be called by a user or an application to get the list of all sub projects under a project. If the parent project is root, then pass base64-encoded “/” as the value of <b>base64EncodedParentProjectName</b> parameter.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjects</p>\r\n<p><b>Action:</b>FetchProjects</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/projects/xxxxxxxx/subprojects\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Projects\": [\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"HBT_Lcbs-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"HBT_IC5-]xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n  ]\r\n}\n```\n</details>"
      operationId: Project_FetchProjects
      parameters:
        - name: base64EncodedParentProjectName
          in: path
          description: >-
            Pass the parent project name. If the parent project is root, then
            pass base64-encoded value of "/".
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Ok: Successfully fetched all sub-projects.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectsReponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectsReponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectsReponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectsReponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project name is not a valid base64-encoded value.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the parent
            project is not found.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/projects:
    post:
      tags:
        - Project
      summary: Create Project
      description: "Creates a project in Honeywell Sentience.\r\n            <br>It enables the user or application to create tags for authorization under the project.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjects</p>\r\n<p><b>Action:</b>CreateProject</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/projects\n{\r\n  \"Name\": \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ParentProjectName\": \"/\"\r\n}\n```\n</details>"
      operationId: Project_CreateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectRequest'
        description: Project creation request.
        required: true
      responses:
        '201':
          description: 'Created: Successfully created project.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the parent
            project is not found.
        '409':
          description: 'Conflict: The project with same name already exists.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/projects/{base64EncodedProjectName}:
    delete:
      tags:
        - Project
      summary: Delete Project
      description: "Deletes a project in Honeywell Sentience.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjects</p>\r\n<p><b>Action:</b>DeleteProject</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/projects/xxxxxxxxxx...\n\n```\n</details>"
      operationId: Project_DeleteProject
      parameters:
        - name: base64EncodedProjectName
          in: path
          description: Bse64-encoded name of the project to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Ok: Successfully deleted the project.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project name is not a valid base64-encoded value.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the project
            does not exist.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/project/activities:
    post:
      tags:
        - Project
      summary: Create Project Activities
      description: "Creates multiple activities in a project.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectActivities</p>\r\n<p><b>Action:</b>CreateProjectActivities</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/project/activities\n{\r\n  \"Activities\": [\r\n    \"createpoint\",\r\n    \"readpointvalue\"\r\n  ],\r\n  \"ProjectName\": \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: Project_CreateProjectActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectActivitiesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectActivitiesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectActivitiesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectActivitiesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectActivitiesRequest'
        description: >-
          Contains name of the project and list of activities to be created
          under it.
        required: true
      responses:
        '201':
          description: 'Created: Successfully created activities.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project is not found.</li><li>The activity list is null or empty.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the project
            is not found.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/projects/{base64EncodedProjectName}/activities:
    get:
      tags:
        - Project
      summary: Get Project Activities
      description: "Gets the list of activities under a project. \r\n            <br>This API can be called by a user or an application to get the list of activities for a project. If the parent project is root, then pass base64-encoded “/” as the value of <b>base64EncodedProjectName</b> parameter.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectActivities</p>\r\n<p><b>Action:</b>GetProjectActivities</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/projects/xxxxxxxxxx.../activities\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/createpoint\",\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/readpointvalue\"\r\n  ]\r\n}\n```\n</details>"
      operationId: Project_GetProjectActivities
      parameters:
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the project name. If the project is root, then pass
            base64-encoded value of "/".
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Ok: Successfully fetched all activities.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchProjectActivitiesResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project name is not a valid base64-encoded value.</li><li>The project is not found.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the project
            is not found.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - Project
      summary: Delete Project Activities.
      description: "Deletes the list of activities under a project.\r\n            <br>This API can be called by a user or an application to delete the list of activities for a project. If the parent project is root, then pass base64-encoded “/” as the value of <b>base64EncodedProjectName</b> parameter.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectActivities</p>\r\n<p><b>Action:</b>DeleteProjectActivity</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/projects/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/activities\n\n```\n</details>"
      operationId: Project_DeleteProjectActivity
      parameters:
        - name: base64EncodedProjectName
          in: path
          description: >-
            Base64-encoded name of the project whose activities are to be
            deleted.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectActivitiesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectActivitiesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectActivitiesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectActivitiesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectActivitiesRequest'
        description: Payload containing the list of activities to be deleted.
        required: true
      responses:
        '200':
          description: 'Ok: Successfully deleted the activities.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project name is not a valid base64-encoded value.</li><li>The project is not found.</li><li>The activities list is null or empty.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the consumer is not having permission or the project
            is not found.
        '404':
          description: 'Not Found: When any of the activity in the list is not found.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/project/tags:
    post:
      tags:
        - Project
      summary: Create Project Tags
      description: "Creates multiple tags in a project.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectTags</p>\r\n<p><b>Action:</b>CreateProjectTags</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/project/tags\n{\r\n  \"Tags\": [\r\n    \"hbt/lcbs/customera/building1/floor9\",\r\n    \"hbt/lcbs/customera/building1/floor9/confroom1\"\r\n  ],\r\n  \"ProjectName\": \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: Project_CreateProjectTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectTagsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectTagsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectTagsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectTagsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiCreateProjectTagsRequest'
        description: >-
          Payload containing name of the project and list of tags to be created
          under it.
        required: true
      responses:
        '201':
          description: 'Created: Successfully created tags.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project is not found.</li><li>The tag list is null or empty.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the project
            is not found.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/projects/{base64EncodedProjectName}/tags:
    get:
      tags:
        - Project
      summary: Get Project Tags
      description: "Gets the list of tags under a project.  \r\n            <br>This API can be called by a user or application to get the list of tags for a project. If the parent project is root, then pass base64-encoded “/” as the value of <b>base64EncodedProjectName</b> parameter.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectTags</p>\r\n<p><b>Action:</b>GetProjectTags</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/projects/xxxxx.../tags\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Tags\": [\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/hbt/lcbs/customera/building1/floor9\",\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/hbt/lcbs/customera/building1/floor9/confroom1\"\r\n  ]\r\n}\n```\n</details>"
      operationId: Project_GetProjectTags
      parameters:
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the project name. If the project is root, then pass
            base64-encoded value of "/".
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Ok: Successfully fetched all tags.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiGetProjectTagsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiGetProjectTagsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiGetProjectTagsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiGetProjectTagsResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name starts with \"/\".</li><li>The project name is null or empty.</li><li>The project name is not a valid base64-encoded value.</li><li>The project is not found.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the project
            is not found.
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - Project
      summary: Delete Project Tags
      description: "Deletes the list of tags under a project. \r\n            <br>This API can be called by a user or an application to delete the list of tags for a project. If the parent project is root, then pass base64-encoded “/” as the value of <b>base64EncodedProjectName</b> parameter.</br>\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectTags</p>\r\n<p><b>Action:</b>DeleteProjectTags</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/projects/xxxxxxxxxx.../tags\n{\r\n  \"Tags\": [\r\n    \"hbt/lcbs/customera/building1/floor9\",\r\n    \"hbt/lcbs/customera/building1/floor9/confroom1\"\r\n  ]\r\n}\n```\n</details>"
      operationId: Project_DeleteProjectTags
      parameters:
        - name: base64EncodedProjectName
          in: path
          description: Base64-encoded name of the project whose tags are to be deleted.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectTagsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectTagsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectTagsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectTagsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiDeleteProjectTagsRequest'
        description: Payload containing the list of tags to be deleted.
        required: true
      responses:
        '200':
          description: 'Ok: Successfully deleted the tags.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project name is starting with \"/\".</li><li>The project name is null or empty.</li><li>The project name is not a valid base64-encoded value.</li><li>The project is not found.</li><li>The Tag list is null or empty.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller is not having the permission or the project
            is not found.
        '404':
          description: 'Not Found: When any of the tag in the list is not found.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/projects/{base64EncodedProjectName}:
    post:
      tags:
        - ProjectAuth
      summary: Grant Global Permissions on a Project for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>GrantGlobalPermissionsOnAProjectForApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/projects/xxxxxxxx\n{\r\n  \"GlobalActivities\": [\r\n    \"ManageProjects\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_GrantGlobalPermissionsOnAProjectForApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which global permissions are granted.
          required: true
          schema:
            type: string
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the base64-encoded project name to which the permissions are
            granted. If the project is root, then pass base64-encoded value of
            "/".
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectGlobalActivitiesRequest2'
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project is not found.</li><li>The list of activities is empty or null.</li><li>The activity is not a global level activity.</li><li>The project name is not a valid base64-encoded value.</li><li>The applicationGuid is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the parent
            project is not found.
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - ProjectAuth
      summary: Remove Global Permissions on a Project for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>RemoveGlobalPermissionsOnAProjectForApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/projects/xxxxxxxx\n{\r\n  \"GlobalActivities\": [\r\n    \"ManageProjectPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_RemoveGlobalPermissionsOnAProjectForApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which permissions are removed.
          required: true
          schema:
            type: string
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the base64-encoded project name against which the permissions
            are removed. If the project is root, then pass base64-encoded value
            of "/".
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectGlobalActivitiesRequest'
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project is not found.</li><li>The list of activities is empty or null.</li><li>The activity is not a global level activity.</li><li>The project name is not a valid base64-encoded value.</li><li>The applicationGuid is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the parent
            project is not found.
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/projects/{base64EncodedProjectName}/activity/{activityName}:
    get:
      tags:
        - ProjectAuth
      summary: Check Global Permissions on a Project for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>CheckGlobalPermissionsOnAProjectForApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/projects/xxxxxxxx/activity/ManageProjectPermissions\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"HasPermission\": true\r\n}\n```\n</details>"
      operationId: ProjectAuth_CheckGlobalPermissionsOnAProjectForApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which global permissions are checked.
          required: true
          schema:
            type: string
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the base64-encoded project name against the global permissions
            that are checked. If the project is root, then pass base64-encoded
            value of "/".
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: Name of the global activity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully checked permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckProjectPermissionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckProjectPermissionResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project is not found.</li><li>The activity is null or empty.</li><li>The activity is not a global level activity.</li><li>The project name is not a valid base64-encoded value.</li><li>The applicationGuid is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the project is
            not found.
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/projects/{base64EncodedProjectName}:
    post:
      tags:
        - ProjectAuth
      summary: Grant Global Permissions on a Project for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>GrantGlobalPermissionsOnAProjectForUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/projects/xxxxxxxx\n{\r\n  \"GlobalActivities\": [\r\n    \"ManageProjectPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_GrantGlobalPermissionsOnAProjectForUser
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which global permissions are granted.
          required: true
          schema:
            type: string
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the base64-encoded project name to which the permissions are
            granted. If the project is root, then pass base64-encoded value of
            "/".
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectGlobalActivitiesRequest2'
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project is not found.</li><li>The list of activity is empty or null.</li><li>The activity is not a global level activity.</li><li>The project name is not a valid base64-encoded value.</li><li>The userId is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the project is
            not found.
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - ProjectAuth
      summary: Remove Global Permissions on a Project for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>RemoveGlobalPermissionsOnAProjectForUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/projects/xxxxxxxx\n{\r\n  \"GlobalActivities\": [\r\n    \"ManageProjectPermissions\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_RemoveGlobalPermissionsOnAProjectForUser
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which permissions are removed.
          required: true
          schema:
            type: string
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the base64-encoded project name against which the permissions
            are removed. If the project is root, then pass base64-encoded value
            of "/".
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectGlobalActivitiesRequest'
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project is not found.</li><li>The list of activities is empty or null.</li><li>The activity is not a global level activity.</li><li>The project name is not a valid base64-encoded value.</li><li>The userId is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the project is
            not found.
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/projects/{base64EncodedProjectName}/activity/{activityName}:
    get:
      tags:
        - ProjectAuth
      summary: Check Global Permissions on a Project for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>CheckGlobalPermissionsOnAProjectForUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/projects/xxxxxxxx/activity/ManageProjectPermissions\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"HasPermission\": true\r\n}\n```\n</details>"
      operationId: ProjectAuth_CheckGlobalPermissionsOnAProjectForUser
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which permissions are checked.
          required: true
          schema:
            type: string
        - name: base64EncodedProjectName
          in: path
          description: >-
            Pass the base64-encoded project name against the permissions that
            are checked. If the project is root, then pass base64-encoded value
            of "/".
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: Name of the global activity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully checked permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckProjectPermissionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckProjectPermissionResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The project is not found.</li><li>The activity is null or empty.</li><li>The activity is not a global level activity.</li><li>The project name is not a valid base64-encoded value.</li><li>The userId is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the project is
            not found.
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/activities/{activityName}/tags:
    get:
      tags:
        - ProjectAuth
      summary: Fetch Tags Associated to an Application
      description: "Retrieves list of all tags associated to an application for an activity.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>FetchApplicationAssociateTags</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities/ReadModel/tags\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Tags\": [\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/hbt/lcbs/customera/building1/floor9\",\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/hbt/lcbs/customera/building1/floor9/confroom1\",\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/sps/cfreight/company1/truck1\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_FetchApplicationAssociateTags
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which tags are returned.
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: Name of the activity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched all tags.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The applicationGuid is not valid.</li><li>The activity is null or empty.</li><li>The activity is not found.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: 'Forbidden: If the application is not having permission.'
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/tags/{base64EncodedTag}:
    post:
      tags:
        - ProjectAuth
      summary: Grant Tag Permissions for an Application
      description: "Grants tag permissions for an application on given activities.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>GrantTagPermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tags/xxxxxxxx...\n{\r\n  \"Activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_GrantTagPermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which tag permissions are granted.
          required: true
          schema:
            type: string
        - name: base64EncodedTag
          in: path
          description: >-
            Pass the base64-encoded tag name to which the permissions are
            granted.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectActivitiesRequest'
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The tag is not found.</li><li>The tag name is not a valid base64-encoded value.</li><li>The tag name starts with /.</li><li>The applicationGuid is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the tag is not
            found.
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - ProjectAuth
      summary: Remove Tag Permission from an Application
      description: "Removes tag permissions for an application on activities.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>RemoveTagPermissionFromApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tags/xxxxxxxx...\n{\r\n  \"Activities\": [\r\n    \"ReadModel\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_RemoveTagPermissionFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: GUID of the application for which tag permissions are removed.
          required: true
          schema:
            type: string
        - name: base64EncodedTag
          in: path
          description: >-
            Pass the base64-encoded tag name to which the permissions are
            removed.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectActivitiesRequest'
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The tag is not found.</li><li>The tag name is not a valid base64-encoded value.</li><li>The tag name starts with /.</li><li>The list of tags is empty or null.</li><li>The applicationGuid is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the tag is not
            found.
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/tags/{base64EncodedTag}/activities/{activityName}:
    get:
      tags:
        - ProjectAuth
      summary: Check Global Permissions on a Tag for an Application
      description: "Checks if an application has global permissions for a tag on an activity.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>CheckGlobalPermissionsOnATagForApplication</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tags/xxxxxxxx.../activities/ManageProjectTags\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"HasPermission\": true\r\n}\n```\n</details>"
      operationId: ProjectAuth_CheckGlobalPermissionsOnATagForApplication
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of the application for which global permissions on a tag are
            checked.
          required: true
          schema:
            type: string
        - name: base64EncodedTag
          in: path
          description: >-
            Pass the base64-encoded tag name against the global permissions that
            are checked. If the tag is root, then pass base64-encoded value of
            "/".
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: Name of the activity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully checked permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckTagPermissionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckTagPermissionResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The tag is not found.</li><li>The tag name starts with /.</li><li>The activity is null or empty.</li><li>The activity is not a global level activity.</li><li>The tag name is not a valid base64-encoded value.</li><li>The applicationGuid is not valid.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the tag is not
            found.
        '404':
          description: 'Not Found: Unable to find the application.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/activities/{activityName}/tags:
    get:
      tags:
        - ProjectAuth
      summary: Fetch Tags Associated to a User
      description: "Retrieves list of all tags associated to a user for an activity.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>FetchUserAssociateTags</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/activities/ReadModel/tags\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Tags\": [\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/hbt/lcbs/customera/building1/floor9\",\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/hbt/lcbs/customera/building1/floor9/confroom1\",\r\n    \"HBT_OutcomeBasedServices-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/sps/cfreight/company1/truck1\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_FetchUserAssociateTags
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which tags are returned.
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: Name of the activity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched all tags.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiFetchTagsResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The userId is not valid.</li><li>The activity is null or empty.</li><li>The activity is not found.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: 'Forbidden: If the user does not have permission.'
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/tags/{base64EncodedTag}:
    post:
      tags:
        - ProjectAuth
      summary: Grant Tag Permissions to a User
      description: "Grants tag permissions for a user on given activities.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>GrantTagPermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxx.xxxxxxxxxxxx.com/sentience/xxxx/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tags/xxxxxxxxxxxxxxxxxxxx\n{\r\n  \"activities\": [\r\n    \"ReadModel\",\r\n    \"ModifyModel\"\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Message\": \"User granted tag permissions successfully\"\r\n}\n```\n</details>"
      operationId: ProjectAuth_GrantTagPermissionsToUser
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which tag permissions are granted.
          required: true
          schema:
            type: string
        - name: base64EncodedTag
          in: path
          description: >-
            Pass the base64-encoded tag name to which the permissions are
            granted.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectActivitiesRequest'
      responses:
        '200':
          description: 'OK: Successfully granted permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The tag is not found.</li><li>The tag name is not a valid base64-encoded value.</li><li>The userId is not valid.</li><li>The tag name starts with /.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the tag is not
            found.
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
    delete:
      tags:
        - ProjectAuth
      summary: Remove Tag Permission from a User
      description: "Removes tag permissions for a user on activities.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>RemoveTagPermissionFromUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tags/xxxxxxxx...\n{\r\n  \"Activities\": [\r\n    \"ReadModel\"\r\n  ]\r\n}\n```\n</details>"
      operationId: ProjectAuth_RemoveTagPermissionFromUser
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which permissions are removed.
          required: true
          schema:
            type: string
        - name: base64EncodedTag
          in: path
          description: >-
            Pass the base64-encoded tag name to which the permissions are
            removed.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiProjectActivitiesRequest'
      responses:
        '200':
          description: 'OK: Successfully removed permissions.'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The tag is not found.</li><li>The tag name is not a valid base64 encoded value.</li><li>The list of tags is empty or null.</li><li>The userId is not valid.</li><li>The tag name starts with /.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the tag is not
            found.
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/auth/users/{userId}/tags/{base64EncodedTag}/activities/{activityName}:
    get:
      tags:
        - ProjectAuth
      summary: Check Global Permissions on a Tag for a User
      description: "Checks if a user has global permissions for a tag on an activity.\r\n<p><b>Authorization:</b>GlobalActivity-ManageProjectPermissions</p>\r\n<p><b>Action:</b>CheckGlobalPermissionsOnATagForUser</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/tags/xxxxxxxxxxxx.../activities/ManageProjectTags\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"HasPermission\": true\r\n}\n```\n</details>"
      operationId: ProjectAuth_CheckGlobalPermissionsOnATagForUser
      parameters:
        - name: userId
          in: path
          description: GUID of the user for which permissions on a tag are checked.
          required: true
          schema:
            type: string
        - name: base64EncodedTag
          in: path
          description: >-
            Pass the base64-encoded tag name against the permissions that are
            checked. If the tag is root, then pass base64-encoded value of "/".
          required: true
          schema:
            type: string
        - name: activityName
          in: path
          description: Name of the activity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully checked permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckTagPermissionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiCheckTagPermissionResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>The tag is not found.</li><li>The activity is null or empty.</li><li>The activity is not found.</li><li>The tag name is not a valid base64-encoded value.</li><li>The userId is not valid.</li><li>The tag name starts with /.</li></ul>"
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: >-
            Forbidden: If the caller does not have permission or the tag is not
            found.
        '404':
          description: 'Not Found: Unable to find the user.'
        '500':
          description: 'Internal Server Error: Unexpected failure during the operation.'
      deprecated: false
  /api/systems/provisioning/discovery/keys:
    get:
      tags:
        - ProvisioningKeyDiscovery
      summary: Get Provisioning Web Key Response
      description: "Gets public keys used for platform issued tokens.\r\n            <br>This API retrieves the public key used for device identity tokens issued by the device authentication service. Developers building their own device facing services can use this public key to validate identity tokens provided by devices. The identity tokens are JWTs so standard libraries can be used to do the validation using this public key document.</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>Application</p>"
      operationId: ProvisioningKeyDiscovery_GetProvisioningWebKeyResponse
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiJsonKeySetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiJsonKeySetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiJsonKeySetResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiJsonKeySetResponse'
        '500':
          description: Internal Server Error
      deprecated: false
  /api/authentication/rpkchallenge:
    post:
      tags:
        - RpkChallenge
      summary: Request Challenge for System Authentication
      description: "Generates a challenge for system authentication via RPK.\r\n            <br>This API generates a cryptographically random number to challenge a caller. The caller is expected to sign the challenge with its own private key and submit the response to <a href=\"/api/public#operation/FixtureRpkChallenge_VerifyChallengeResponse\" target=\"_blank\">Verify Challenge Response API</a> to authenticate itself.</br><br><b>Authorization:</b> System JWT Token</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://gdatdevsystemauthentication.dsentience.net/api/authentication/rpkchallenge\n{\r\n  \"SystemId\": \"xxxxxxxxxxxx\",\r\n  \"SystemType\": \"xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ChallengeString\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"ChallengeResponseApiUrl\": \"api/authentication/rpkchallengeresponse\"\r\n}\n```\n</details>"
      operationId: RpkChallenge_RequestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/SystemDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/SystemDetails'
          text/xml:
            schema:
              $ref: '#/components/schemas/SystemDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemDetails'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
            text/json:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
            application/xml:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
            text/xml:
              schema:
                $ref: '#/components/schemas/RpkChallenge'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>SystemDetails is null.</li><li>SystemDetails.SystemType is null.</li><li>SystemDetails.SystemId is null.</li></ul>"
        '404':
          description: >-
            Not Found: If the system is not registered from the factory using <a
            href="/api/public#operation/FactoryRegistration_RegisterSystem"
            target="_blank">Register System API</a>.
        '500':
          description: Internal Server Error
      deprecated: false
  /api/authentication/rpkchallengeresponse:
    post:
      tags:
        - RpkChallenge
      summary: Validate Challenge Response for System Authentication
      description: "Validates a challenge response for system authentication via RPK.\r\n            <br>This API initiates a response request to a device. On successful validation, this API returns a time limited JWT that can be used to register a system from the fixture by invoking <a href=\"/api/public#operation/FactoryRegistration_RegisterSystem\" target=\"_blank\">Register System API</a>.</br><br><b>Authorization:</b> System JWT Token</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://gdatdevsystemauthentication.dsentience.net/api/authentication/rpkchallengeresponse\n{\r\n  \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"ClientRandom\": \"xxxxxxxxxxxx=\",\r\n  \"ClientRandomSignature\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx+xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"IdentityJwt\": \"xxxx.....  \"\r\n}\n```\n</details>"
      operationId: RpkChallenge_ChallengeResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RpkChallengeResponse'
          text/json:
            schema:
              $ref: '#/components/schemas/RpkChallengeResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/RpkChallengeResponse'
          text/xml:
            schema:
              $ref: '#/components/schemas/RpkChallengeResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RpkChallengeResponse'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
            text/json:
              schema:
                $ref: '#/components/schemas/Identity'
            application/xml:
              schema:
                $ref: '#/components/schemas/Identity'
            text/xml:
              schema:
                $ref: '#/components/schemas/Identity'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>systemChallengeResponse is null.</li><li>systemChallengeResponse.SystemType is null.</li><li>systemChallengeResponse.SystemId is null.</li><li>systemChallengeResponse.ClientRandom is null.</li><li>systemChallengeResponse.ClientRandomSignature is null.</li></ul>"
        '401':
          description: "Unauthorized: If one of the following occurred:\r\n            <ul><li>Challenge is expired.</li><li>Cannot validate challenge signature.</li><li>Error when validating challenge signature.</li></ul>"
        '404':
          description: "Not Found: When:\r\n            <ul><li>System was not registered at the factory.</li><li>Challenge was not generated for the system earlier.</li></ul>"
        '500':
          description: Internal Server Error
      deprecated: false
  /api/servicedetails/models/{modelId}/services/{serviceId}:
    get:
      tags:
        - ServiceDetails
      summary: Get Service Details for a Model
      description: "Retrieves service details for a model using model ID.\r\n<p><b>Authorization:</b>ModelActivity-ReadServiceUrls</p>\r\n<p><b>Action:</b>GetServiceDetailsByModelId</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxx.dsentience.net/api/servicedetails/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/services/ElementService\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Url\": \"https://sampleservice.test.com/\",\r\n  \"ActiveDirectoryResourceId\": \"http://sampleservice .test.com\"\r\n}\n```\n</details>"
      operationId: ServiceDetails_GetServiceDetailsByModelId
      parameters:
        - name: modelId
          in: path
          description: ID of the model for which the service details are fetched.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: "ID of the service for which the service details are retrieved. Acceptable values are:\r\n            <ul><li>ActorService</li><li>AlarmAcknowledgeService</li><li>AlarmConfigurationService</li><li>AlertSubscriptionService</li><li>AnnotationEventPublishService</li><li>BigDataPointHistoryService</li><li>ConnectionMonitorService</li><li>ElementService</li><li>EventStoreUpdateService</li><li>ModelService</li><li>ModelPropertiesService</li><li>PointsControlService</li><li>PointHistoryService</li><li>ProductUiContextService</li><li>SparqlService</li><li>SpatialElementService</li><li>SystemCommand</li></ul>"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
        '404':
          description: >-
            Not Found: When: <ul><li>Model specified is not
            found.</li><li>Service details for the specified Model and ServideId
            are not found.</li></ul>
      deprecated: false
  /api/servicedetails/tenants/{asuMasterName}/services/{serviceId}:
    get:
      tags:
        - ServiceDetails
      summary: Get Service Details for a Tenant (AsuMaster)
      description: "Retrieves service details for a specified tenant.\r\n<p><b>Authorization:</b>GlobalActivity-ReadServiceUrls</p>\r\n<p><b>Action:</b>GetServiceDetailsByAsuMaster</p>\r\n<p><b>Intended to be used by:</b>Internal</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxx.dsentience.net/api/servicedetails/tenants/**********/services/SystemCommand\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Url\": \"https://sampleservice.test.com/\",\r\n  \"ActiveDirectoryResourceId\": \"http://sampleservice .test.com\"\r\n}\n```\n</details>"
      operationId: ServiceDetails_GetServiceDetailsByAsuMaster
      parameters:
        - name: asuMasterName
          in: path
          description: Tenant name for which you get the service details.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: "ID of the service for which the service details are retrieved. Acceptable values are:\r\n            <ul><li>ActorService</li><li>AlarmAcknowledgeService</li><li>AlarmConfigurationService</li><li>AlertSubscriptionService</li><li>AnnotationEventPublishService</li><li>BigDataPointHistoryService</li><li>ConnectionMonitorService</li><li>ElementService</li><li>EventStoreUpdateService</li><li>ModelService</li><li>ModelPropertiesService</li><li>PointsControlService</li><li>PointHistoryService</li><li>ProductUiContextService</li><li>SparqlService</li><li>SpatialElementService</li><li>SystemCommand</li></ul>"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
        '404':
          description: >-
            Not Found: When service details for the specified Tenant and
            ServideId are not found.
      deprecated: false
  /api/servicedetails/tenants/{tenantName}/services:
    put:
      tags:
        - ServiceDetails
      summary: Update Service Details for Tenant
      description: "update service details for tenant\r\n<p><b>Authorization:</b>GlobalActivity-WriteServiceUrls</p>\r\n<p><b>Action:</b>UpdateServiceDetailsByAsuMaster</p>\r\n<p><b>Intended to be used by:</b>Internal</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxx.dsentience.net/api/servicedetails/tenants/xxxxxxxxxx/services\n\n```\n</details>"
      operationId: ServiceDetails_UpdateServiceDetailsByAsuMaster
      parameters:
        - name: tenantName
          in: path
          description: Name of the IoT tenant for which the service has to be updated.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RegisterServiceDetailsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: >-
            Unauthorized When:<ul><li>Authentication header is
            invalid.</li><li>JwtToken expired or is invalid.</li><li>Caller does
            not have the permissions to call the API.</li></ul>
        '500':
          description: 'Internal Server Error: When any internal operation fails.'
      deprecated: false
    post:
      tags:
        - ServiceDetails
      summary: Register Service Details for Tenant
      description: "Adds service details for a tenant.\r\n<p><b>Authorization:</b>GlobalActivity-WriteServiceUrls</p>\r\n<p><b>Action:</b>RegisterServiceDetailsByAsuMaster</p>\r\n<p><b>Intended to be used by:</b>Internal</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxx.dsentience.net/api/servicedetails/tenants/xxxxxxxxxx/services\n\n```\n</details>"
      operationId: ServiceDetails_RegisterServiceDetailsByAsuMaster
      parameters:
        - name: tenantName
          in: path
          description: Name of the tenant for which the service details must be added.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RegisterServiceDetailsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad Request: Invalid parameters.'
        '401':
          description: >-
            Unauthorized: When:<ul><li>Authentication header is
            invalid.</li><li>JwtToken expired or is invalid.</li><li>Caller does
            not have the permissions to call the API.</li></ul>
        '500':
          description: 'Internal Server Error: When any internal operation fails.'
      deprecated: false
  /api/servicedetails/{systemGuid}/services/{serviceId}:
    get:
      tags:
        - ServiceDetails
      summary: Get Service Details for a System
      description: "Retrieves service details for a specific system service.\r\n            <br><b>Note:</b> The caller must have a system level permission or higher at the System Type level which the System belongs to.</br>\r\n<p><b>Authorization:</b>SystemPermissionBySystemType-ReadServiceUrls</p>\r\n<p><b>Action:</b>GetServiceDetails</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxx.dsentience.net/api/servicedetails/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/services/PointHistoryService\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Url\": \"https://sampleservice.test.com/\",\r\n  \"ActiveDirectoryResourceId\": \"http://sampleservice .test.com\"\r\n}\n```\n</details>"
      operationId: ServiceDetails_GetServiceDetails
      parameters:
        - name: systemGuid
          in: path
          description: >-
            GUID of the system for which the application has to obtain the
            service details.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: "ID of the service for which the service details are retrieved. Acceptable values are:\r\n            <ul><li>ActorService</li><li>AlarmAcknowledgeService</li><li>AlarmConfigurationService</li><li>AlertSubscriptionService</li><li>AnnotationEventPublishService</li><li>BigDataPointHistoryService</li><li>ConnectionMonitorService</li><li>ElementService</li><li>EventStoreUpdateService</li><li>ModelService</li><li>ModelPropertiesService</li><li>PointsControlService</li><li>PointHistoryService</li><li>ProductUiContextService</li><li>SparqlService</li><li>SpatialElementService</li><li>SystemCommand</li></ul>"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
        '404':
          description: >-
            Not Found: When: <ul><li>System specified is not
            found.</li><li>Service details for the specified System and
            ServideId are not found.</li></ul>
      deprecated: false
  /api/systems/registration/unconnected:
    get:
      tags:
        - SystemConnection
      summary: 'OBSOLETE: Retrieve the systems that have not been marked as connected.'
      description: "<div>OBSOLETE: This API is marked for deletion.</div>\r\n<div>This api retrieves systems that have not been marked as connected. This is an R1 call and is no longer supported in R2.</div>\r\n<div>Returns 400: The systemId is invalid</div>\r\n<div>Returns 500: The given systemType is not found, the combination of systemType and systemId is not found, or an unspecified error occured</div>\r\n<p><b>Authorization:</b>GlobalActivity-RegisterSystem</p>\r\n<p><b>Action:</b>GetUnconnectedSystemDetails</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemConnection_GetUnconnectedSystemDetails
      parameters:
        - name: systemType
          in: query
          required: true
          schema:
            type: string
        - name: systemId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The connection string is retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiUnconnectedSystemDetailResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiUnconnectedSystemDetailResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiUnconnectedSystemDetailResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiUnconnectedSystemDetailResponse'
      deprecated: true
  /api/systems/registration/{systemGuid}/connection:
    get:
      tags:
        - SystemConnection
      summary: 'OBSOLETE: Retrieve the first connection detail for a given SystemGuid.'
      description: "<div>OBSOLETE: This API is marked for deletion.  Use the api/system/connections instead.</div>\r\n<div>This api retrieves a SINGLE connection string. Newer versions of the API retrieve multiple connections to handle multiple services. This api retrieves the first service in the list connection details, which is typically the messaging service details.</div>\r\n<div>Returns a 500: SystemGuid is not found, information is not available for that SystemGuid, or an unspecified error occured</div>\r\n<p><b>Authorization:</b>GlobalActivity-RegisterSystem</p>\r\n<p><b>Action:</b>GetConnectionDetails</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemConnection_GetConnectionDetails
      parameters:
        - name: systemGuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The connection string is retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
      deprecated: true
  /api/systems/provisioning/status:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: 'OBSOLETE: Gets the provisioning state of a system'
      description: "Given system type and ownershipcode, this api returns the provisioning state of the system\r\n<p><b>Authorization:</b>GlobalActivity-ReadSystemProvisioningStatus</p>\r\n<p><b>Action:</b>GetSystemProvisioningState</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemRegistrationAdmin_GetSystemProvisioningState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
        description: parameter for provisioning status
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        '400':
          description: 'Bad Request: Invalid parameters.'
        '404':
          description: 'Not Found: When ownershipcode is not found.'
        '500':
          description: 'Internal Server Error: when any internal operations fail.'
      deprecated: true
  /api/systems/provisioning/systemtypes/{systemType}/ownershipcodes/{base64EncodedOwnershipCode}/status:
    get:
      tags:
        - SystemRegistrationAdmin
      summary: Get Provisioning State of a System
      description: "Gets the provisioning state of a system by using the system type and ownershipcode.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-ReadSystemProvisioningStatus</p>\r\n<p><b>Action:</b>GetSystemProvisioningStateV2</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/ownershipcodes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/status\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"Disabled\"\n```\n</details>"
      operationId: SystemRegistrationAdmin_GetSystemProvisioningStateV2
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
        - name: base64EncodedOwnershipCode
          in: path
          description: Base64-encoded unique ID for a device.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        '400':
          description: 'Bad Request: Invalid parameters.'
        '404':
          description: 'Not Found: When ownership code is not found.'
        '500':
          description: 'Internal Server Error: When any internal operation fails.'
      deprecated: false
  /api/systems/provisioning/systemtypes/{systemType}/prepare:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Prepare System for Provisioning
      description: "Allows a system to be prepared to move to the provisioning-allowed state. \r\n            <br />Once the system is prepared, it sets the state of the system as \"provisioning-allowed\" so that it can connect and associate its identity with a system GUID. \r\n            <br />Actions performed by this API:\r\n            <ul><li>Generate a unique SystemGuid for the system.</li><li>Assign the system to a Tenant.</li><li>Create permissions (security groups in IAM) required to manage the system.</li></ul><b>Note:</b> The provision state is not changed as part of this call. By separating this call from the allow-provisioning state, it prevents a race-condition where a system could connect before an application discovers the system GUID and sets up the system specific alarms or works with the create security groups.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeOrFixtrueActivity-RegisterSystemType</p>\r\n<p><b>Action:</b>PrepareSystemForProvisioning2</p>\r\n<p><b>Intended to be used by:</b>FactoryFixtureAndApplicationAndUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/prepare\n{\r\n  \"OwnershipCode\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"TenantName\": \"xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"OwnershipCode\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Result\": {\r\n    \"IsSucess\": true,\r\n    \"ErrorMessage\": null\r\n  }\r\n}\n```\n</details>"
      operationId: SystemRegistrationAdmin_PrepareSystemForProvisioning2
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiSystemProvisioningPrepareRequest2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
        '400':
          description: 'Bad Request: Bad parameter.'
        '404':
          description: 'Not Found: The registration ID entered is not recognized.'
        '409':
          description: 'Conflict: The system you attempted to register is already in use.'
        '500':
          description: "Internal Server Errors:\r\n            <ul><li>Failed to add SystemGuid and ModelId map.</li><li>Failed to add system and AsuMaster map.</li><li>Failed to set provision status.</li><li>Unexpected error.</li></ul>"
      deprecated: false
  /api/systems/provisioning/systemtypes/{systemType}/models/{modelId}/prepare:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Prepare System for Provisioning and Set Default Model
      description: "Prepares the resources required for provisioning a system.\r\n             <br />Once the resources are prepared, it also sets the state of the system as \"provisioning-allowed\". \r\n             <br />Actions performed by this API:\r\n             <ul><li>Generate a unique SystemGuid for the system.</li><li>Assign a system to a Tenant.</li><li>Create permissions (security groups in IAM) required to manage the system.</li><li>Set given model as default model for the system.</li></ul><b>Note:</b> The provision state is not changed as part of this call. By separating this call from the allow-provisioning, a system cannot connect before an application discovers the system GUID and sets up system specific alarms or works with the create security groups.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeOrFixtrueActivity-RegisterSystemType</p>\r\n<p><b>Action:</b>PrepareSystemForProvisioningAndSetDefaultModel</p>\r\n<p><b>Intended to be used by:</b>FactoryFixtureAndApplicationAndUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://gdatdevregui.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/prepare\n{\r\n  \"OwnershipCode\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"TenantName\": \"xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"OwnershipCode\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Result\": {\r\n    \"IsSucess\": true,\r\n    \"ErrorMessage\": null\r\n  }\r\n}\n```\n</details>"
      operationId: SystemRegistrationAdmin_PrepareSystemForProvisioningAndSetDefaultModel
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: >-
            Unique ID of the model that will be set as the default model for the
            system.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiSystemProvisioningPrepareRequest2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
        '400':
          description: >-
            Bad Request: When:<ul><li>SystemType, ownershipCode or tenantName is
            null.</li><li>Model ID does not belong to the same tenant.</li></ul>
        '401':
          description: >-
            Unauthorized: User or application is not authorized to invoke this
            API.
        '404':
          description: >-
            Not Found: When:<ul><li>The registration ID entered is not
            recognized.</li><li> The model ID is not valid.</li></ul>
        '409':
          description: 'Conflict: The system you attempted to register is already in use.'
        '500':
          description: "Internal Server Errors:\r\n             <ul><li>Failed to add SystemGuid and ModelId map.</li><li>Failed to add system and AsuMaster map.</li><li>Failed to set provision status.</li><li>Failed to set default model.</li><li>Unexpected error.</li></ul>"
      deprecated: false
  /api/systems/provisioning/allow:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: 'OBSOLETE: Move a system into the Allow-Provisioning state.'
      description: "This method moves a system into the Allow-Provisioning state. This method should be preceded by 'api/systems/provisioning/prepare'.\r\n             Once in Allow-Provisioning state, a system can make it's connection to the SystemRegistrationApi 'api/system/connections' to retrieve it's connection strings. \r\n             On first call to the SystemRegistrationApi it will return 'Accepted' and do the actual provisioning. On the next call, once provisioning has been finished,\r\n             the connection strings will be returned.\r\n<p><b>Authorization:</b>GlobalActivity-RegisterSystem</p>\r\n<p><b>Action:</b>AllowProvisioning</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemRegistrationAdmin_AllowProvisioning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemProvisioningRequest'
        required: true
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request: Bad parameter.'
        '404':
          description: Not Found
        '409':
          description: "Conflict <br />\r\n             Invalid status"
        '500':
          description: "Internal Server Errors <br />\r\n             1. Failed set provision status. <br />\r\n             2. Unexpected error"
      deprecated: true
  /api/systems/provisioning/systemtypes/{systemType}/ownershipcodes/{base64EncodedOwnershipCode}/allow:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Allow System Provisioning
      description: "Moves a system to Allow-Provisioning state to enable provisioning on the system. This method allows a system to obtain connection details from the provisioning service.\r\n             <br /><br />Before calling this API, a system must be prepared using <a href=\"/api/public#operation/SystemRegistrationAdmin_PrepareSystemForProvisioning2\" target=\"_blank\">Prepare System For Provisioning 2</a> API for it to be provisioned. \r\n             Once a system is in this state, it can retrieve the connection string using <a href=\"/api/public#operation/SystemRegistrationApi_Register\" target=\"_blank\">Register a System</a> API.  \r\n             <br />When this API is called, and if the platform has initiated provisioning, it will return \"Accepted\". The allow-provisioning process takes 2-10 seconds, and hence, the user must call the API repeatedly to check the latest status until a success or failure response is returned. \r\n             <br><br /><b>Note:</b> The suggested interval between the consecutive call is 2 seconds.</br>\r\n<p><b>Authorization:</b>GlobalOrSystemTypeOrFixtrueActivity-RegisterSystem</p>\r\n<p><b>Action:</b>AllowProvisioningV2</p>\r\n<p><b>Intended to be used by:</b>FactoryFixtureAndApplicationAndUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/ownershipcodes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/allow\n\n```\n</details>"
      operationId: SystemRegistrationAdmin_AllowProvisioningV2
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a System outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
        - name: base64EncodedOwnershipCode
          in: path
          description: Base64-encoded unique ID for a device.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad Request: Bad parameter.'
        '404':
          description: Not Found
        '409':
          description: 'Conflict: Invalid status.'
        '500':
          description: "Internal Server Errors:\r\n             <ul><li>Failed to set provision status.</li><li>Unexpected error.</li></ul>"
      deprecated: false
  /api/systems/registration/{systemType}/ownershipcode/{ownershipCode}:
    patch:
      tags:
        - SystemRegistrationAdmin
      summary: "OBSOLETE: Rollback system association,\r\n            this will be deprecated by Feb 15, 2016"
      description: "this will be deprecated by Feb 15, 2016\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-RegisterSystem</p>\r\n<p><b>Action:</b>ResetSystemAssociation</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemRegistrationAdmin_ResetSystemAssociation
      parameters:
        - name: systemType
          in: path
          description: System type
          required: true
          schema:
            type: string
        - name: ownershipCode
          in: path
          description: Ownership code of the device
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResetResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResetResponse'
        '400':
          description: 'Bad Request: Bad parameter.'
        '404':
          description: "Not Found <br />\r\n            The registration ID entered is not recognized."
        '500':
          description: "Internal Server Errors <br />\r\n            1. Failed to rollback <br />\r\n            2. Unexpected error <br />"
      deprecated: true
  /api/systems/provisioning/replace:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: >-
        OBSOLETE: Replace the system association with a new ownership code,
        keeping the same system identity
      description: "PREVIEW - This method allows an already provisioned system to be replaced by another one, but keeping the same identity in the platform\r\n             This API is meant to be called after the provisioning workflow. The following things are done as part of this operation:\r\n             1. Re-use the SystemGuid for the replacement system\r\n             2. Assign the replacement system to the Tenant\r\n             3. Un-assign the current system from the tenant\r\n             3. Set the status of the current system as NotProvisioned\r\n              \r\n             The provision state for the current system is changed to NotProvisioned in order to allow the deregistration of that system in a future call \r\n             to the corresponding API.\r\n<p><b>Authorization:</b>GlobalActivity-RegisterSystem</p>\r\n<p><b>Action:</b>ReplaceSystem</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemRegistrationAdmin_ReplaceSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequest'
        description: "System type: system type of the systems involved in the replacement operation.\r\n             CurrentOwnershipCode: ownership code of the system that will by replaced by a new one.\r\n             ReplacementOwnershipCode: ownership code of the new system that will replace the existing one."
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
        '400':
          description: "Bad Request<br />\r\n             Invalid parameters.\r\n             The system to be replaced is not in a valid state for replacement."
        '404':
          description: "Not Found<br />\r\n             The unique id for the replacement system is not found.\r\n             The unique id of the system to be replaced is not found."
        '500':
          description: "Internal Server Error <br />\r\n             1. Failed to retrieve asu master map for both unique ids of the involved systems. <br />\r\n             2. Failed to remove asu master map for unqieu id of the current system. <br />\r\n             3. Failed to reset the provisioning state of the current system. <br />\r\n             4. Failed to update map for system guid and the unique id of the replacement system. <br />\r\n             5. Unexpected error."
      deprecated: true
  /api/systems/provisioning/systemtypes/{systemType}/replace:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Replace System
      description: "This method allows an already provisioned system to be replaced by another provisioned system.\r\n            <br />The existing system identity is transferred to the new system.\r\n            <br />Keep the following in mind during the replacement operation:\r\n            <ul><li>Re-use the SystemGuid for the replacement system.</li><li>Assign the replacement system to the Tenant.</li><li>Un-assign the current system from the Tenant.</li><li>Set the status of the current system as NotProvisioned.</li></ul>\r\n            The provision state for the current system is changed to NotProvisioned to allow the de-registration of that system.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-RegisterSystem</p>\r\n<p><b>Action:</b>ReplaceSystemV2</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/provisioning/replace\n{\r\n  \"CurrentOwnershipCode\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ReplacementOwnershipCode\": \"xxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"OwnershipCode\": \"xxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"SystemGuid\": \"xxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Result\": {\r\n    \"IsSucess\": true,\r\n    \"ErrorMessage\": null\r\n  }\r\n}\n```\n</details>"
      operationId: SystemRegistrationAdmin_ReplaceSystemV2
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequestV2'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequestV2'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequestV2'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequestV2'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemReplaceRequestV2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAssociationResponse'
        '400':
          description: >-
            Bad Request: When: <ul><li>Invalid parameters.</li><li>The system to
            be replaced is not in a valid state for replacement.</li></ul>
        '404':
          description: >-
            Not Found: When: <ul><li>The unique ID for the replacement system is
            not found.</li><li>The unique ID of the system to be replaced is not
            found.</li></ul>
        '500':
          description: "Internal Server Error:\r\n            <ul><li>Failed to retrieve asu master map for both unique IDs of the involved systems.</li><li>Failed to remove asu master map for unique ID of the current system.</li><li>Failed to reset the provisioning state of the current system.</li><li>Failed to update map of the system GUID and the unique ID of the replacement system.</li><li>Unexpected error.</li></ul>"
      deprecated: false
  /api/systemtosystemtypemaps:
    put:
      tags:
        - SystemRegistrationAdmin
      summary: Change System Type of the given Systems
      description: "This API changes the System Type of the given Systems from the old System Type to the new System Type.\r\n<p><b>Authorization:</b>GlobalActivity-ManageSystemType</p>\r\n<p><b>Action:</b>ChangeSystemToSystemTypeMap</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>"
      operationId: SystemRegistrationAdmin_ChangeSystemToSystemTypeMap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemToSystemTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemToSystemTypeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemToSystemTypeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemToSystemTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemToSystemTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemToSystemTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemToSystemTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemToSystemTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemToSystemTypeResponse'
        '400':
          description: "Bad Request: When:\r\n            <ul><li>One or more Systems are not valid GUIDs</li><li>OldSystemType is not a valid string</li><li>NewSystemType is not a valid string</li><li>NewSystemType does not exist</li><li>one or more given systems are not mapped to the old System Type</li></ul>"
        '401':
          description: "Unauthorized: When:\r\n            <ul><li>The user/application is not authorized to change the System Type of systems</li></ul>"
        '500':
          description: "Internal Server Error:\r\n            <ul><li>Unexpected error</li></ul>"
      deprecated: false
  /api/systems/provisioning/deprovision:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: 'OBSOLETE: Move a system into the Not-Provisioned state'
      description: "PREVIEW\r\n            Given system type and ownershipcode, this method moves the system into NotProvisioned state.\r\n<p><b>Authorization:</b>GlobalActivity-DeProvisionSystem</p>\r\n<p><b>Action:</b>DeProvisionSystem</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>"
      operationId: SystemRegistrationAdmin_DeProvisionSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemDeProvisionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSystemDeProvisionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemDeProvisionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSystemDeProvisionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSystemDeProvisionRequest'
        description: WebApiSystemDeProvisionRequest
        required: true
      responses:
        '204':
          description: NoContent
        '400':
          description: 'Bad Request: Invalid Provisining Status.'
        '401':
          description: Unauthorized
        '404':
          description: >-
            Not Found: When AsuMasterMap is not found and UniqueId is not found
            for that SystemType.
        '500':
          description: Internal Server Error
      deprecated: true
  /api/systems/provisioning/systemtypes/{systemType}/systemids/{systemId}/deprovision:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: >-
        OBSOLETE - Releases resources allocated to a system connection and
        prevents it from obtaining connection details
      description: "OBSOLETE\r\n            Given system type and ownershipcode, this method moves the system into NotProvisioned state.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeOrFixtrueActivity-DeProvisionSystem</p>\r\n<p><b>Action:</b>DeProvisionSystemV2</p>\r\n<p><b>Intended to be used by:</b>FactoryFixtureAndApplicationAndUser</p>\r\n<p><b>Is Standard for:</b>Obsolete</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>"
      operationId: SystemRegistrationAdmin_DeProvisionSystemV2
      parameters:
        - name: systemType
          in: path
          description: System type
          required: true
          schema:
            type: string
        - name: systemId
          in: path
          description: System ID of the system to be deprovisioned.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NoContent
        '400':
          description: 'Bad Request: Invalid Provisining Status.'
        '401':
          description: Unauthorized
        '404':
          description: >-
            Not Found: When AsuMasterMap is not found and UniqueId is not found
            for that SystemType.
        '500':
          description: Internal Server Error
      deprecated: true
  /api/systems/provisioning/systemtypes/{systemType}/v3/systemids/{base64EncodedSystemId}/deprovision:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: De-Provision System to Release its Resources
      description: "Moves a system to NotProvisioned state.\r\n            <br />Using System Type and System ID, a system can be moved to the NotProvisioned state. All the resources allocated to the system are disconnected.\r\n<p><b>Authorization:</b>GlobalOrSystemTypeActivity-DeProvisionSystem</p>\r\n<p><b>Action:</b>DeProvisionSystemV3</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/v3/systemids/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==/deprovision\n\n```\n</details>"
      operationId: SystemRegistrationAdmin_DeProvisionSystemV3
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named per application requirements to
            represent a meaningful authorization grouping within the application
            context.
          required: true
          schema:
            type: string
        - name: base64EncodedSystemId
          in: path
          description: >-
            Base64-encoded unique ID for a system. It is used when registering a
            system using <a
            href="/api/public#operation/FactoryRegistration_RegisterSystem"
            target="_blank">Register System</a> or <a
            href="/api/public#operation/FactoryRegistration_RegisterBatch"
            target="_blank">Register Batch</a> APIs.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: >-
            Bad Request: When: <ul><li>Invalid provisioning
            status.</li><li>systemId exceeds the maximum length (50
            characters).</li></ul>
        '401':
          description: Unauthorized
        '404':
          description: 'Not Found: Unique ID is not found for that systemType.'
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systems/provisioning/systemtypes/{systemType}/preparesubsystembatch:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Prepare Subsystem Batch for Provisioning
      description: "Prepares the resources for provisioning a batch of sub-systems.\r\n<p><b>Authorization:</b>SystemTypeActivityOrFixture-RegisterSystem</p>\r\n<p><b>Action:</b>PrepareSubsystemBatchForProvisioning</p>\r\n<p><b>Intended to be used by:</b>FactoryFixture</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/preparesubsystembatch\n[\r\n  {\r\n    \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n    \"TenantName\": \"xxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n    \"TenantName\": \"xxxxxxxxxxxx\"\r\n  }\r\n]\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Result\": [\r\n    {\r\n      \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n      \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n      \"Result\": {\r\n        \"IsSucess\": true,\r\n        \"ErrorMessage\": null\r\n      }\r\n    },\r\n    {\r\n      \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n      \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n      \"Result\": {\r\n        \"IsSucess\": true,\r\n        \"ErrorMessage\": null\r\n      }\r\n    }\r\n  ],\r\n  \"IsBatchSuccessful\": true\r\n}\n```\n</details>"
      operationId: SystemRegistrationAdmin_PrepareSubsystemBatchForProvisioning
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningRequest'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningRequest'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningRequest'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningRequest'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningBatchResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningBatchResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningBatchResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSubsystemProvisioningBatchResponse'
        '400':
          description: 'Bad Request: Batch is not valid or contains duplicate items.'
        '401':
          description: Unauthorized
      deprecated: false
  /api/systems/provisioning/systemTypes/{systemType}/systemids/{base64EncodedSystemId}/enable:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Enable System
      description: "Enables a system to communicate with cloud services. \r\n            <br />For a system that is currently disabled, this API changes the provisioning state of the system to <b>AllowProvisioning</b> to enable its communication with the cloud services.\r\n<p><b>Authorization:</b>SystemTypeActivity-EnableDisableSystem</p>\r\n<p><b>Action:</b>EnableSystem</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/systemids/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==/enable\n\n```\n</details>"
      operationId: SystemRegistrationAdmin_EnableSystem
      parameters:
        - name: systemType
          in: path
          description: >-
            TProvides identity to a System outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
        - name: base64EncodedSystemId
          in: path
          description: >-
            Base64-encoded unique ID for a system. It is used when registering a
            system using <a
            href="/api/public#operation/FactoryRegistration_RegisterSystem"
            target="_blank">Register System</a> or <a
            href="/api/public#operation/FactoryRegistration_RegisterBatch"
            target="_blank">Register Batch</a> APIs.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: Successfully enabled the system.'
        '400':
          description: >-
            Bad Request: When: <ul><li>System cannot be enabled as it is not in
            'Disabled' state.</li><li>The decoded system ID should not be
            empty.</li><li>The decoded system ID should be less than 50
            characters.</li></ul>
        '401':
          description: >-
            Unauthorized: The user or application is not a part of the activity:
            EnableDisableSystem.
        '404':
          description: >-
            NotFound: Unable to find the systemGuid for the given system type
            and system ID.
        '500':
          description: 'Internal Server Error: Unexpected error.'
      deprecated: false
  /api/systems/provisioning/systemtypes/{systemType}/systemids/{base64EncodedSystemId}/disable:
    post:
      tags:
        - SystemRegistrationAdmin
      summary: Disable System
      description: "Disables a system so that it cannot communicate with any cloud services.\r\n            <br />Implications of disabling a system include:\r\n            <ul><li>For currently provisioned systems, all  the current credentials are immediately invalidated and requests for new connection details from the provisioning endpoint fails.</li><li>For systems that have never been provisioned, attempts to prepare provisioning fails. </li></ul>\r\n            For a system to communicate with an endpoint, it must be moved to the provisioned state.\r\n<p><b>Authorization:</b>SystemTypeActivity-EnableDisableSystem</p>\r\n<p><b>Action:</b>DisableSystem</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systems/provisioning/systemtypes/xxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemids/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==/disable\n\n```\n</details>"
      operationId: SystemRegistrationAdmin_DisableSystem
      parameters:
        - name: systemType
          in: path
          description: >-
            Provides identity to a system outside the provisioning life cycle;
            used in conjunction with the System ID to uniquely identify a System
            in Honeywell Sentience. Can be named as per application requirements
            to represent a meaningful authorization grouping within the
            application context.
          required: true
          schema:
            type: string
        - name: base64EncodedSystemId
          in: path
          description: >-
            Base64-encoded unique ID for a system. It is used when registering a
            system using <a
            href="/api/public#operation/FactoryRegistration_RegisterSystem"
            target="_blank">Register System</a> or <a
            href="/api/public#operation/FactoryRegistration_RegisterBatch"
            target="_blank">Register Batch</a> APIs.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: Successfully disabled the system.'
        '400':
          description: >-
            Bad Request: When: <ul><li>System cannot be disabled as it is in
            'NotProvisioned' state.</li><li>The decoded system ID should not be
            empty.</li><li>The decoded system ID should be less than 50
            characters.</li></ul>
        '401':
          description: >-
            Unauthorized: The user or application is not part of the activity:
            EnableDisableSystem.
        '404':
          description: >-
            Not Found: Unable to find systemGuid for the given system type and
            system ID.
        '500':
          description: 'Internal Server Error: Unexpected error.'
      deprecated: false
  /api/system/connections:
    post:
      tags:
        - SystemRegistrationApi
      summary: Register a System
      description: "Retrieves connection details of the IoT platform. \r\n            <br />Before invoking this API, the respective system must authenticate itself using RPK-based authentication (<a href=\"/api/public#operation/SystemRegistrationApi_Register\" target=\"_blank\">RPK Challenge API</a>). After authentication, the system will receive a JWT Token, which can be used to invoke this API.\r\n            <br /><b>Note:</b> This is the last step in system onboarding process. To know more about system onboarding, please refer to <a href=\"https://confluence.honeywell.com/display/HCEDMW/Provisioning\" target=\"_blank\">Provisioning</a>.\r\n<p><b>Authorization:</b>AuthorizationWithoutActivity-Undefined</p>\r\n<p><b>Action:</b>Register</p>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>NotApplicable</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/system/connections\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Path\": \"xxxxxxxxxxxxxx.azure-devices.net\",\r\n    \"UserName\": \"xxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"Password\": \"SharedAccessSignature sr=xxxxxxxxxxxxxx.azure-devices.net%2fdevices%xxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxd&sig=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=xxxxxxxxxxx&skn=iothubowner\",\r\n    \"ServerType\": \"IoTHub\",\r\n    \"AuthMode\": null,\r\n    \"CredentialType\": null,\r\n    \"Credential\": null,\r\n    \"UseExistingConnection\": false,\r\n    \"CertificateType\": null,\r\n    \"Certificate\": null\r\n  },\r\n  {\r\n    \"Path\": \"xxxxxxxxxxxxxx.azure-devices.net\",\r\n    \"UserName\": \"xxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"Password\": \"SharedAccessSignature sr=xxxxxxxxxxxxxx.azure-devices.net%xxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxd&sig=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=xxxxxxxxxxxd&sexxxxxxxxxxxx\",\r\n    \"ServerType\": \"IoTHub2\",\r\n    \"AuthMode\": null,\r\n    \"CredentialType\": null,\r\n    \"Credential\": null,\r\n    \"UseExistingConnection\": false,\r\n    \"CertificateType\": null,\r\n    \"Certificate\": null\r\n  }\r\n]\n```\n</details>"
      operationId: SystemRegistrationApi_Register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
        '202':
          description: "Accepted: System provisioning in progress.\r\n            <br /><b>Note:</b> If <b>Accepted (200)</b> is returned, then the system repeats the invocation of this API until an <b>OK (200)</b> is returned."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiSystemConnectionDetailResponse'
        '401':
          description: >-
            Unauthorized: When: <ul><li>Authentication header is
            invalid.</li><li>JwtToken is expired or invalid.</li></ul>
        '403':
          description: >-
            Forbidden: The current state of the system does not support
            provisioning.
        '500':
          description: 'Internal Server Error: An unexpected error occurred.'
      deprecated: false
  /api/systemsregistry/systems/{systemGuid}:
    get:
      tags:
        - SystemRegistrySearch
      summary: Get System Registry Details by System GUID
      description: "Retrieves the registration details of a system by using its GUID. \r\n            <br />Only DevOps engineers can use this API.\r\n<p><b>Authorization:</b>GlobalActivity-SearchSystemRegistryBySystemGuid</p>\r\n<p><b>Action:</b>GetSystemRegistryDetailsBySystemGuid</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemsregistry/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Details\": \"{\\\"OwnershipCode\\\":\\\"0eb16d63-7272-4f4f-bc92-20921443dc41\\\",\\\"PublicKey\\\":\\\"xxxxxxxxxx.../xxxxxxx/xxxxxxxxxxxxxxx/xxxxxxxxxxxxxxx//xxxxx/+Kg==\\\",\\\"User\\\":null,\\\"SecondaryPublicKeys\\\":null}\",\r\n  \"MetaData\": \"null\"\r\n}\n```\n</details>"
      operationId: SystemRegistrySearch_GetSystemRegistryDetailsBySystemGuid
      parameters:
        - name: systemGuid
          in: path
          description: GUID of the system whose registration information is required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systemsregistry/systemtypes/{systemType}/ownershipCode/{ownershipCode}:
    get:
      tags:
        - SystemRegistrySearch
      summary: Get System Registry Details by Ownership Code
      description: "Retrieves the registration information of a specific system by using system type and its ownership code.\r\n             <br />The system details are fetched only if the system is provisioned.\r\n<p><b>Authorization:</b>SystemTypeActivity-SearchSystemRegistryBySystemTypeAndId</p>\r\n<p><b>Action:</b>GetSystemDetailsBySytemTypeAndOwnershipCode</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://gdatdevregui.dsentience.net/api/systemsregistry/systemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/ownershipCode/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"Details\": \"{\\\"OwnershipCode\\\":\\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\\"PublicKey\\\":\\\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxx...==\\\",\\\"User\\\":null,\\\"SecondaryPublicKeys\\\":null}\",\r\n  \"MetaData\": \"null\"\r\n}\n```\n</details>"
      operationId: SystemRegistrySearch_GetSystemDetailsBySytemTypeAndOwnershipCode
      parameters:
        - name: systemType
          in: path
          description: >-
            Type of system. This should be the same system type that was used to
            register the system.
          required: true
          schema:
            type: string
        - name: ownershipCode
          in: path
          description: >-
            Unique ID associated with a system. Used for fetching system
            registration details.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
        '400':
          description: 'Bad Request: Invalid parameters.'
        '404':
          description: 'Not Found: When system has not been registered.'
        '500':
          description: 'Internal Server Error: when any internal operation fails.'
      deprecated: false
  /api/systemsregistry/systemtypes/{systemType}/v2/systems/{systemId}:
    get:
      tags:
        - SystemRegistrySearch
      summary: Get System Registry Details by System Type and ID
      description: "Retrieves the registration details of a specific system by using the system type and system ID.\r\n<p><b>Authorization:</b>SystemTypeActivity-SearchSystemRegistryBySystemTypeAndId</p>\r\n<p><b>Action:</b>GetSystemRegistryDetailsBySystemTypeAndIdV2</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\r\n<p><b>Supports:</b>ForgeIdentityAndAccess</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemsregistry/systemtypes/xxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/v2/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"SystemId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"SystemGuid\": null,\r\n  \"Details\": \"{\\\"OwnershipCode\\\":\\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\",\\\"PublicKey\\\":\\\"xxxxxxxxxx.../Ig==\\\",\\\"User\\\":null,\\\"SecondaryPublicKeys\\\":[\\\"xxxxxxxxxx.../xxxxxxxxx/xxxxxxxxxx.../xxxxxxxxxx...==\\\"]}\",\r\n  \"MetaData\": \"null\"\r\n}\n```\n</details>"
      operationId: SystemRegistrySearch_GetSystemRegistryDetailsBySystemTypeAndIdV2
      parameters:
        - name: systemType
          in: path
          description: Type of a system whose details are required.
          required: true
          schema:
            type: string
        - name: systemId
          in: path
          description: base64-encoded ID of the system whose details are required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGetSystemResponse'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systemsregistry/systemtypes/{systemType}/graphql:
    get:
      tags:
        - SystemRegistrySearch
      summary: System Registry Query
      description: "Retrieves registration details of systems corresponding to the system type.\r\n            <br /><b>Note:</b><ul><li>To fetch the registration details, a valid system type must be given as an input along with a well-formatted query.</li><li>The optional parameters can be: Operation Name and Named Query.</li><li>By using this API, you cannot send mutations within the query.</li><li>If the data is present within the JSON response, then there will be an empty list of errors.</li><li>By default, the query returns a maximum of 50 records. This limitation can be overridden by passing ‘first’ argument in the query.</li></ul><details><summary style=\"outline:none\">Return Shape:</summary><pre><code>\r\n             {\r\n               \"data\":{\r\n                   \"systemRegistryDetails\": {\r\n                        \"systemType\": \"type1\",\r\n                        \"systems\": [\r\n                        {\r\n                          \"systemId\": \"system1\",\r\n                          \"systemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n                          \"details\": \"systemmetadata\",\r\n                          \"provisioningStatus\": \"Provisioned\"\r\n                        },\r\n                       {\r\n                         \"systemId\": \"system3\",\r\n                         \"systemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n                         \"details\": \"systemmetadata\",\r\n                         \"provisioningStatus\": \"Provisioned\"\r\n                       }]         \r\n                    }\r\n                },\r\n                \"errors\": [\r\n                 {\r\n                   \"locations\": [\r\n                   {\r\n                     \"line\": 1,\r\n                     \"column\": 5\r\n                   }],\r\n                   \"message\": \"errorMessage\"\r\n                 }]\r\n                }\r\n            </code></pre></details>\r\n<p><b>Authorization:</b>SystemTypeActivity-SearchSystemRegistry</p>\r\n<p><b>Action:</b>SystemRegistryQuery</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\n\"GET https://xxxxxxxxxxxx.dsentience.net/api/systemsregistry/systemtypes/xxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/graphql?query={ systemRegistryDetails (systemType: \"xxxxxxxxxxxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\" ) { systems { systemId systemGuid details provisioningStatus } }}\"\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"data\": {\r\n    \"systemRegistryDetails\": {\r\n      \"systemType\": \"type1\",\r\n      \"systems\": [\r\n        {\r\n          \"systemId\": \"system1\",\r\n          \"systemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n          \"details\": \"systemmetadata\",\r\n          \"provisioningStatus\": \"Provisioned\"\r\n        },\r\n        {\r\n          \"systemId\": \"system3\",\r\n          \"systemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n          \"details\": \"systemmetadata\",\r\n          \"provisioningStatus\": \"Provisioned\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"locations\": [\r\n        {\r\n          \"line\": 1,\r\n          \"column\": 5\r\n        }\r\n      ],\r\n      \"message\": \"errorMessage\"\r\n    }\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemRegistrySearch_SystemRegistryQuery
      parameters:
        - name: systemType
          in: path
          description: Type of a system whose details are required.
          required: true
          schema:
            type: string
        - name: operationName
          in: query
          description: Operation name inside the query to be executed.
          required: false
          schema:
            type: string
        - name: namedQuery
          in: query
          description: >-
            Name of the supported query. It is useful to name the queries to
            later help with logging and debugging.
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: "A GraphQL to be executed\r\n             <details><summary style=\"outline:none\">Query example:</summary><pre><code>\r\n             query namedQuery{\r\n                systemRegistryDetails(systemType: \"type1\" )\r\n                {\r\n                    systemType\r\n                    systems(provisioningStatus: \"Provisioned\" first: 2)\r\n                    {\r\n                        systemId\r\n                        systemGuid\r\n                        details\r\n                        provisioningStatus\r\n                    }\r\n                }\r\n            }</code></pre></details>"
          required: true
          schema:
            type: string
        - name: variables
          in: query
          description: >-
            A JSON-encoded object containing the variables for the query. It
            represents a key-value collection. Example: {"first": 2}
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGraphQlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGraphQlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGraphQlResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemRegistryGraphQlResponse'
        '400':
          description: 'Bad Request: Invalid query.'
        '401':
          description: 'Unauthorized: The user or application does not have the permission.'
        '500':
          description: 'Internal Server Error: Failure during internal operations.'
      deprecated: false
  /api/systemservices/{serviceId}:
    get:
      tags:
        - SystemServiceAdmin
      summary: Get System Service
      description: "Gets system service details by using service ID.\r\n<p><b>Authorization:</b>GlobalActivity-ManageSystemService</p>\r\n<p><b>Action:</b>GetSystemService</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ServiceId\": \"pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"SystemTypes\": []\r\n}\n```\n</details>"
      operationId: SystemServiceAdmin_GetSystemService
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the system service whose details are required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully gets system service details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceDetailsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceDetailsResponse'
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform request.
            Please check permissions.
        '403':
          description: 'Forbidden: Not allowed to get a system service.'
        '404':
          description: 'Not Found: System service with specified serviceId does not exist.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    put:
      tags:
        - SystemServiceAdmin
      summary: Add System Service
      description: "Adds a new system service with specific service ID.\r\n<p><b>Authorization:</b>GlobalActivity-ManageSystemService</p>\r\n<p><b>Action:</b>AddSystemService</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemServiceAdmin_AddSystemService
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the system service to be added.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Created: Added a new system service.'
        '401':
          description: >-
            Unauthorized: Authorization failure when attempting to add system
            service. Please check permissions.
        '403':
          description: 'Forbidden: Not allowed to add a system service.'
        '409':
          description: >-
            Conflict: A system service with the same serviceId already exists,
            and its corresponding permissions have already been created.
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    delete:
      tags:
        - SystemServiceAdmin
      summary: Remove System Service
      description: "Removes system service using its service ID.\r\n<p><b>Authorization:</b>GlobalActivity-ManageSystemService</p>\r\n<p><b>Action:</b>RemoveSystemService</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemServiceAdmin_RemoveSystemService
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the system service to be removed.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: Successfully removed system service.'
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to remove system
            service. Please check permissions.
        '403':
          description: Forbidden. Not allowed to remove system service.
        '404':
          description: 'Not Found: Candidate deletion was not found.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/systemservices/{serviceId}/enabledsystemtypes/{systemType}:
    get:
      tags:
        - SystemServiceAdmin
      summary: Check if System Service is Enabled
      description: "Checks if a system service, with a particular service ID, is enabled for a specific system type.\r\n<p><b>Authorization:</b>SystemServiceActivity-EnableSystemService</p>\r\n<p><b>Action:</b>IsSystemServiceEnabledForSystemType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/enabledsystemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemServiceAdmin_IsSystemServiceEnabledForSystemType
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the system service.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: Type of system.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: System service is enabled for the given system type.'
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform operation.
            Please check permissions.
        '403':
          description: >-
            Forbidden: Not able to query the enabling of system service for a
            system type.
        '404':
          description: 'Not Found: System type with given ID does not exist.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    put:
      tags:
        - SystemServiceAdmin
      summary: Enable System Service
      description: "Enables system service for a specific system type.\r\n<p><b>Authorization:</b>SystemServiceActivity-EnableSystemService</p>\r\n<p><b>Action:</b>EnableSystemServiceForSystemType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/enabledsystemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemServiceAdmin_EnableSystemServiceForSystemType
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the service.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: Type of the system.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Created: Successfully enabled system service.'
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform operation.
            Please check permissions.
        '403':
          description: >-
            Forbidden: Not able to enable the given system service for the given
            system type.
        '404':
          description: 'Not Found: System type with given ID does not exist.'
        '409':
          description: >-
            Conflict: System service is already enabled for the given system
            type.
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    delete:
      tags:
        - SystemServiceAdmin
      summary: Disable System Service
      description: "Disables system service for a specific system type.\r\n<p><b>Authorization:</b>SystemServiceActivity-EnableSystemService</p>\r\n<p><b>Action:</b>DisableSystemServiceForSystemType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/enabledsystemtypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemServiceAdmin_DisableSystemServiceForSystemType
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the service.
          required: true
          schema:
            type: string
        - name: systemType
          in: path
          description: Type of the system.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content:Successfully disabled system service.
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform operation.
            Please check permissions.
        '403':
          description: >-
            Forbidden: Not able to disable the given system service for the
            given system type.
        '404':
          description: 'Not Found: System Type with given ID does not exist.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/systemservices/{serviceId}/systems/{systemGuid}/enabled:
    get:
      tags:
        - SystemServiceAdmin
      summary: Get System Enabled Status
      description: "Returns the enabled status of a system for the given system service.\r\n<p><b>Authorization:</b>SystemServiceActivity-EnableSystemService</p>\r\n<p><b>Action:</b>GetSystemEnabledStatusInSystemService</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/enabled\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Enabled\": true\r\n}\n```\n</details>"
      operationId: SystemServiceAdmin_GetSystemEnabledStatusInSystemService
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the service.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: GUID of the system whose enabled status needs to be fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully gets system enabled status.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiGetSystemEnabledStatusResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiGetSystemEnabledStatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiGetSystemEnabledStatusResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiGetSystemEnabledStatusResponse'
        '400':
          description: >-
            Bad Request: Unable to find system tenant mapping or the data of
            request is invalid.
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform operation.
            Please check permissions.
        '403':
          description: 'Forbidden: Not able to perform the operation.'
        '404':
          description: 'Not Found: System does not exist.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    put:
      tags:
        - SystemServiceAdmin
      summary: Set System Enabled Status
      description: "Enables a system using system service.\r\n<p><b>Authorization:</b>SystemServiceActivity-EnableSystemService</p>\r\n<p><b>Action:</b>SetSystemEnabledStatusInSystemService</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/systemservices/pointhistory-importerservicexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/enabled\n{\r\n  \"Enabled\": true\r\n}\n```\n</details>"
      operationId: SystemServiceAdmin_SetSystemEnabledStatusInSystemService
      parameters:
        - name: serviceId
          in: path
          description: Unique ID of the system service.
          required: true
          schema:
            type: string
        - name: systemGuid
          in: path
          description: GUID of the system that needs to be enabled.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiSetSystemEnabledStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiSetSystemEnabledStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiSetSystemEnabledStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiSetSystemEnabledStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiSetSystemEnabledStatusRequest'
        required: true
      responses:
        '204':
          description: 'No Content: Successfully sets the enabled status of the system.'
        '400':
          description: >-
            Bad Request: Unable to find system tenant mapping or the data of
            request is invalid.
        '401':
          description: >-
            Unauthorized: Authorization failed when trying to perform operation.
            Please check permissions.
        '403':
          description: 'Forbidden: Not able to perform the operation.'
        '404':
          description: 'Not Found: System does not exist.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/auth/applications/{applicationGuid}/systemServices/{serviceId}:
    get:
      tags:
        - SystemServiceAuth
      summary: Get System Service Permissions for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>GetApplicationSystemServicePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemServices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"EnableSystemService\",\r\n    \"RegisterSystemService\"\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemServiceAuth_GetApplicationSystemServicePermissions
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of the application for which system service permissions are
            required.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: Unique ID of the system service.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
        '400':
          description: Invalid Parameters
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    post:
      tags:
        - SystemServiceAuth
      summary: Add System Service Permissions for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>AddSystemServicePermissionsToApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemServices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"EnableSystemService\",\r\n    \"RegisterSystemService\"\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"EnableSystemService\",\r\n    \"RegisterSystemService\"\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemServiceAuth_AddSystemServicePermissionsToApplication
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of an application to which system service permissions are
            added.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: Unique ID of system service.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiSystemServicePermissionsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - SystemServiceAuth
      summary: Remove System Service Permissions for an Application
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>RemoveSystemServicePermissionsFromApplication</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemServices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"EnableSystemService\",\r\n    \"RegisterSystemService\"\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemServiceAuth_RemoveSystemServicePermissionsFromApplication
      parameters:
        - name: applicationGuid
          in: path
          description: >-
            GUID of application for which system service permissions are
            removed.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: Unique ID of system service.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiSystemServicePermissionsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid Parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/users/{userId}/systemServices/{serviceId}:
    get:
      tags:
        - SystemServiceAuth
      summary: Get System Service Permissions for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>GetUserSystemServicePermissions</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemServices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Activities\": [\r\n    \"enablesystemservice\"\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemServiceAuth_GetUserSystemServicePermissions
      parameters:
        - name: userId
          in: path
          description: >-
            Unique ID of the user for which system service permissions are
            required.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: Unique ID of the system service.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceActivitiesResponse'
        '400':
          description: Invalid Parameters
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    post:
      tags:
        - SystemServiceAuth
      summary: Add System Service Permissions for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>AddSystemServicePermissionsToUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemServices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"string\"\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemServiceAuth_AddSystemServicePermissionsToUser
      parameters:
        - name: userId
          in: path
          description: >-
            Unique ID of the user for which system service permissions are
            added.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: Unique ID of the system service.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiSystemServicePermissionsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - SystemServiceAuth
      summary: Remove System Service Permissions for a User
      description: "\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>RemoveSystemServicePermissionsFromUser</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/auth/users/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/systemServices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n{\r\n  \"Activities\": [\r\n    \"EnableSystemService\"\r\n  ]\r\n}\n```\n</details>"
      operationId: SystemServiceAuth_RemoveSystemServicePermissionsFromUser
      parameters:
        - name: userId
          in: path
          description: >-
            Unique ID of the user for which system service permissions are
            removed.
          required: true
          schema:
            type: string
        - name: serviceId
          in: path
          description: Unique ID of the system service.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/WebApiSystemServicePermissionsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid Parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/auth/services/systemservices:
    get:
      tags:
        - SystemServiceAuth
      summary: Get Activities of System Services
      description: "Retrieves list of activities applicable to system services.\r\n<p><b>Authorization:</b>GlobalActivity-ConfigureSystemServicePermission</p>\r\n<p><b>Action:</b>GetSystemServicesServiceActivities</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/auth/services/systemservices\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Activity\": \"string\",\r\n    \"DisplayName\": \"string\"\r\n  }\r\n]\n```\n</details>"
      operationId: SystemServiceAuth_GetSystemServicesServiceActivities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiServiceActivitiesResponse'
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systemservices/{serviceId}/tenants/{tenantName}:
    get:
      tags:
        - SystemServiceRegistration
      summary: Get Details of System Service in Tenant
      description: "Gets system service details in a tenant by using service ID and tenant name.\r\n<p><b>Authorization:</b>SystemServiceActivity-RegisterSystemService</p>\r\n<p><b>Action:</b>GetSystemServiceDetailsInTenant</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemservices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/tenants/xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"ServiceId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"TenantName\": \"xxxxxxxxxxxx\",\r\n  \"URL\": \"https://testurl\",\r\n  \"Audience\": \"TestAudience\",\r\n  \"IsJWTRequired\": true,\r\n  \"Callback\": \"\"\r\n}\n```\n</details>"
      operationId: SystemServiceRegistration_GetSystemServiceDetailsInTenant
      parameters:
        - name: serviceId
          in: path
          description: Service ID of the system for which details are required.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: Name of the tenant.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully retrieved system service registration details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceRegistrationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceRegistrationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemServiceRegistrationResponse'
        '401':
          description: >-
            Unauthorized: Authorization failure when attempting to get
            registration details. Please check permissions.
        '403':
          description: 'Forbidden: Not allowed to get system service registration details.'
        '404':
          description: 'Not Found: System service with given serviceId does not exists.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    put:
      tags:
        - SystemServiceRegistration
      summary: Register a System Service in Tenant
      description: "Registers a system service in tenant with service Id, tenant name, URL, audience, need of JWT, and callback.\r\n<p><b>Authorization:</b>SystemServiceActivity-RegisterSystemService</p>\r\n<p><b>Action:</b>RegisterSystemServiceInTenant</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxxx.dsentience.net/api/systemservices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/tenants/xxxxxxxxxxxx\n{\r\n  \"Url\": \"https://testurl\",\r\n  \"Audience\": \"TestAudience\",\r\n  \"IsJwtRequired\": true,\r\n  \"Callback\": \"\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"Completed system service registration- ServiceId:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, TenantName:xxxxxxxxxxxx, URL:https://testurl, IsJWTRequired:True, Audience: TestAudience\"\n```\n</details>"
      operationId: SystemServiceRegistration_RegisterSystemServiceInTenant
      parameters:
        - name: serviceId
          in: path
          description: ID of the system service.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: Name of the tenant.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiRegisterSystemServiceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiRegisterSystemServiceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiRegisterSystemServiceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiRegisterSystemServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiRegisterSystemServiceRequest'
        description: >-
          Request to register a System Service with the Provisioning Service.
          Simple System Services with a fixed URL for all the devices should set
          this via the URL parameter of the request. System Services that have
          different connection details for each system can set the Callback
          parameter to REST endpoint, which will implement the callback
          interface that can provide connection details dynamically for each
          provisioned system. Only one of URL and Callback can be set for the
          request.
        required: true
      responses:
        '201':
          description: 'Created: Registered system service in tenant.'
        '400':
          description: 'Bad Request: Invalid request. Unable to parse request.'
        '401':
          description: >-
            Unauthorized: Authorization failure when attempting to register.
            Please check permissions.
        '403':
          description: 'Forbidden: Not allowed to register system service in tenant.'
        '404':
          description: 'Not Found: System service to register is not found.'
        '409':
          description: 'Conflict: A System service with the same serviceId already exists.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
    delete:
      tags:
        - SystemServiceRegistration
      summary: De-register System Service from Tenant
      description: "De-registers or removes a system service from the tenant by using a specified service ID and tenant name.\r\n<p><b>Authorization:</b>SystemServiceActivity-RegisterSystemService</p>\r\n<p><b>Action:</b>DeregisterSystemServiceInTenant</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/systemservices/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/tenants/xxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemServiceRegistration_DeregisterSystemServiceInTenant
      parameters:
        - name: serviceId
          in: path
          description: Service ID of the system to be removed from the tenant.
          required: true
          schema:
            type: string
        - name: tenantName
          in: path
          description: Name of the tenant.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: De-registered system service in tenant.'
        '401':
          description: >-
            Unauthorized: Authorization failure when attempting to register.
            Please check permissions.
        '403':
          description: 'Forbidden: Not allowed to de-register system service in tenant.'
        '404':
          description: 'Not Found: System service with given serviceId does not exists.'
        '500':
          description: 'Internal Server Error: Unexpected failure during internal operation.'
      deprecated: false
  /api/systemmodelmaps/systems/{systemGuid}:
    get:
      tags:
        - SystemToModelMapping
      summary: Get System to Model Map
      description: "Gets the system to model map for a specific system.\r\n<p><b>Authorization:</b>SystemPermissionBySystemType-ManageSystemToModelLinkage</p>\r\n<p><b>Action:</b>GetSystemToModelMap</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/systemmodelmaps/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"SystemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"ModelId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"CreatorType\": 0\r\n}\n```\n</details>"
      operationId: SystemToModelMapping_GetSystemToModelMap
      parameters:
        - name: systemGuid
          in: path
          description: GUID of the system whose model mapping is required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully fetched system to model map for the given system.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAndModelMappingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiSystemAndModelMappingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAndModelMappingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiSystemAndModelMappingResponse'
        '401':
          description: Unauthorized
        '404':
          description: 'Not Found: System to model map does not exist for the given system.'
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - SystemToModelMapping
      summary: Reset System to Model Mapping
      description: "An internally created model existing in the map is deleted. A new internal model is created and linked to the system in the map.\r\n<p><b>Authorization:</b>SystemPermissionBySystemType-ManageSystemToModelLinkage</p>\r\n<p><b>Action:</b>ResetSystemToModelMap</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/systemmodelmaps/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n```\n</details>"
      operationId: SystemToModelMapping_ResetSystemToModelMap
      parameters:
        - name: systemGuid
          in: path
          description: GUID of the system for which the model mapping reset is required.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: >-
            No Content: The system reset to model map for the given system is
            successful.
        '400':
          description: 'Bad Request: System to model map does not exist.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systemmodelmaps/systems/{systemGuid}/models/{modelId}:
    put:
      tags:
        - SystemToModelMapping
      summary: Link System to the Model
      description: "Establishes a link between system and model. \r\n            <br>Internally created model is deleted and replaced by the given model in the system to model map. If the given modelId is same as the modelId in the mapping, then no changes are made to the map. A new entry is added to the system to model map, if no map is found.</br>\r\n<p><b>Authorization:</b>SystemPermissionBySystemTypeAndModelPermissionByModelType-Undefined</p>\r\n<p><b>Action:</b>LinkSystemToModel</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/systemmodelmaps/systems/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/models/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n\"Successfully linked the system xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx to the model xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n```\n</details>"
      operationId: SystemToModelMapping_LinkSystemToModel
      parameters:
        - name: systemGuid
          in: path
          description: GUID of the system to which the model mapping must be linked.
          required: true
          schema:
            type: string
        - name: modelId
          in: path
          description: >-
            Model ID to which the system must be mapped. In case the model ID is
            same as the internal model ID, then the existing mapping is not
            changed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK: Successfully linked the system to model.'
        '400':
          description: 'Bad Request: Given model does not exist.'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      deprecated: false
  /api/systemTypes:
    post:
      tags:
        - SystemTypes
      summary: Add System Type
      description: "Adds a new system type to Honeywell Sentience platform. Only the DevOps engineers can use this API.\r\n<p><b>Authorization:</b>GlobalActivity-ManageSystemType</p>\r\n<p><b>Action:</b>AddSystemType</p>\r\n<p><b>Intended to be used by:</b>DevOps</p>\r\n<p><b>Is Standard for:</b>None</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/systemTypes\n{\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"OwnershipCodeGenerationType\": \"None\"\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"SystemType\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n}\n```\n</details>"
      operationId: SystemTypes_AddSystemType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiAddSystemTypeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiAddSystemTypeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiAddSystemTypeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiAddSystemTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiAddSystemTypeRequest'
        description: Contains the parameters required to add a new system type.
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Invalid Parameters
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/testGroups:
    get:
      tags:
        - TestGroupsAdmin
      summary: Get Test Groups by Device Type
      description: "Gets a list of test groups for a specific device type. \r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetTestGroupsByDeviceType</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"Name\": \"string\",\r\n    \"Description\": \"string\",\r\n    \"DeviceType\": \"string\",\r\n    \"Systems\": [\r\n      \"string\"\r\n    ],\r\n    \"Versions\": [\r\n      {\r\n        \"AssetType\": \"string\",\r\n        \"Version\": \"string\"\r\n      }\r\n    ],\r\n    \"CreatedById\": \"string\",\r\n    \"CreatedBy\": \"string\",\r\n    \"CreatedOn\": \"2019-03-11T04:20:27.563Z\",\r\n    \"ModifiedById\": \"string\",\r\n    \"ModifiedBy\": \"string\",\r\n    \"ModifiedOn\": \"2019-03-11T04:20:27.563Z\"\r\n  }\r\n]\n```\n</details>"
      operationId: TestGroupsAdmin_GetTestGroupsByDeviceType
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTestGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTestGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTestGroup'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTestGroup'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    post:
      tags:
        - TestGroupsAdmin
      summary: Add a Test Group
      description: "Adds a test group according to device type, test group, and test group description. \r\n            <br>Only an authorized user having  access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>AddTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups\n{\r\n  \"Name\": \"string\",\r\n  \"Description\": \"string\"\r\n}\n```\n</details>"
      operationId: TestGroupsAdmin_AddTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiTestGroupAddRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiTestGroupAddRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiTestGroupAddRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiTestGroupAddRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiTestGroupAddRequest'
        description: Contains the details of the test group to be created.
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/testGroups/{testGroupName}:
    get:
      tags:
        - TestGroupsAdmin
      summary: Get a Specific Test Group
      description: "Gets a list of test groups according to device type and test group name. \r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetSpecificTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n{\r\n  \"Name\": \"string\",\r\n  \"Description\": \"string\",\r\n  \"DeviceType\": \"string\",\r\n  \"Systems\": [\r\n    \"string\"\r\n  ],\r\n  \"Versions\": [\r\n    {\r\n      \"AssetType\": \"string\",\r\n      \"Version\": \"string\"\r\n    }\r\n  ],\r\n  \"CreatedById\": \"string\",\r\n  \"CreatedBy\": \"string\",\r\n  \"CreatedOn\": \"2019-03-11T04:00:09.189Z\",\r\n  \"ModifiedById\": \"string\",\r\n  \"ModifiedBy\": \"string\",\r\n  \"ModifiedOn\": \"2019-03-11T04:00:09.189Z\"\r\n}\n```\n</details>"
      operationId: TestGroupsAdmin_GetSpecificTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiTestGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/WebApiTestGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebApiTestGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebApiTestGroup'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - TestGroupsAdmin
      summary: Delete a Test Group
      description: "Deletes an existing test group. \r\n            <br>The API must specify the device type and test group name. Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>DeleteTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx\n\n```\n</details>"
      operationId: TestGroupsAdmin_DeleteTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/testGroups/{testGroupName}/systems/{systemId}:
    get:
      tags:
        - TestGroupsAdmin
      summary: Check if System Exists in a Test Group
      description: "Gets a system in a test group by specifying device type, test group name, and system ID.\r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>CheckSystemExistsInTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: TestGroupsAdmin_CheckSystemExistsInTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group.
          required: true
          schema:
            type: string
        - name: systemId
          in: path
          description: Base64-encoded ID of the system to be checked.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Serve rError
      deprecated: false
    put:
      tags:
        - TestGroupsAdmin
      summary: Add a System to a Test Group
      description: "Use this API to add a system to an existing test group according to specific device type, test group name, and system ID. Only an authorized user who is a part of the 'Test Group Admin' user group can manage test groups and use this API.\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>AddSystemToTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: TestGroupsAdmin_AddSystemToTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group.
          required: true
          schema:
            type: string
        - name: systemId
          in: path
          description: >-
            Base64-encoded system ID. This is the unique ID of the system to be
            added.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - TestGroupsAdmin
      summary: Delete a System from a Test Group
      description: "This API deletes an existing system from a test group by specifying device type, test group name, and system ID.\r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>DeleteSystemInTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx/systems/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n```\n</details>"
      operationId: TestGroupsAdmin_DeleteSystemInTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group.
          required: true
          schema:
            type: string
        - name: systemId
          in: path
          description: Base64-encoded ID of the system to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/testGroups/{testGroupName}/systems:
    get:
      tags:
        - TestGroupsAdmin
      summary: Get Systems in a Test Group
      description: "Gets a list of systems in a test group by specifying device type and test group name.\r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>GetSystemsInTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nGET https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx/systems\n\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  \"obs-system-8241\"\r\n]\n```\n</details>"
      operationId: TestGroupsAdmin_GetSystemsInTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            application/xml:
              schema:
                type: array
                items:
                  type: string
            text/xml:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/deviceTypes/{deviceType}/testGroups/{testGroupName}/targetVersions:
    put:
      tags:
        - TestGroupsAdmin
      summary: Set Versions in a Test Group
      description: "Sets a list of asset types and versions for  an existing test group according to a specific device type and test group name.\r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>SetVersionsInTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPUT https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx/targetVersions\n[\r\n  {\r\n    \"AssetType\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n    \"Version\": \"1.1.2\"\r\n  }\r\n]\n```\n</details>"
      operationId: TestGroupsAdmin_SetVersionsInTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiTestGroupAssetVersion'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiTestGroupAssetVersion'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiTestGroupAssetVersion'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiTestGroupAssetVersion'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebApiTestGroupAssetVersion'
        description: >-
          Contains the details about asset type and version pairs associated
          with a test group.
        required: true
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
    delete:
      tags:
        - TestGroupsAdmin
      summary: Delete Versions from a Test Group
      description: "Deletes all the versions associated with a test group by specifying device type and test group name.\r\n            <br>Only an authorized user having access to manage test groups can use this API.</br>\r\n<p><b>Authorization:</b>DeviceTypeActivity-FirmwareAdmin</p>\r\n<p><b>Action:</b>DeleteVersionsFromTestGroup</p>\r\n<p><b>Intended to be used by:</b>ApplicationOrUser</p>\r\n<p><b>Is Standard for:</b>ApplicationAndUser</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nDELETE https://xxxxxxxxxxxx.dsentience.net/api/updates/deviceTypes/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/testGroups/xxxx/targetVersions\n\n```\n</details>"
      operationId: TestGroupsAdmin_DeleteVersionsFromTestGroup
      parameters:
        - name: deviceType
          in: path
          description: Name of the device type.
          required: true
          schema:
            type: string
        - name: testGroupName
          in: path
          description: Name of the test group whose associated versions are to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content: The API request is successful.'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  /api/updates/query:
    post:
      tags:
        - UpdatesQuery
      summary: Get Firmware Update
      description: "Returns the available asset updates for a system based on its current state.\r\n            <br><b>Authorization:</b> System JWT Token</br>\r\n<p><b>Intended to be used by:</b>System</p>\r\n<p><b>Is Standard for:</b>NotApplicable</p>\n <details><summary style='outline:none'>Sample Request</summary>\n\n```JSON\nPOST https://xxxxxxxxxxxx.dsentience.net/api/updates/query\n{\r\n  \"DeviceType\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"CurrentAssets\": [\r\n    {\r\n      \"AssetName\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx\",\r\n      \"CurrentVersion\": \"1.0.0\",\r\n      \"VerificationCode\": \"verificationCode1\"\r\n    }\r\n  ]\r\n}\n```\n</details><p style = 'margin: 3px;'></p>\n <details><summary style='outline:none'>Sample Response</summary>\n\n```JSON\n\n[\r\n  {\r\n    \"AssetName\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx\",\r\n    \"NewVersion\": \"1.1.0\",\r\n    \"DownloadUrl\": \"https://xxxxxxxxxx.blob.core.windows.net/firmwareupdate/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/1.1.0-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx.bin?sv=2016-05-31&sr=b&sig=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=2019-03-09xxxxxxxxxxxxxxxxxx\",\r\n    \"Priority\": \"Normal\"\r\n  },\r\n  {\r\n    \"AssetName\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx\",\r\n    \"NewVersion\": \"1.2.0\",\r\n    \"DownloadUrl\": \"https://xxxxxxxxxx.blob.core.windows.net/firmwareupdate/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/1.2.0-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx.bin?sv=2016-05-31&sr=b&sig=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=2019-03-09xxxxxxxxxxxxxxxxxx\",\r\n    \"Priority\": \"Normal\"\r\n  }\r\n]\n```\n</details>"
      operationId: UpdatesQuery_GetFirmwareUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiUpdateQueryRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebApiUpdateQueryRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebApiUpdateQueryRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WebApiUpdateQueryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApiUpdateQueryRequest'
        description: >-
          Logical grouping of similar devices that are connected to a system
          that receives the same firmware.
        required: true
      responses:
        '200':
          description: 'OK: Returns all the available asset updates.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiAssetUpdateResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiAssetUpdateResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiAssetUpdateResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiAssetUpdateResponse'
        '400':
          description: 'Bad Request: When requested assets version is invalid.'
        '401':
          description: >-
            Unauthorized: When authentication system details are missing or are
            invalid.
        '500':
          description: 'Internal Server Error: When an error occurred while getting updates.'
      deprecated: false
servers:
  - url: http://localhost
components:
  requestBodies:
    RegisterServiceDetailsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterServiceDetailsRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/RegisterServiceDetailsRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/RegisterServiceDetailsRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/RegisterServiceDetailsRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RegisterServiceDetailsRequest'
      required: true
    WebApiPermissionsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
      description: List of global activities.
      required: true
    WebApiProjectGlobalActivitiesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
      description: >-
        Contains the list of global activities. It requests object for project
        level permissions.
      required: true
    WebApiProjectActivitiesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiProjectActivitiesRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiProjectActivitiesRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiProjectActivitiesRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiProjectActivitiesRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiProjectActivitiesRequest'
      description: >-
        Contains the list of activities. It requests object for project activity
        permissions.
      required: true
    WebApiDeviceTypePermissionsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiDeviceTypePermissionsRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiDeviceTypePermissionsRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiDeviceTypePermissionsRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiDeviceTypePermissionsRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiDeviceTypePermissionsRequest'
      required: true
    WebApiSystemProvisioningPrepareRequest2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiSystemProvisioningPrepareRequest2'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiSystemProvisioningPrepareRequest2'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiSystemProvisioningPrepareRequest2'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiSystemProvisioningPrepareRequest2'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiSystemProvisioningPrepareRequest2'
      required: true
    ForgeAccessResourceRegistryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForgeAccessResourceRegistryRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/ForgeAccessResourceRegistryRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/ForgeAccessResourceRegistryRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/ForgeAccessResourceRegistryRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ForgeAccessResourceRegistryRequest'
      description: Contains the resourceId to be added to the resource registry.
      required: true
    WebApiPermissionsRequest2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiPermissionsRequest'
      description: List of system activities.
      required: true
    WebApiProjectGlobalActivitiesRequest2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiProjectGlobalActivitiesRequest'
      description: >-
        Contains the list of global activities. It requests object for project
        level global permissions.
      required: true
    WebApiSystemServicePermissionsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebApiSystemServicePermissionsRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/WebApiSystemServicePermissionsRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/WebApiSystemServicePermissionsRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/WebApiSystemServicePermissionsRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebApiSystemServicePermissionsRequest'
      required: true
  schemas:
    WebApiRetrieveSystemTypesResponse:
      type: object
      properties:
        SystemTypes:
          description: List of system types.
          type: array
          items:
            type: string
    WebApiPermissionsRequest:
      type: object
      properties:
        Activities:
          description: List of activities (permissions).
          type: array
          items:
            type: string
    SystemModelLevelActivityResponse:
      type: object
      properties:
        Activities:
          description: List of activities (permissions).
          type: array
          items:
            type: string
    WebApiServiceActivitiesResponse:
      type: object
      properties:
        Activity:
          description: Name of the custom manage permission.
          type: string
        DisplayName:
          description: Descriptive name of the activity.
          type: string
    GlobalActivityResponse:
      type: object
      properties:
        Activities:
          description: List of activities (global permissions).
          type: array
          items:
            type: string
    WebApiNewUserRequest:
      required:
        - FirstName
        - LastName
        - Email
        - Phone
      type: object
      properties:
        FirstName:
          description: First name of the new user.
          type: string
        LastName:
          description: Last name of the new user.
          type: string
        Email:
          description: Email address of the new user.
          type: string
        Phone:
          description: Phone number of the new user.
          type: string
    WebApiNewUserResponse:
      type: object
      properties:
        UserObjectId:
          description: Unique ID of the user. This will be a GUID.
          type: string
        UserPrincipleName:
          description: "<ul>\r\n  <li>If user is created in ForgeRock, then this is the email address of the user.</li>\r\n  <li>If user is created in AAD, then this is the concatenation of user email address and domain name of the database.</li>\r\n</ul>"
          type: string
        Password:
          description: Password of the user.
          type: string
    WebApiNewUserWithLoginNameRequest:
      required:
        - FirstName
        - LastName
        - Email
        - Phone
        - LoginName
      type: object
      properties:
        FirstName:
          description: First name of the user.
          type: string
        LastName:
          description: Last name of the user.
          type: string
        Email:
          description: Email address of the user.
          type: string
        Phone:
          description: Phone of the user.
          type: string
        LoginName:
          description: Login ID of the user. It should be an email address.
          type: string
    WebApiModelTypePermissionsRequest:
      required:
        - Activities
      type: object
      properties:
        Activities:
          type: array
          items:
            type: string
    WebApiModelTypeActivitiesResponse:
      type: object
      properties:
        Activities:
          description: List of activities (model type permission).
          type: array
          items:
            type: string
    Identity:
      type: object
      properties:
        IdentityJwt:
          description: >-
            A JWT token that uniquely identifies the device. It can be used by
            the fixture as an authorization header for further calls to register
            systems.
          type: string
    WebApiCertificate:
      description: Contains the basic information about a certificate.
      type: object
      properties:
        Thumbprint:
          description: Certificate thumbprint.
          type: string
        DistinguishedName:
          description: Content of certificate Subject field.
          type: string
        ExpirationInUtc:
          format: date-time
          description: Certificate expiration date. Content of certificate NotAfter field.
          type: string
    AuthWebApiResponse:
      type: object
      properties:
        Succeeded:
          description: Indicates if the API call has been successful.
          type: boolean
        ErrorMessage:
          description: >-
            Error message in case of failure. In case of success, this could be
            null or an empty string.
          type: string
    CustomPermissionsResponse:
      type: object
      properties:
        CustomPermissions:
          description: Contains the details of custom permissions.
          type: array
          items:
            $ref: '#/components/schemas/CustomPermission'
    CustomPermission:
      type: object
      properties:
        Instance:
          description: The instance against which the permission is assigned.
          type: string
        Activity:
          description: The activity (permission) assigned.
          type: string
    WebApiDeviceType:
      type: object
      properties:
        Name:
          description: Name of the device type.
          type: string
        Description:
          description: Description of device type.
          type: string
        IsSystemType:
          description: Specifies if the Device Type is also a System Type.
          type: boolean
        CreatedById:
          description: Object ID of the user/application who created the device type.
          type: string
        CreatedBy:
          description: Name of the logged in user/application who created the device type.
          type: string
        CreatedOn:
          format: date-time
          description: Creation date in UTC format.
          type: string
        ModifiedById:
          description: Object ID of the user/application who modified the device type.
          type: string
        ModifiedBy:
          description: Name of the logged in user/application who modified the device type.
          type: string
        ModifiedOn:
          format: date-time
          description: Modified date in UTC format.
          type: string
    WebApiDeviceTypeAddRequest:
      required:
        - Name
        - Description
      type: object
      properties:
        Name:
          description: >-
            Name of the device type. It can contain only alphabets, numbers,
            colons, and hyphens. Maximum allowed length is 49 characters.
          pattern: ^[a-zA-Z0-9:-]{1,49}$
          type: string
        Description:
          description: >-
            Description of device type. Maximum allowed length is 1000
            characters.
          type: string
        IsSystemType:
          description: Specifies if the DeviceType is also a SystemType.
          type: boolean
    WebApiDeviceTypePermissionsRequest:
      required:
        - Activities
      type: object
      properties:
        Activities:
          description: List of activities (device type permissions).
          type: array
          items:
            type: string
    WebApiDeviceTypeActivitiesResponse:
      type: object
      properties:
        Activities:
          description: List of activities (device type permissions) assigned.
          type: array
          items:
            type: string
    WebApiDeviceTypeConfiguration:
      type: object
      properties:
        Key:
          description: Key of the property.
          type: string
        Value:
          description: Value of the property.
          type: string
    WebApiFactorySystemDetails:
      required:
        - SystemOwnershipCode
        - SystemId
      type: object
      properties:
        SystemOwnershipCode:
          description: Unique 8 digit code.
          type: string
        User:
          description: Individual person who is processing the registration.
          type: string
        SystemId:
          description: >-
            Unique identifier of a system; used in conjunction with the System
            Type to uniquely identify a system in Honeywell Sentience.
          type: string
        SystemPublicKey:
          description: Public key of the encryption pair associated with the System.
          type: string
        CertificateDetails:
          allOf:
            - $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
            - description: Specific data describing an associated certificate.
        SystemMetaData:
          description: Additional information that can be added for a system, as necessary.
          type: object
          additionalProperties:
            type: string
    WebApiFactoryCertificateDetails:
      required:
        - Thumbprint
        - DistinguishedName
        - Issuer
      type: object
      properties:
        Thumbprint:
          description: >-
            Hexadecimal string that uniquely identifies a certificate,
            calculated from the content of the certificate using an algorithm.
          type: string
        DistinguishedName:
          description: Unique name of the certificate.
          type: string
        Issuer:
          description: Issuer of the certificate.
          type: string
        ExpirationInUtc:
          format: date-time
          description: Expiry date and time (UTC).
          type: string
    FactorySystemRegistrationResponse:
      type: object
      properties:
        FactorySystemRegistrationResults:
          description: >-
            Contains the results of the import process. It validates the
            SystemID and displays the results.
          type: array
          items:
            $ref: '#/components/schemas/FactorySystemRegistrationResult'
        IsBatchImportSuccess:
          description: "Specifies if all systems in the batch have been imported successfully. Possible values:\r\n            <ul><li>True - all systems within the batch have been imported successfully.</li><li>False - at least one system within the batch did not import successfully.</li></ul>"
          type: boolean
    FactorySystemRegistrationResult:
      type: object
      properties:
        SystemId:
          description: Returns the SystemId passed in the request.
          type: string
        IsImportSuccessful:
          description: >-
            Specifies if the import of the associated SystemId has been
            successful.
          type: boolean
    WebApiSystemPublicKey:
      required:
        - PublicKey
      type: object
      properties:
        PublicKey:
          description: Public key of the encryption pair.
          type: string
    WebApiSubsystemDetails:
      required:
        - SystemId
      type: object
      properties:
        SystemId:
          description: >-
            Unique identifier for a system; used in conjunction with SystemType
            to uniquely identify a system in Honeywell Sentience.
          type: string
    WebApiFactorySubsystemBatchRegistrationResponse:
      type: object
      properties:
        IsBatchImportSuccess:
          description: "Specifies if all systems in the batch have been imported successfully. Possible values:\r\n            <ul><li>True - all systems within the batch have been imported successfully.</li><li>False - at least one system within the batch did not import successfully.</li></ul>"
          type: boolean
        SubsystemRegistrationResults:
          description: Contains the subsystem registration import results.
          type: array
          items:
            $ref: '#/components/schemas/WebApiFactorySubsystemRegistrationResult'
    WebApiFactorySubsystemRegistrationResult:
      type: object
      properties:
        SystemId:
          description: Returns the SystemId passed in the request.
          type: string
        IsImportSuccessful:
          description: >-
            Specifies if the import for the associated SystemId has been
            successful.
          type: boolean
    WebApiSystemDetail:
      required:
        - SystemType
        - User
        - SystemId
      type: object
      properties:
        SystemType:
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          type: string
        User:
          description: Individual person who is processing the registration.
          type: string
        SystemId:
          description: >-
            Unique identifier of a system; used in conjunction with the System
            Type to uniquely identify a system in Honeywell Sentience.
          type: string
        SystemPublicKey:
          description: Public key of the encryption pair associated with the System.
          type: string
        CertificateDetails:
          allOf:
            - $ref: '#/components/schemas/WebApiFactoryCertificateDetails'
            - description: Specific data describing an associated certificate.
        SystemMetaData:
          description: Additional information that can be added for a system, as necessary.
          type: object
          additionalProperties:
            type: string
    WebApiSystemRegistrationResponse:
      type: object
      properties:
        SystemId:
          description: Returns validated SystemId.
          type: string
        SystemOwnershipCode:
          description: >-
            Unique number, printed on the side of the embedded hardware;
            typically generated by Honeywell Sentience but can be created by the
            caller with the platform validating uniqueness before acceptance.
          type: string
    WebApiVersionableAssetVersion:
      type: object
      properties:
        Version:
          description: The asset version.
          type: string
        CompatibleVersions:
          description: Eligible versions to get updated with this asset.
          type: array
          items:
            type: string
        AssetType:
          description: Type of asset.
          type: string
        ReleaseState:
          description: A release state could either be <b>Draft</b> or <b>Released</b>.
          type: string
        VerificationCode:
          description: >-
            Checksum of the firmware which can be used to verify the integrity
            of the firmware on download.
          type: string
        Priority:
          description: The version priority.
          type: string
        CreatedById:
          description: Object ID of the user/application who created the device type.
          type: string
        CreatedBy:
          description: Name of the logged in user/application who created the device type.
          type: string
        CreatedOn:
          format: date-time
          description: Creation date in UTC format.
          type: string
        ModifiedById:
          description: Object ID of the user/application who modified the device type.
          type: string
        ModifiedBy:
          description: Name of the logged in user/application who modified the device type.
          type: string
        ModifiedOn:
          format: date-time
          description: Modified date in UTC format.
          type: string
    WebApiVersionableAssetUploadRequest:
      required:
        - AssetBytes
        - AssetVersion
      type: object
      properties:
        AssetBytes:
          description: The asset byte array
          type: string
        AssetVersion:
          description: The asset version.
          type: string
        CompatibleVersions:
          description: Eligible versions to get updated with this asset.
          type: array
          items:
            type: string
        ReleaseState:
          description: A release state could either be <b>Draft</b> or <b>Released</b>.
          type: string
        VerificationCode:
          description: >-
            Checksum of the firmware which can be used to verify the integrity
            of the firmware on download.
          pattern: (^$)|(^[0-9a-fA-F]{32}$)|(^[0-9a-fA-F]{40}$)
          type: string
        Priority:
          description: The version priority.
          type: string
    WebApiVersionableAssetStreamUploadRequest:
      required:
        - AssetVersion
      type: object
      properties:
        AssetVersion:
          description: The asset version.
          type: string
        CompatibleVersions:
          description: Eligible versions to get updated with this asset.
          type: array
          items:
            type: string
        ReleaseState:
          description: A release state could either be <b>Draft</b> or <b>Released</b>.
          type: string
        VerificationCode:
          description: >-
            Checksum of the firmware which can be used to verify the integrity
            of the firmware on download.
          pattern: (^$)|(^[0-9a-fA-F]{32}$)|(^[0-9a-fA-F]{40}$)
          type: string
        Priority:
          description: The version priority.
          type: string
    WebApiGetDeviceFirmwareDetailResponse:
      type: object
      properties:
        Version:
          description: Version of the Firmware.
          type: string
        VerificationCode:
          description: >-
            Checksum of the firmware which can be used to verify the integrity
            of the firmware on download.
          type: string
        AssetName:
          description: Name of the asset in the device.
          type: string
    WebApiFixtureDetails:
      description: Contains details of the fixture which is registering devices.
      required:
        - FixtureId
      type: object
      properties:
        FixtureId:
          description: Unique ID of the current fixture that is registered.
          type: string
    RpkChallenge:
      type: object
      properties:
        ChallengeString:
          description: >-
            Cryptographically random number for the caller to encrypt and
            return.
          type: string
        ChallengeResponseApiUrl:
          description: URL where the encrypted response should be sent.
          type: string
    FixtureRpkChallengeResponse:
      description: Contains response details for the Rpk challenge obtained for Fixture
      required:
        - FixtureId
        - ClientRandom
        - ClientRandomSignature
      type: object
      properties:
        FixtureId:
          description: Unique ID of the fixture.
          type: string
        ClientRandom:
          description: Base64-encoded 32-byte cryptographic-quality random number.
          type: string
        ClientRandomSignature:
          description: Result of Sign (Kpriv, Nonce(SHA (Challenge | ClientRandom))).
          type: string
    WebApiFixtureRegistrationRequest:
      required:
        - PublicKey
      type: object
      properties:
        PublicKey:
          description: Public Key of the fixture to be registered.
          type: string
        FixtureName:
          description: Name of the fixture to be registered.
          type: string
    WebApiFixtureRegistrationResponse:
      required:
        - FixtureExpiryDateTime
        - FixtureId
      type: object
      properties:
        FixtureExpiryDateTime:
          format: date-time
          description: Last date until which the fixture can be used to add systems.
          type: string
        FixtureId:
          description: "Unique ID of the current fixture that is registered. This unique ID is presented to the following APIs to uniquely identify the fixture:\r\n            <ul><li><a href=\"/api/public#operation/FixtureRpkChallenge_RequestChallenge\" target=\"_blank\">Request Challenge</a></li><li><a href=\"/api/public#operation/FixtureRpkChallenge_VerifyChallengeResponse\" target=\"_blank\">Verify Challenge Response</a></li><li><a href=\"/api/public#operation/FactoryRegistration_RegisterSystem\" target=\"_blank\"></a>Register System</li></ul>"
          type: string
    WebApiFixtureDetailsResponse:
      type: object
      properties:
        FixtureExpiryDateTime:
          format: date-time
          description: >-
            Last date until which the fixture can be used to add gateways to
            system registry using <a
            href="/api/public#operation/FactoryRegistration_RegisterBatch"
            target="_blank">Register Batch</a>.
          type: string
        UniqueId:
          description: "Unique ID of the current fixture that is registered. This unique ID is presented to the following APIs to uniquely identify the fixture.\r\n            <ul><li><a href=\"/api/public#operation/FixtureRpkChallenge_RequestChallenge\" target=\"_blank\">Request Challenge </a></li><li><a href=\"/api/public#operation/FixtureRpkChallenge_VerifyChallengeResponse\" target=\"_blank\">Verify Challenge Response</a></li><li><a href=\"/api/public#operation/FactoryRegistration_RegisterBatch\" target=\"_blank\">Register Batch</a></li></ul>"
          type: string
        PublicKey:
          description: Public Key of the registered fixture.
          type: string
    ForgeAccessResourceRegistryRequest:
      type: object
      properties:
        ResourceId:
          description: Id of the resource which needs to be added to the resource registry.
          type: string
    RegisteredResourceDetails:
      type: object
      properties:
        Id:
          type: string
        Props:
          type: object
          additionalProperties:
            type: string
    WebApiModelTypeRegistrationRequest:
      required:
        - ModelTypeId
      type: object
      properties:
        ModelTypeId:
          description: >-
            Unique ID of the model type. Maximum allowed length is 49
            characters.
          pattern: ^[a-zA-Z0-9:-]{1,49}$
          type: string
        Description:
          description: >-
            Description of the model type. Maximum allowed length is 1000
            characters.
          type: string
        CreatePermissionsOnlyInCallerIdentityProvider:
          description: >-
            If set to true, default model  groups are created only in
            corresponding caller's source Identity Provider. If false or not
            set, the permissions are replicated in all supported Identity
            Provider(AD and ForgeRock for now)
          type: boolean
    WebApiModelTypeResponse:
      type: object
      properties:
        ModelTypeId:
          description: Unique ID of the model type.
          type: string
        Description:
          description: Description of the model type.
          type: string
    NewApplicationRequest:
      required:
        - ApplicationName
      type: object
      properties:
        ApplicationName:
          description: Name of the application identity to be created.
          type: string
        Email:
          description: >-
            The email address of the support person or team who owns the
            application identity.
          type: string
        ReplyUrl:
          description: >-
            Location to which Azure AD will send the authentication response.
            The response includes a token if the authentication is successful.
          type: string
    WebApiApplicationRegistrationResult:
      type: object
      properties:
        ApplicationId:
          description: Unique ID of the application that is created.
          type: string
        ApplicationKey:
          description: Password/key to the application.
          type: string
        ApplicationAppIdUri:
          description: Audience of the access token.
          type: string
    WebApiCreateApplicationRequest:
      description: >-
        The request data which holds the parameters required to create the
        application identity.
      required:
        - ApplicationName
        - RedirectionUrl
      type: object
      properties:
        ApplicationName:
          description: Name of application identity to be created.
          type: string
        ApplicationLoginUrl:
          description: >-
            The Login Url which is linked with the application identity. This is
            optional for application identities.
          type: string
        RedirectionUrl:
          description: >-
            The redirection Url which is linked with the application identity.
            Should be https.
          type: string
        SupportEmail:
          description: "The email address of the support person or team who will owns the application identity.\r\n            This is optional."
          type: string
        SupportPhone:
          description: >-
            The phone number of the support person or team who owns the
            application identity.
          type: string
        SupportWebsite:
          description: The website of the support team who owns the application identity.
          type: string
    WebApiCreateApplicationResponse:
      description: >-
        The response data containing the details about the created application
        identity.
      type: object
      properties:
        ApplicationName:
          description: Name of the created application  identity.
          type: string
        ApplicationGuid:
          description: Guid of the created application  identity.
          type: string
        BaseUrl:
          description: >-
            The Url from which a JWT token can be requested for this
            application.
          type: string
        SupportEmail:
          description: >-
            The email address of the support person or team who owns this
            application identity.
          type: string
        SupportPhone:
          description: >-
            The phone number of the support person or team who owns this
            application identity.
          type: string
        SupportWebsite:
          description: The website of the support team who owns this application identity.
          type: string
        ClientId:
          description: "The client ID of the created application identity.\r\n            This information is very sensitive. You must treat it as a user ID. Do not share it."
          type: string
        ClientSecret:
          description: "The client secret of the created application identity.\r\n            This information is very sensitive. You must treat it as password. Do not share it."
          type: string
        Realm:
          description: "The name of the realm which is linked with this application identity.\r\n            This is used while requesting a JWT Token for this application identity."
          type: string
    WebApiCheckSelfPermissionRequest:
      description: Request object to check self permissions.
      type: object
      properties:
        EntityType:
          description: "Type of permissions to be checked, such as:\r\n            <ul><li>System</li><li>SystemType</li><li>Model</li><li>ModelType</li><li>SystemTypeAndSystem</li><li>ModelTypeAndModel</li><li>Global</li></ul>"
          type: string
        EntityId:
          description: "ID of the entity for which permission must be checked. Acceptable values are: \r\n            <ul><li>SystemGuid for System</li><li>SystemGuid for SystemTypeAndSystem</li><li>SystemTypeId for SystemType</li><li>ModelId for Model</li><li>ModelId for ModelTypeAndModel</li><li>ModelTypeId for ModelType</li><li>Null for Global</li></ul>"
          type: string
        ActivityIds:
          description: List of activities for which permissions must be checked.
          type: array
          items:
            type: string
    WebApiCheckPermissionResponse:
      type: object
      properties:
        Activity:
          description: Name of activity for which permissions are checked.
          type: string
        IsAuthorized:
          description: Indicates if the caller is authorized to use an activity.
          type: boolean
    WebApiCheckPermissionRequest:
      description: Request object to check permissions for the supplied application/user.
      type: object
      properties:
        EntityType:
          description: "Type of permissions to be checked, such as:\r\n            <ul><li>System</li><li>SystemType</li><li>Model</li><li>ModelType</li><li>SystemTypeAndSystem</li><li>ModelTypeAndModel</li><li>Global</li></ul>"
          type: string
        EntityId:
          description: "ID of the entity for which permission must be checked. Acceptable values are: \r\n            <ul><li>SystemGuid for System</li><li>SystemGuid for SystemTypeAndSystem</li><li>SystemTypeId for SystemType</li><li>ModelId for Model</li><li>ModelId for ModelTypeAndModel</li><li>ModelTypeId for ModelType</li><li>Null for Global</li></ul>"
          type: string
        ActivityIds:
          description: List of activities for which permissions must be checked.
          type: array
          items:
            type: string
        WebApiClaims:
          description: List of claims required to check permissions.
          type: array
          items:
            $ref: '#/components/schemas/WebApiClaim'
    WebApiClaim:
      description: Represents a claim.
      type: object
      properties:
        Type:
          description: Gets and Sets claim type of the claim.
          type: string
        Value:
          description: Gets and Sets value of the claim.
          type: string
    WebApiFetchProjectsReponse:
      type: object
      properties:
        Projects:
          description: List of projects.
          type: array
          items:
            type: string
    WebApiCreateProjectRequest:
      description: Project creation request
      required:
        - Name
        - ParentProjectName
      type: object
      properties:
        Name:
          description: Name of the project to be created.
          type: string
        ParentProjectName:
          description: >-
            Name of the parent project. If the parent is root, the value should
            be "/".
          type: string
    WebApiCreateProjectActivitiesRequest:
      description: Project activities creation request
      required:
        - Activities
        - ProjectName
      type: object
      properties:
        Activities:
          description: List of activities to be created.
          type: array
          items:
            type: string
        ProjectName:
          description: >-
            Project name under which the activities are to be created. If the
            project is root, then the value should be "/".
          type: string
    WebApiFetchProjectActivitiesResponse:
      type: object
      properties:
        Activities:
          description: List of project activities.
          type: array
          items:
            type: string
    WebApiDeleteProjectActivitiesRequest:
      description: Payload for deleting the project activities
      required:
        - Activities
      type: object
      properties:
        Activities:
          description: List of activities to be deleted.
          type: array
          items:
            type: string
    WebApiCreateProjectTagsRequest:
      description: Project tags creation request
      required:
        - Tags
        - ProjectName
      type: object
      properties:
        Tags:
          description: List of tags to be created.
          type: array
          items:
            type: string
        ProjectName:
          description: >-
            Project name under which tags are to be created. If the project is
            root, then the value should be "/".
          type: string
    WebApiGetProjectTagsResponse:
      type: object
      properties:
        Tags:
          description: List of project tags.
          type: array
          items:
            type: string
    WebApiDeleteProjectTagsRequest:
      description: Payload for deleting the project tags
      required:
        - Tags
      type: object
      properties:
        Tags:
          description: Tags to be deleted.
          type: array
          items:
            type: string
    WebApiProjectGlobalActivitiesRequest:
      description: Request object for project level permissions.
      required:
        - GlobalActivities
      type: object
      properties:
        GlobalActivities:
          description: List of global activities.
          type: array
          items:
            type: string
    WebApiCheckProjectPermissionResponse:
      type: object
      properties:
        HasPermission:
          description: "Specifies if the application or user has global permissions on the project. Possible values:\r\n            <ul><li>True: The application/user has global permissions on the project.</li><li>False: The application/user does not have global permissions on the project.</li></ul>"
          type: boolean
    WebApiFetchTagsResponse:
      description: ''
      type: object
      properties:
        Tags:
          description: List of tags.
          type: array
          items:
            type: string
    WebApiProjectActivitiesRequest:
      description: Request object for project activity permissions.
      required:
        - Activities
      type: object
      properties:
        Activities:
          description: List of activities.
          type: array
          items:
            type: string
    WebApiCheckTagPermissionResponse:
      type: object
      properties:
        HasPermission:
          description: "Specifies if the application or user has global permissions on a tag. Possible values: \r\n            <ul><li>True: The application/user has global permissions on a tag.</li><li>False: The application/user does not have global permissions on a tag.</li></ul>"
          type: boolean
    WebApiJsonKeySetResponse:
      type: object
      properties:
        keys:
          description: >-
            Array of JSON Web Key Values. It represents the standard parameters
            for the algorithm.
          type: array
          items:
            $ref: '#/components/schemas/WebApiJsonWebKey'
    WebApiJsonWebKey:
      type: object
      properties:
        d:
          description: Represents the D (Private Exponent) parameter for the algorithm.
          type: string
        dp:
          description: >-
            Represents the DP (First Factor CRT Exponent) parameter for the
            algorithm.
          type: string
        dq:
          description: >-
            Represents the DQ (Second Factor CRT Exponent) parameter for the
            algorithm.
          type: string
        e:
          description: Represents the E (Exponent)parameter for the algorithm.
          type: string
        k:
          description: Represents the Key Value for the algorithm.
          type: string
        keyops:
          description: Represents the Key Operations for the algorithm.
          type: array
          items:
            type: string
        kid:
          description: Represents the Key Id for the algorithm.
          type: string
        kty:
          description: Represents the Key Type for the algorithm.
          type: string
        'n':
          description: Represents the N (Modulus) parameter for the algorithm.
          type: string
        p:
          description: Represents the P (First Prime factor) parameter for the algorithm.
          type: string
        q:
          description: Represents the Q (Second Prime factor) parameter for the algorithm.
          type: string
        qi:
          description: >-
            Represents the QI (First CRT Coefficient) parameter for the
            algorithm.
          type: string
        t:
          description: Represents the T parameter for the algorithm.
          type: string
    SystemDetails:
      required:
        - SystemId
        - SystemType
      type: object
      properties:
        SystemId:
          description: >-
            Unique identifier for a system; used in conjunction with the System
            Type to uniquely identify a system in Honeywell Sentience.
          type: string
        SystemType:
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          type: string
    RpkChallengeResponse:
      required:
        - SystemId
        - SystemType
        - ClientRandom
        - ClientRandomSignature
      type: object
      properties:
        SystemId:
          description: >-
            Unique identifier for a system; used in conjunction with SystemType
            to uniquely identify a system in Honeywell Sentience.
          type: string
        SystemType:
          description: >-
            Provides identity to a System outside of the provisioning life
            cycle; used in conjunction with the System ID to uniquely identify a
            System in Honeywell Sentience. Can be named as per application
            requirements to represent a meaningful authorization grouping within
            the application context.
          type: string
        ClientRandom:
          description: Random string that the application appends to the response key.
          type: string
        ClientRandomSignature:
          description: Client Random string encrypted with the device signature.
          type: string
    ServiceDetails:
      type: object
      properties:
        Url:
          description: Url of the requested service.
          type: string
        ActiveDirectoryResourceId:
          description: "Active Directory Resource ID of the service. It is used only by Active Directory users. It is not needed for ForgeRock users.\r\n            <ul><li>Active Directory users call active directory to obtain an authorization token and must provide the value obtained in the ActiveDirectoryResourceId field. The token is then used used to call the Url of the requested service.</li><li>ForgeRock users call ForgeRock to obtain an authorization token.The token is then used to call the Url of the requested service.</li></ul>"
          type: string
    RegisterServiceDetailsRequest:
      description: RegisterServiceDetailsRequest
      required:
        - ServiceRegistrationRequests
      type: object
      properties:
        ServiceRegistrationRequests:
          description: List of the service registration requests.
          type: array
          items:
            $ref: '#/components/schemas/ServiceRegistrationRequest'
    ServiceRegistrationRequest:
      description: ServiceRegistrationRequest
      required:
        - ServiceId
        - UrlFormat
        - ActiveDirectoryResourceId
      type: object
      properties:
        ServiceId:
          description: "ID of the service for which the service details are retrieved. Acceptable values are:\r\n            <ul><li>ActorService</li><li>AlarmAcknowledgeService</li><li>AlarmConfigurationService</li><li>AlertSubscriptionService</li><li>AnnotationEventPublishService</li><li>BigDataPointHistoryService</li><li>ConnectionMonitorService</li><li>ElementService</li><li>EventStoreUpdateService</li><li>ModelService</li><li>ModelPropertiesService</li><li>PointsControlService</li><li>PointHistoryService</li><li>ProductUiContextService</li><li>SparqlService</li><li>SpatialElementService</li><li>SystemCommand</li></ul>"
          type: string
        UrlFormat:
          description: Url of the requested service.
          type: string
        ActiveDirectoryResourceId:
          description: "Active Directory Resource ID of the service. It is used only by Active Directory users. It is not needed for ForgeRock users.\r\n            <ul><li>Active Directory users call active directory to obtain an authorization token and must provide the value obtained in theActiveDirectoryResourceId field.The token is then used used to call the Url of the requested service.</li><li>ForgeRock users call ForgeRock to obtain an authorization token.The token is then used to call the Url of the requested service.</li></ul>"
          type: string
    WebApiUnconnectedSystemDetailResponse:
      type: object
      properties:
        SystemGuid:
          type: string
        SystemId:
          type: string
        Description:
          type: string
    WebApiSystemConnectionDetailResponse:
      type: object
      properties:
        Path:
          description: Specifies the remote connection path. This is a URI.
          type: string
        UserName:
          description: >-
            Specifies the user name used to authenticate a client trying to
            access a remote service.
          type: string
        Password:
          description: >-
            Specifies the password used to authenticate a client trying to
            access a remote service.
          type: string
        ServerType:
          description: "Specifies the connection server type. For IoT Hub connections, the consumer should look for server type as \"IoTHub\". For File Upload connections, the consumer should look for server type \"FileUpload\".\r\n            <br /><b>Note:</b><ul><li>While IoTHub is the primary IoT Hub Service, IoTHub2 is a secondary service that can be used if the primary service is down.</li><li>File Upload Connection string will be returned only if the system type of the system has registered for File Upload Service. To understand how to register for File Upload Service, please refer <a href=\"https://confluence.honeywell.com/display/HCEDMW/File+Upload\" target=\"_blank\">File Upload</a>.</li></ul>"
          type: string
        AuthMode:
          description: Specifies the authentication type used to access a remote service.
          type: string
        CredentialType:
          description: >-
            Specifies the encryption type used to encrypt the data/message while
            communicating with a remote service.
          type: string
        Credential:
          description: >-
            Specifies the encryption key used to encrypt the data/message that
            is sent to a remote service.
          type: string
        UseExistingConnection:
          description: >-
            If set to true, specifies that an established connection is used for
            communication with the remote service.
          type: boolean
        CertificateType:
          description: This is not used. The value will be empty.
          type: string
        Certificate:
          description: This is not used. The value will be empty.
          type: string
    WebApiSystemProvisioningRequest:
      type: object
      properties:
        SystemType:
          type: string
        OwnershipCode:
          type: string
    WebApiSystemProvisioningPrepareRequest2:
      type: object
      properties:
        OwnershipCode:
          description: Ownership code of the system in the provisioning process.
          type: string
        TenantName:
          description: Name of the tenant to which a system is assigned.
          type: string
    WebApiSystemAssociationResponse:
      type: object
      properties:
        OwnershipCode:
          description: Ownership code of the system.
          type: string
        SystemGuid:
          description: Unique ID of the system.
          type: string
        Result:
          allOf:
            - $ref: '#/components/schemas/AssociationResult'
            - description: Contains the result of the request.
    AssociationResult:
      type: object
      properties:
        IsSucess:
          description: Specifies if the request has been successfully completed.
          type: boolean
        ErrorMessage:
          description: Applicable error message, if any.
          type: string
    WebApiSystemAssociationResetResponse:
      type: object
      properties:
        OwnershipCode:
          type: string
        Result:
          $ref: '#/components/schemas/AssociationResult'
    WebApiSystemReplaceRequest:
      required:
        - SystemType
        - CurrentOwnershipCode
        - ReplacementOwnershipCode
      type: object
      properties:
        SystemType:
          description: Type of the system
          type: string
        CurrentOwnershipCode:
          description: Unique 8 digit code for current system
          type: string
        ReplacementOwnershipCode:
          description: Unique 8 digit code for replacement system
          type: string
    WebApiSystemReplaceRequestV2:
      required:
        - CurrentOwnershipCode
        - ReplacementOwnershipCode
      type: object
      properties:
        CurrentOwnershipCode:
          description: >-
            Unique 8-digit code for the current system. Will be replaced by a
            new code.
          type: string
        ReplacementOwnershipCode:
          description: >-
            Unique 8-digit code for the NotProvisioned system. Will replace the
            existing ownership code.
          type: string
    WebApiSystemToSystemTypeRequest:
      required:
        - OldSystemType
        - NewSystemType
        - Systems
      type: object
      properties:
        OldSystemType:
          description: Old System Type of the given array of Systems
          type: string
        NewSystemType:
          description: New System Type to which the given array of Systems would be mapped
          type: string
        Systems:
          description: Array of Systems whose System Type to be changed
          type: array
          items:
            type: string
    WebApiSystemToSystemTypeResponse:
      type: object
      properties:
        SystemToSystemTypeMappingChangeResult:
          description: >-
            Response containing change status of SystemType Replace operation,
            will contain error if status is NotFound or Unsuccessful
          type: array
          items:
            $ref: '#/components/schemas/SystemToSystemTypeMappingChangeResult'
    SystemToSystemTypeMappingChangeResult:
      type: object
      properties:
        ChangeStatus:
          enum:
            - UnKnown
            - NotFound
            - Successful
            - Unsuccessful
          type: string
        SystemGuid:
          type: string
        ErrorMessages:
          type: string
    WebApiSystemDeProvisionRequest:
      required:
        - SystemType
        - SystemId
      type: object
      properties:
        SystemType:
          description: Type of the system
          type: string
        SystemId:
          description: Unique id of the system
          type: string
    WebApiSubsystemProvisioningRequest:
      required:
        - TenantName
      type: object
      properties:
        SystemId:
          description: Unique ID of the system. Maximum allowed length is 50 characters.
          pattern: ^[a-zA-Z0-9:\-_]{1,49}$
          type: string
        TenantName:
          description: >-
            Name of the tenant to which the system needs to connect when it is
            provisioned.
          type: string
    WebApiSubsystemProvisioningBatchResponse:
      type: object
      properties:
        Result:
          description: >-
            Holds the system identification details and the result of "prepare
            for provisioning" for each sub-system in the request.
          type: array
          items:
            $ref: '#/components/schemas/WebApiSubsystemProvisioningResponse'
        IsBatchSuccessful:
          description: "Specifies if the sub systems are ready for provisioning. Possible values:\r\n            <ul><li>True - all systems within the batch are prepared for provisioning.</li><li>False - at least one system is not prepared for provisioning.</li></ul>"
          type: boolean
    WebApiSubsystemProvisioningResponse:
      type: object
      properties:
        SystemId:
          description: Returns System ID from the request.
          type: string
        SystemGuid:
          description: The system GUID that is now associated with the specified SystemId.
          type: string
        Result:
          allOf:
            - $ref: '#/components/schemas/AssociationResult'
            - description: Contains the results for the system specified.
    WebApiSystemRegistryGetSystemResponse:
      type: object
      properties:
        SystemId:
          description: Unique ID of the system.
          type: string
        SystemType:
          description: >-
            Provides identity to a system outside of the provisioning life
            cycle; used in conjunction with the system ID to uniquely identify a
            system in Sentience.
          type: string
        SystemGuid:
          description: >-
            GUID of the system. It may be null if the system has not been
            associated with the Sentience platform.
          type: string
        Details:
          description: >-
            Any specific details of the system. In the case of an RPK system,
            this is a JSON document with ownership code, public key, and
            registering user.
          type: string
        MetaData:
          description: >-
            Any extra metadata provided by the registering fixture or
            application. This is a JSON document with a dictionary.
          type: string
    WebApiSystemRegistryGraphQlRequest:
      required:
        - Query
      type: object
      properties:
        OperationName:
          description: Operation name inside the query to be executed.
          type: string
        NamedQuery:
          description: >-
            Name of the supported query. It is useful to name the queries to
            later help with logging and debugging.
          type: string
        Query:
          description: "A GraphQL to be executed\r\n             <details><summary style=\"outline:none\">Query example:</summary><pre><code>\r\n             query namedQuery{\r\n                systemRegistryDetails(systemType: \"type1\" )\r\n                {\r\n                    systemType\r\n                    systems(provisioningStatus: \"Provisioned\" first: 2)\r\n                    {\r\n                        systemId\r\n                        systemGuid\r\n                        details\r\n                        provisioningStatus\r\n                    }\r\n                }\r\n            }</code></pre></details>"
          type: string
        Variables:
          description: >-
            A JSON-encoded object containing the variables for the query. It
            represents a key-value collection. Example: {"first": 2}
          type: string
    WebApiSystemRegistryGraphQlResponse:
      type: object
      properties:
        errors:
          description: >-
            Gets the GraphQL query execution errors. Refer to <a
            href="http://facebook.github.io/graphql/October2016/#sec-Errors"
            target="_blank">GraphQL specification</a> for more details.
          type: array
          items:
            $ref: '#/components/schemas/WebApiSystemRegistryGraphQlError'
        data:
          allOf:
            - $ref: '#/components/schemas/Object'
            - description: "Resulting query object.\r\n             <details><summary style=\"outline:none\">Query data example:</summary><pre><code>\r\n            {\r\n                \"systemRegistryDetails\": {\r\n                    \"systemType\": \"type1\",\r\n                    \"systems\": [\r\n                    {\r\n                        \"systemId\": \"system1\",\r\n                        \"systemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n                        \"details\": \"systemmetadata\",\r\n                        \"provisioningStatus\": \"Provisioned\"\r\n                   },\r\n                    {\r\n                        \"systemId\": \"system3\",\r\n                        \"systemGuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n                        \"details\": \"systemmetadata\",\r\n                        \"provisioningStatus\": \"Provisioned\"\r\n                    }\r\n                    ]\r\n                }\r\n            }</code></pre></details><br />Refer to <a href=\"http://facebook.github.io/graphql/October2016/#sec-Data\" target=\"_blank\">GraphQL specification</a> for more details."
    WebApiSystemRegistryGraphQlError:
      type: object
      properties:
        locations:
          description: Contains the locations of errors within the query.
          type: array
          items:
            $ref: '#/components/schemas/WebApiSystemRegistryGraphQlErrorLocation'
        message:
          description: Error message, if any.
          type: string
    Object:
      type: object
      properties: {}
    WebApiSystemRegistryGraphQlErrorLocation:
      type: object
      properties:
        line:
          format: int32
          description: >-
            A 32-bit integer. Gets the line number where the error was found
            within the query.
          type: integer
        column:
          format: int32
          description: >-
            A 32-bit integer. Gets the column where the error was found within
            the query.
          type: integer
    WebApiSystemServiceDetailsResponse:
      type: object
      properties:
        ServiceId:
          description: Unique ID of the system service.
          type: string
        SystemTypes:
          description: The array of system types associated with the system service.
          type: array
          items:
            type: string
    WebApiSetSystemEnabledStatusRequest:
      description: The request of SetSystemEnabledStatus API
      required:
        - Enabled
      type: object
      properties:
        Enabled:
          description: Specifies the enabled status of the system.
          type: boolean
    WebApiGetSystemEnabledStatusResponse:
      description: The response of GetSystemEnabledStatus API
      required:
        - Enabled
      type: object
      properties:
        Enabled:
          description: Specifies the enabled status of the system.
          type: boolean
    WebApiSystemServicePermissionsRequest:
      required:
        - Activities
      type: object
      properties:
        Activities:
          description: List of activities (system service permissions) to be added/removed.
          type: array
          items:
            type: string
    WebApiSystemServiceActivitiesResponse:
      type: object
      properties:
        Activities:
          description: List of activities (system service permissions) retrieved.
          type: array
          items:
            type: string
    WebApiRegisterSystemServiceRequest:
      description: >-
        Request to register a System Service with the Provisioning Service.
        Simple System Services with a fixed URL for all the devices should set
        this via the URL parameter of the request. System Services that have
        different connection details for each system can set the Callback
        parameter to REST endpoint, which will implement the callback interface
        that can provide connection details dynamically for each provisioned
        system. Only one of URL and Callback can be set for the request.
      required:
        - Audience
        - IsJwtRequired
      type: object
      properties:
        Url:
          description: >-
            URL of the system service endpoint devices that should be used to
            communicate with the service. If this is supplied, then Callback
            should not be set.
          type: string
        Audience:
          description: Audience of the token which is used by the system service.
          type: string
        IsJwtRequired:
          description: >-
            Indicates if there is a need for Global to generate a JWT token for
            the system service.
          type: boolean
        Callback:
          description: >-
            Callback URL, which the provisioning service should use to request
            connection details for a device from the system service. If this is
            supplied, then the URL should not be set.
          type: string
    WebApiSystemServiceRegistrationResponse:
      type: object
      properties:
        ServiceId:
          description: Unique ID of the system service.
          type: string
        TenantName:
          description: Name of the tenant.
          type: string
        URL:
          description: >-
            URL of the system service endpoint devices that should be used to
            communicate with the service. If this is supplied, then Callback
            should not be set.
          type: string
        Audience:
          description: Audience of the token which is used by the system service.
          type: string
        IsJWTRequired:
          description: >-
            Indicates if there is a need for Global to generate a JWT token for
            the system service.
          type: boolean
        Callback:
          description: >-
            Callback URL, which the provisioning service should use to request
            connection details for a device from the system service. If this is
            supplied, then the URL should not be set.
          type: string
    WebApiSystemAndModelMappingResponse:
      type: object
      properties:
        SystemGuid:
          description: GUID of the system to which the model mapping is linked.
          type: string
        ModelId:
          description: ID of the model to which the system is mapped.
          type: string
        CreatorType:
          format: int32
          description: "Creator type of the model.\r\n            <ul><li>If Creator type is 0, then the model is created internally by Honeywell Sentience and not by the user.</li><li>If Creator type is 1, then the model is created by the user and linked to the system.</li></ul>"
          enum:
            - 0
            - 1
            - -1
          type: integer
    WebApiAddSystemTypeRequest:
      required:
        - SystemType
      type: object
      properties:
        SystemType:
          description: The system type name to be added.
          type: string
        OwnershipCodeGenerationType:
          description: Indicates the rule used for generating the ownership code.
          type: string
        CreatePermissionsOnlyInCallerIdentityProvider:
          description: >-
            If set to true, system groups, default model and default model type
            groups are created only in corresponding caller's source Identity
            Provider. If false or not set, the permissions are replicated in all
            supported Identity Provider(AD and ForgeRock for now)
          type: boolean
    WebApiTestGroup:
      type: object
      properties:
        Name:
          description: Test group name.
          type: string
        Description:
          description: Test group description.
          type: string
        DeviceType:
          description: The device type associated with the test group.
          type: string
        Systems:
          description: The systems that are associated with the test group.
          type: array
          items:
            type: string
        Versions:
          description: >-
            The asset type and version pairs that are associated with the test
            group.
          type: array
          items:
            $ref: '#/components/schemas/WebApiTestGroupAssetVersion'
        CreatedById:
          description: Object ID of the user/application who created the device type.
          type: string
        CreatedBy:
          description: Name of the logged in user/application who created the device type.
          type: string
        CreatedOn:
          format: date-time
          description: Creation date in UTC format.
          type: string
        ModifiedById:
          description: Object ID of the user/application who modified the device type.
          type: string
        ModifiedBy:
          description: Name of the logged in user/application who modified the device type.
          type: string
        ModifiedOn:
          format: date-time
          description: Modified date in UTC format.
          type: string
    WebApiTestGroupAssetVersion:
      required:
        - AssetType
      type: object
      properties:
        AssetType:
          description: Asset type. Maximum allowed length is 256 characters.
          type: string
        Version:
          description: >-
            Version to be used in the test group. Maximum allowed length is 256
            characters.
          type: string
    WebApiTestGroupAddRequest:
      required:
        - Name
      type: object
      properties:
        Name:
          description: Name of the test group to be created.
          pattern: ^[A-Za-z0-9]{1,256}$
          type: string
        Description:
          description: >-
            Description of the test group. Maximum allowed length is 1000
            characters.
          type: string
    WebApiUpdateQueryRequest:
      type: object
      properties:
        DeviceType:
          description: Type of device.
          type: string
        CurrentAssets:
          description: Array of list of assets under a system.
          type: array
          items:
            $ref: '#/components/schemas/WebApiAssetUpdateRequest'
        RequestedAssets:
          description: >-
            Array of list of assets that the device requests to download and
            install.
          type: array
          items:
            $ref: '#/components/schemas/WebApiRequestedAssetVersionRequest'
    WebApiAssetUpdateRequest:
      required:
        - AssetName
      type: object
      properties:
        AssetName:
          description: Name of the asset for which a firmware update is requested.
          type: string
        CurrentVersion:
          description: Current version of the firmware in device.
          type: string
        VerificationCode:
          description: Unique CRC check code of the firmware in the device.
          type: string
    WebApiRequestedAssetVersionRequest:
      required:
        - AssetName
        - RequestedVersion
      type: object
      properties:
        AssetName:
          description: Name of the asset for which a firmware update is requested.
          type: string
        RequestedVersion:
          description: Version that the device forcefully wants to download and install.
          type: string
    WebApiAssetUpdateResponse:
      type: object
      properties:
        AssetName:
          description: Name of the asset on which the firmware can be installed.
          type: string
        NewVersion:
          description: Returned version of the new firmware.
          type: string
        DownloadUrl:
          description: Url from where the system can download firmware.
          type: string
        VerificationCode:
          description: Unique CRC check code of the firmware in the device.
          type: string
        Priority:
          description: >-
            It can be either high or low. It is set by the firmware admin while
            uploading the firmware.
          type: string
